(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    321535,       6208]
NotebookOptionsPosition[    318912,       6142]
NotebookOutlinePosition[    319246,       6157]
CellTagsIndexPosition[    319203,       6154]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "steady", " ", "state", " ", "function", " ", "and", " ", 
    "some", " ", "good", " ", "values", " ", "for", " ", 
    SubscriptBox["T", 
     RowBox[{"1", "e"}]], " ", "and", " ", 
    SubscriptBox["T", 
     RowBox[{"1", "n"}]]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalTimes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t1e", "\[Rule]", "0.03"}], ",", 
     RowBox[{"t1n", "\[Rule]", 
      RowBox[{"50", "*", "60"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pssnPhysical", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"c", " ", "t1n", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}], 
      RowBox[{
       RowBox[{"t1e", 
        RowBox[{"(", 
         RowBox[{"2", "+", "a", "+", "b"}], ")"}]}], "+", 
       RowBox[{"c", " ", "t1n", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b", "+", 
          RowBox[{"2", "a", " ", "b"}]}], ")"}]}]}]], "/.", 
     "physicalTimes"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Try", " ", "to", " ", "model", " ", "the", " ", "steady", " ", "state", 
    " ", "as", " ", "a", " ", "function", " ", "of", " ", "frequency"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Here", " ", "are", " ", "a", " ", "list", " ", "of", " ", 
     "distributions", " ", "to", " ", "use", " ", "in", " ", "getting", " ", 
     "\[Alpha]"}], ",", 
    RowBox[{
    "\[Beta]", " ", "in", " ", "terms", " ", "of", " ", "frequency"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussian", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"m", ",", "s"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cauchy", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CauchyDistribution", "[", 
      RowBox[{"m", ",", "s"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"studentT2", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"m", ",", "s", ",", "2"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"studentT3", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"m", ",", "s", ",", "3"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist1", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "m"}], ")"}], "/", "s"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist21", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "-", "s"}], ",", "s", ",", "x"}], "]"}], "+", 
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "+", "s"}], ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist22", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "-", "s"}], ",", 
      RowBox[{"s", "/", "2"}], ",", "x"}], "]"}], "+", 
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "+", "s"}], ",", 
      RowBox[{"s", "/", "2"}], ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constant", "[", 
     RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Choose", " ", "distribution", " ", "here"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distribution", "=", "gaussian"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cDistribution", "=", "constant"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", " ", "alpha"}], ",", " ", 
    RowBox[{"beta", " ", "distributions"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alphaDist", "[", 
    RowBox[{"a_", ",", "m2_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"distribution", "[", 
     RowBox[{"m2", ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"betaDist", "[", 
    RowBox[{"a_", ",", "m1_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"distribution", "[", 
     RowBox[{"m1", ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cDist", "[", 
     RowBox[{"ac_", ",", "mc_", ",", "sc_", ",", "x_"}], "]"}], "=", 
    RowBox[{"ac", " ", 
     RowBox[{"cDistribution", "[", 
      RowBox[{"mc", ",", "sc", ",", "x"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "steady", " ", "state", " ", "function"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pssnDistribution", "[", 
     RowBox[{
     "a_", ",", "s_", ",", "m1_", ",", "m2_", ",", "ac_", ",", "mc_", ",", 
      "sc_", ",", "x_"}], "]"}], "=", 
    RowBox[{"pssnPhysical", "[", 
     RowBox[{
      RowBox[{"alphaDist", "[", 
       RowBox[{"a", ",", "m2", ",", "s", ",", "x"}], "]"}], ",", 
      RowBox[{"betaDist", "[", 
       RowBox[{"a", ",", "m1", ",", "s", ",", "x"}], "]"}], ",", 
      RowBox[{"cDist", "[", 
       RowBox[{"ac", ",", "mc", ",", "sc", ",", "x"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "steady", " ", "state", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realDataList", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"140", ",", "0.191317"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.02", ",", "0.770378"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.086", ",", "1.32606"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.129", ",", "1.84658"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.174", ",", "2.32045"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.213", ",", "2.30471"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.256", ",", "1.67516"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.342", ",", "0.447462"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.428", ",", 
        RowBox[{"-", "0.549817"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.469", ",", 
        RowBox[{"-", "1.19995"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.511", ",", 
        RowBox[{"-", "2.03283"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.553", ",", 
        RowBox[{"-", "2.70277"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.595", ",", 
        RowBox[{"-", "2.37594"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.638", ",", 
        RowBox[{"-", "1.58521"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.68", ",", 
        RowBox[{"-", "1.20299"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.724", ",", 
        RowBox[{"-", "0.711866"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.766", ",", 
        RowBox[{"-", "0.334842"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Normalized", " ", "real", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxSteadyState", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realDataListAdj", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"2.70277", "/", "maxSteadyState"}], ")"}]}]}], "}"}]}], 
       "]"}], ",", "realDataList"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "a", " ", "fit", " ", "for", " ", "the", " ", "various", 
    " ", "parameters"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bestFit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"realDataListAdj", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pssnDistribution", "[", 
        RowBox[{
        "a", ",", "s", ",", "m1", ",", "m2", ",", "ac", ",", "mc", ",", "sc", 
         ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "a", "\[LessEqual]", "5"}], ",", 
         RowBox[{"0.001", "\[LessEqual]", "s", "\[LessEqual]", "1"}], ",", 
         RowBox[{
         "0.01*^-4", "\[LessEqual]", "ac", "\[LessEqual]", "100*^-4"}], ",", 
         RowBox[{"140.2", "\[LessEqual]", "m1", "\[LessEqual]", "140.6"}], 
         ",", 
         RowBox[{"140.2", "\[LessEqual]", "m2", "\[LessEqual]", "140.6"}], 
         ",", 
         RowBox[{"140", "\[LessEqual]", "mc", "\[LessEqual]", "141"}], ",", 
         RowBox[{"0.001", "\[LessEqual]", "sc", "\[LessEqual]", "1"}]}], 
        "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "s", ",", "m1", ",", "m2", ",", "ac", ",", "mc", ",", "sc"}], 
      "}"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Show", " ", "some", " ", "useful", " ", "plots"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"steadyStatePlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", "realDataListAdj", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pssnDistribution", "[", 
        RowBox[{
        "a", ",", "s", ",", "m1", ",", "m2", ",", "ac", ",", "mc", ",", "sc", 
         ",", "x"}], "]"}], "/.", "bestFit"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "140", ",", "140.8"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"140", ",", "140.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Actual steady state vs fit\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<steadystateplot.png\>\"", ",", "steadyStatePlot"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "\[Alpha]", " ", "and", " ", "\[Beta]", " ", "vs", " ", 
    "frequency"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"alphaBetaPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"alphaDist", "[", 
        RowBox[{"a", ",", "m2", ",", "s", ",", "x"}], "]"}], "/.", 
       "bestFit"}], ",", 
      RowBox[{
       RowBox[{"betaDist", "[", 
        RowBox[{"a", ",", "m1", ",", "s", ",", "x"}], "]"}], "/.", 
       "bestFit"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "140", ",", "140.8"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Calculated \[Alpha], \[Beta] vs frequency\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<alphabetaplot.png\>\"", ",", "alphaBetaPlot"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "c", " ", "vs", " ", "frequency"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cDist", "[", 
     RowBox[{"ac", ",", "mc", ",", "sc", ",", "x"}], "]"}], "/.", "bestFit"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "140", ",", "140.8"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<C\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Calculated C vs frequency\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.678109554755844*^9, 3.678109698659047*^9}, {
   3.678109797392377*^9, 3.678110102004221*^9}, {3.678110172876313*^9, 
   3.678110271930718*^9}, {3.6781103136607723`*^9, 3.678110384564151*^9}, {
   3.678110555748996*^9, 3.678110595613209*^9}, {3.678110635669778*^9, 
   3.678110640295121*^9}, {3.678110672656314*^9, 3.6781107718947067`*^9}, {
   3.67811088658601*^9, 3.678110987762134*^9}, {3.678111058126027*^9, 
   3.678111087700513*^9}, {3.678111134467106*^9, 3.67811155407362*^9}, {
   3.678111597716566*^9, 3.678111648799386*^9}, {3.678111873201433*^9, 
   3.6781119823291407`*^9}, {3.678112151594617*^9, 3.678112152064272*^9}, {
   3.67811223808286*^9, 3.678112238314063*^9}, {3.678112316334466*^9, 
   3.678112415562943*^9}, 3.6781850100618477`*^9, {3.678185296708585*^9, 
   3.678185315933366*^9}, {3.678185367500008*^9, 3.678185426604332*^9}, {
   3.6781855599908543`*^9, 3.6781855893120832`*^9}, {3.6781858843511763`*^9, 
   3.6781858846267633`*^9}, {3.678186264688415*^9, 3.678186349363276*^9}, {
   3.678186831096093*^9, 3.6781868316220617`*^9}, {3.678187025641317*^9, 
   3.678187059492992*^9}, {3.678187167000235*^9, 3.678187249444779*^9}, {
   3.678187516755858*^9, 3.678187575538156*^9}, {3.678447572203624*^9, 
   3.678447881599842*^9}, {3.678448401725745*^9, 3.678448408919087*^9}, {
   3.678448531497121*^9, 3.678448534849646*^9}, {3.678448570488953*^9, 
   3.678448591792865*^9}, {3.678448649854322*^9, 3.678448756260626*^9}, {
   3.678448791321026*^9, 3.678448794269643*^9}, {3.678448859797966*^9, 
   3.6784488611872396`*^9}, {3.678448907969296*^9, 3.6784489314370947`*^9}, {
   3.678448962744007*^9, 3.6784490152420483`*^9}, {3.678449173134582*^9, 
   3.678449177705235*^9}, {3.678449260205495*^9, 3.67844933139071*^9}, {
   3.678449493365745*^9, 3.678449494332036*^9}, {3.678449742904661*^9, 
   3.678449751286825*^9}, {3.678451197875252*^9, 3.678451278055036*^9}, {
   3.6784517059436617`*^9, 3.678451706186195*^9}, {3.678451745468429*^9, 
   3.6784517663902473`*^9}, {3.678451845828046*^9, 3.6784518471657333`*^9}, {
   3.678451905768298*^9, 3.678451906992568*^9}, {3.678452703533051*^9, 
   3.678452718809051*^9}, {3.6784528609045897`*^9, 3.6784528614116707`*^9}, {
   3.678452932825321*^9, 3.67845294607977*^9}, {3.678454305309184*^9, 
   3.6784543063214693`*^9}, {3.678454666137518*^9, 3.678454666661672*^9}, {
   3.678454707316793*^9, 3.6784547082345123`*^9}, {3.678454959032448*^9, 
   3.678454959139605*^9}, {3.678454993964285*^9, 3.678454994122851*^9}, {
   3.678455027430066*^9, 3.6784550280233994`*^9}, {3.678455097755452*^9, 
   3.6784550987058477`*^9}, {3.679137593109623*^9, 3.6791375932666407`*^9}, {
   3.679138017713306*^9, 3.679138018610136*^9}, {3.679138383466071*^9, 
   3.679138434939333*^9}, {3.6800100850254297`*^9, 3.680010129035343*^9}, {
   3.680010223183754*^9, 
   3.680010223357576*^9}},ExpressionUUID->"6dd9a76c-57ca-4b35-9f11-\
012f1abb70c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "0.5720864992468871`"}], ",", 
   RowBox[{"s", "\[Rule]", "0.0835606240873301`"}], ",", 
   RowBox[{"m1", "\[Rule]", "140.28577359359645`"}], ",", 
   RowBox[{"m2", "\[Rule]", "140.46805959273885`"}], ",", 
   RowBox[{"ac", "\[Rule]", "0.0002412715680216244`"}], ",", 
   RowBox[{"mc", "\[Rule]", "140.500000005`"}], ",", 
   RowBox[{"sc", "\[Rule]", "0.5005`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.705179533295586*^9},ExpressionUUID->"3a678895-1932-491b-b138-\
e7bd1b41ff3d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{140., 0.07786408018440341}, {140.02, 0.3135360389526301}, {
       140.086, 0.5396929816447571}, {140.129, 0.751539346670268}, {140.174, 
       0.9443996344491024}, {140.213, 0.9379936139590125}, {140.256, 
       0.6817731438487182}, {140.342, 0.182112499398765}, {
       140.428, -0.22376994712831652`}, {140.469, -0.4883674896495078}, {
       140.511, -0.827341209203891}, {140.553, -1.1}, {
       140.595, -0.9669835021107975}, {140.638, -0.6451644054063055}, {
       140.68, -0.4896047388420029}, {140.724, -0.2897222479160269}, {
       140.766, -0.13627730069521268`}}]}, {}}, {}, {}, {{}, {}}, {{}, {}}}, \
{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwd2Hc81d8bAHAhhJBNMss3ymwqOSJSUZJNdghlZlUSiawkZETKjIyQJBwi
oxCSrGS7935uCsmKfs/9/cPr/frcez5nPM9zzrkSdu4Gl+jp6OjU4A/t/0wj
Cx1dsK06sXpV6MCuSkRvmkRPDzaKf+GrbFaJRKlSmxnB+3QubTyIqUTGvIiV
BfywR0YsYKkSNTtc4+UCR9+y957/9Brlbh7fLQ7eSE/7MPnwDXI4+fa8Olhq
XCx3j0stCh7SMdQAR54m5EULa9Fj9z7jE+BOlYQrN6m1qPfRnIUO+ChlmCnU
ow5pkv5z1AdP11rIvLyJkeS9hEAb8Cfu0FH7vno09uFKVjD4rlnUmUCFRsTi
otkdAtaiJySQeSNS3CL07w44poTbWzusEQWfbDK/R+tvUHmEyHAjEm8S5o4H
3/ihojYd3YRsaluCs8ALdtaepNX3aLREwqoZbKozH8nL0oa+J3wRZL9tq/7Z
2rw3fvgT8npdLsEBfm0inH9nSxdiGnwgywVuf5LN9HVnF9ordlaVF8x4NulK
vUUXCnzebC0CrvAIqcz80IV4617n7gU/e/S8yvVFNzo9k7JfD7yuK/atJOgz
qlCx0o8FH9tq026t/xW5v1xf2Rpiqy6+o3E1a/N3ZH6EKsUFPqHaWRUh/R1p
NQ7qcYP3bnuoaXfyO9r+5fVTfnD/XsXE+YjvqGXZ85QY+Kjl3W31m0eRmPp0
siLY+xSrDUv4KPrU2XnoAngmNjP2cegYUqA+uZZMe+4Ysu+d1QS6u5wUmArW
OH1n9YfrBBpmjL31GPxbrVmEM2ACRey4cS8TnD7Soan0cAKNnzVNzwfHR/mM
LjRPoISXXO+rwCb1FNPLeyfRqu9t3gGw/2LAv8HZSaQf6i80BG6df6qRuTqJ
8u67i34Dy44fnjJjmkKG+Rd3j4EjwmxUCnZMoaIBFVUyOM77YV3dmSlkozpv
vwIWjOr5U5EzhZo32ZcLhdqqO/pEunTqT6PdQs8mtoPb+n5fXLaYRlGKYzyi
YNL989G8TtNI39raRxIcckkiR+rmNBqssTiwB9w/EyiRnj+NfvgZvlYF1/ru
rqNbn0a8s1pvrcGWQjUvStJmkO/mMMIWzMVb/VcmZwYNiDRtdwD/OCCl8qh4
BmWc0bjhDOb9ih6dbphB/z1XO+YJHrz53ye+6Rl0xOEQDgFPHm+u0pIjIdvB
3Y05YHc9P0fdMhLi0lMk54FbfrU3cFWTUB0+xFkA7i7nz2prICHhHG2LYvAp
tyVRoW4S6nF3WKgEe1n/3Kb4k4Q0NmdKtYJr3EgvtGXISFJR4A4FfE6mZu5i
Ihl1PRMtoIL3fBVJbk4joyA+6a5Z8OdrNlt2PSOjwdX9Igu0/u51utZYTEbx
7w0q1sDFjilx4S1kRG8RO8l+B8ZbvVZ8YImMJsI2aymAc7NT97mfo6C/1/m0
lcD0soqnzhhSEL/XrpP7wNPPDe+LmVGQjpXWqUPgFOtHH0vtKKj4YJgeAudc
MenzvUZBgTOMxufAgc2hhY9SKIjrFKOTOxh9cZaxGqYgWcTr7An2TtcyOTtK
QZoHdl72Bsv8qk46NElBvhInXP3A1yPI9osEBQ2thLrfAtsUoRnRNQrKLWDw
vw8WVaAQ8oIEUmVnuFcC5nP5ZeKqRyC7rRavXoKvttqqtusTKJyjfKwcvNfE
rWuXIYF6uOyPVIFjeyTEG80J5MzXSNSDR5qZWPKcCPRQNPRsD7ip5SSnUDCB
qsSGAnvBG68TXzKHEmhEfF9eH/iYS6PVzzAC7Zaa+DcI1tguPPs8ikB1/2m+
nAAXVh11bU8iEEWRgXcRnNhmtfShkEBcyhbqS7T2O+/d0S0m0IF95W4rYEXT
ikstpQQKPmD/fh08S27d9/wVgfiPNPoyhdmqb12XvLwDE0hDM3RAAOxvNqb7
sQv6f2JoszCYKWDp40QPgWK09imLgNP1kr8s9hKo/+REpDiYTzj6IdMAga7q
aqrKgDWupTEMjRIoxYjhyRGwQ5lPw/mfBJIdtM9VpbWvtuYw84tA1VZNRWrg
PSPhd/3mCTTsFFajAc6fmtIJXySQeCDz4Gnw/qoFwmGNQC83nMZ0wSFrek87
/0J/Q1tJZ8G3EjK+KW8QyD763pIBuCEucpZCR0W5GWx8FmDd4xp3hZio6JCU
m8hF8AqPc4QJMxW15rVLWYPfpnznj2OhIkppjLI9mLfIdvAXKxXJNXLqu4IT
pycYPDmpqO6kh8kV8EcrOc9QLio6295l5Q42cnjgFreNijy+PLjiDb7cGbQ1
lYeKKmZ4oq6DpRUKF1wFqEjLzSf+JpjjG6nDQJCK+n71ptwC39W/vn+/EBUt
rSTmh4LrHYuzp4WpKCLoT0kYrf95+4peb6ciQQaT1+Hgq7N9KFSEio6wCzZH
gcde5NCxilLRxzj/jhhw0yYtufdgS76B3vtgVgnKaKAYFQWJpk48BGuuxw98
EaeiBkWRTY/Bd2pcF05JUZHBqxssGWCqYf7RAfC4yjfOTPC2PCF6+51UxKiZ
IZpNWy95GUbHXVSU2LKxKxf8dBtV9TtYWtdaLh/MKSA3ayBNRTpG4qovwO8+
DpbL/EdFAwPBmsXg5Lz1pmiwi9XY6VLw8hY2HQp4dfy4QRn4WdHRoxq7qSjK
6ZlZBdg3tfpxAliESm9bSWtPNsdlDPzCw965CizEzZa1W4aKji02uleDjzjM
arqAOwN2+tWA51I1z+SCC8z0fOrA8/5vy4bA4Sq+nvXgP2HeFWyyVOQg9OTq
O3BpuunZg2D1lRbXJvDCrjNBFmCRgV/OzeCXfGIa18ErVUKOreCItbRHieC+
ZA37D+APjDdvFIDL/F1t2sHFjJ6zb8CxpgkXO2nrc12YaAS7Hq417wKrPeH0
aAXrCE6b9IDDbQYDW8A7lzmMesEK15ZZGsB0/YcM+sDPrYYEXoGHX9uc6wd7
eJGys8BVj+7pDoIvjPsXRYMT/cpODdPyqWlA3gPsZTKkPQIW26ErfRZ89hDj
iVHwpSnGB9JgWQG54+PgET45txWYH6YlI7VJ8GjxWEUzeLwv6Og0+GfDPudY
MK7MO0wCbwTuDtUH+/uuKFPBdmc/TzTC+hgaSyrOglcfm0pdAysdPCP3C8zC
IVYnDqYsPv7vN3iyPnrZEda/+cv7nX/ApNScB5vAWa9mJZbB9t/G/ZMgniyv
qYv8BaMs+Z0lEG+HjS4LbYDLbxiMKYP5DsTz0921Ve+7/X6kFOK18/cEFyPY
Iko7Og3iuaCXnYMJTOHnPMACvltxgI0FnLaYxukuSUXIJ3wzOzgr9+/pPRKw
3oal9BzgPVgpOxjyZXnfwD9O8NGeH2JdkE+lC7KrPODVZyfcL0K+SXp3zm4H
L7BzrytCvm4YLBE7wBelPVeNIZ+HlMXJYmD1Bz0rvpDvCfOeE1LgwDNxP7Kh
PjB58fXvAb+xtlKogvoxfl7tixw4+F9wYxE3zLeSU48CuPdYyMF0qDf+c1Xt
+8AuSZ25l6E+kT0sG47SfEFWvgrqV49FB/kYmJtVc5vtFiqq1lbjVgf/czGK
o4d6Fykibn8CbCzqcUphMxXtbZ1g1AMvzc4tyv8jEG+5odw5cK57PvPjdQKt
p783Og++WiEZsgnqb6d3Xq4R+HjoSNKrZQJ5iLnqWIHNM7RDG+YIZMo67GED
Zs3RFJuD+n98UTfFDvyn99MPwVkCcX+UpziCDTjymM5TCFThOx/lDpb9F2hr
N06g5Y6AT8FgwU3sbgzdBBqtoiyFgEUrf38p6yRQW5aFeBi40Ftxw6ydQKkB
xzzvgX1cjFzvt8D+vWsTTzx4qjBmPLEW9r8bEcZZ4F+v+4NY82F/c1oJygHz
O40oKecQ6LyBS14eOOVxr/T5ZwSS3K27XEhbj6X8Sp/HBGr6zJlaQevvvviY
83EEYtnz6Nt7MH2h+BYLXwJZpnCNtYBDo3Sq5LwJVMocOdkG5rNuN192h/mY
vEF0gNmLL1lfu0ygvHS7lS9gvQsHi7ZaEkibS55vGtzxKz72JYLxBOUJkmjj
Mz5uSqdKoFmquAiFFj9RDoXahwmU2MYjNQvWnKr7/EaRQJMhK4p/wAf1Da+p
SBAodLFJlyncVn0XMXAmmY5AffZq+izgPzIzGZZ/4bzU8/oCK/hr6XcewWUK
6ikuMOcAq7ianPb5SUGSznHO/GCmrdJHGr5RUP2gxR1pcEhewbu8KgrawPNv
tcGZMyu7gpwoyEqlgqID3n6SuT/XloLqyq4JnQGbxmmfaLKgoKCcZd9z4Ic7
kpW+wXlwI3JDyRRcEBdVcvcQBa0bseZfBqOBbRtljHBeJCQSosE8cvPjZ5LI
yPLSxLtYsFz6MeZN98moZiR7Lg5spHTyREE4Gd3o/u9cItjvQepavz8ZrVXK
sWaAA1s82PLMyWj1tkpwCXjztFsQgwgZrQicd+sBjxT/dCpPJKFs6mBcL/hg
ntCebTEkpN/g8KoP/H5QxMD+Dgnlu/hvDNI+rzHTNelFQsa1T+ImwAZOWXWW
50iozG624jc4Z2hFS5KJhFyKotb5I2zVrfdtbtzuOoMGNZpjLcAo92DnNt5p
NJdqGnsRnPriS5HnlmnEskCJsQb/cb7e37oxhQ5mccbYg/X9dA9cJE+hBwxm
Ua5g003T4mJ1U0iniQi/Dm6a5m/kcpxClVrbbqeBZxt2G62UTKJ4HUvvIfDe
oLeq+fIT6Ny2RRnHezCe5aBVwQvf0URF8bMZMOvm4hqjhH50fbvrD+9IqF/K
lZZTD7vRqqFawTp4vSWAUz6kGelfVpYJioL7wLH1bFG916hAXSZwSzScP+yY
s2Mi3dHQvHpMFFi4uTb+0PtyvODnzs0WA+ftRB3hyYgmzFmfeTkR3JugRGTd
7cL0E/Mh/LFQ34nxqYjRPrzaevLqM7CjnlfiIckR3H+7/OOe+7A/Hd+m8jNp
HP9XodQuB34rddc7I2sc+06XtCuAF/jPt+uUjmOeMy869oELo3OTY9vG8Vne
nE9HwdusieHhtXH8Pjfp8xnwVzHN477WE7jsY8CQK1icvpOkKDmJY/jUiUJw
vcGl7rz4KUwyYBIoBt84f4s7OWMKa8S1a5SCB7g6Q4IKpvAyq1lqBZh5Nbda
7t0UdqDzOlULVsmo4+Gdm8KqRFZeJ3hFwtpiUXcaU+qZHebA529+r6v+O421
NjruL4C/qfViM+YZnHk04e0i2KNCOe7HthlsXCnOswquZqG/tSA9gxsKVd7R
x8F5I7+11k9/BicnuYrzgtPWVNMtns5gbbdPwwfBpWNrYpePkDC7XMbEYXDD
yfq1FQ0S7vnhRjkCLhqICQk+Q8LW7qzLauDBpqP3rlqSsL+XFs9JsKFM/qnO
myRc4P/2lAlYY+WyT1odCXOE5VX6gc8cuvf48mEy7tXyrQ0AM/wtOlaMyDiV
SavpOu37nImhJG0y/i9ivPsWuKbmFKOaERmrR+34EQ6O/npi6xVPMvZ68FAq
GXxovF7+Wx4Zf02/FVdFe5+zIp3wVgomveGPqQbn+Drxr3JT8OqXons14Ms6
JkldghQsyjEcUg8mPaVM2OykYMegw9dawa5zUnKcRyn4t9WcWT848zezQ64j
BTNdjzAeBN9xGdr105WCBR+JXRgGyyQ5pMp7UrDqJz3dUXDx3uqSB9cpOBQV
qJHAsnu3bCffp2BucXupZZrnjyeNVVLwTtVVsVXw35fWS4/eUvBB0wcif8Hc
mj02WvUUbB6H+egeQPw4BdqHtVHwUzoRFhbwvhtsbalDFKw41ksVAKeFUw+J
b1Dw2WfalYfA8nuSGOpVCezWtmtEBXwhmq/npTqBI38xMqmClb6O/0k5QeBm
tUYjdTBrb6u9ni6B1YbQog7YamCq6LgFgeV4Vfabg2euRos7+RH49FFBS0tw
xLiV5LtAAjvbLYVagftGbv/lCSJwdumrz3bgsPS95o/vEFhET9nbFZxn/C5d
/QGB2e/uKbsBdrF/cX4kn8CyRayDQWA3NoPMgkIC6/SSN90GV9QWn7xaTOA7
kvnnw8B3RTnrh8oJvFa3cy4G7CD3Ulm/jsCUpR2KT8DHLHUmc7oJzCK2bvIU
/Ibf0474TGBp7eFbWbT5cTep2N1HYLuE1E95YElJ7rnIQQIPKgq4l4JVHqDH
s+MEbrvMVdwAnnB3ZlWZJ7AB73JpI9h8rmZjdIHAw3Xfy9+D/7SuHw5ZJPAs
T8mbNvCktU1i6TKBeev03neDjQsj7tZuEDjd+UDrZ3BZnZmmIh0VS/Ps+Pjl
/+N39Xy8iYpVnKldA+DH+ucO2jJSsRV31PAYuM2M8ffjLVQ8U+P1fQKcHcLY
PsRKxR5O5uNT4GAjXTVedioOrZEhkcH5X29u9uKg4nzH1oU5sOpGfe4YNxUr
bSv9swCm/E4b+MFDxdVvH60sgnM8dDsWeKm4g8vp3wq4W7l0yw9+Kp6v3sxG
Hw/v+15rlChMxdcv/djKCFaQaOPw2E7FjFxfuJjADecfvTghQsUCl7L5WcGn
R7PyhnZQcSZntBA7+BKP+dYMUSqWrfYW4QBHNbxzNhejYlVOTUluMDYT29Yg
TsXNb2R38YJ7KxUdXSWo+JwD925+sK+RQgOnJBXbvRmTEwZ3d5Uma0tRMWHf
pigCfjL1WwTul9iH4+U+UXDqg/zKSzupONw+WEUSvEffRuXKLirm4nBW3Qne
9LxFhgROrTqHpMEF7JfULkpT8YutYlqy4PxrYeMH/qPig1VMOnvBsQfYA1LA
2G72tDz4uGXX8SVwz+tafWVw2P6Hfk93U7GFXc6F/WDlxP3ED/Ake4zxQfDh
HNOM/TJUfPW1j9lhsCSncsI18JKtpeUR8J2dM59KwcHsJ6xVwRd6HxhOg1lf
77FTAx/MRLv4Zan4oS3PJXWwSfzcCXWwCPuakwaYbv/jSgdwWYNs0gnwQJFN
dxj4pJ95kzbY4rm3diZ4eG/kvA54+qujUAXYa/yN+Bnwgnu1HtwHMXMy+axe
PG0/+zYN90X8WE/o5jlwLd1eEs3KDKcKz4P77s0b0j7fUuU/cAG8FOqiSGvP
8mo+szFYcf3tTdr75qX6D5iC11TX0V1w+ACzgzk4s0o58BKt//cPxVuCI5jP
KajR+n/Cqd4KLNavbMdF6/9q0qwNLZ6mXvANw3wMlzSL2IP5iQDdp2CvS39O
XwI/fXxiiw2YZbt0gBOYMTXnrCA4vcso7zJtPh2lxD7AeijfDfviCn5wUfkm
3B9x69FXDFfBWoX7XYXBF+cmlTzAxPFAogrWdz6X18YLPNylTncevIPbp8YX
bMhD/XkF4qWsJYviD74Z+atzHuJJ5+ZnwevxtHrx6rQn2IukfO0W+FPqopgF
xCNLhl3Wbdp6oPUbzRCv6Rfiu0Np8U8/cnMPuLVuTi4CvHfCz3Mc4t/KR8Iy
ElzCLuO0H7wgcz4ympZvNllMcH/Eooml03G095fz6zBCPnm7uj9Jiaf9vv71
dz3kJ4vEk440cHX2PrNRyN+Mvs61dNp4yqrcV4TgfcflTZ+BmQxYKgUFoT3B
H1yFYBnGPa/ZoB6Ud4igIrD6l7qaZagfOqG6V0rAg83S/t+3wftmC9vKwTuV
xrhSOaG9JpeQGvBVxeHWRqhP3p6khQ6wnZcdG/kfgX0KxNc/gReLC5wioR76
TJgy9YC/8LBoSK8T2NeoTbCPNj/XQ67orRLYX6Xg2Aj44mxrqNlvAgdtcguf
peXL2aBMpxkC3zqSHfeLtl7ZDCalUwQO9h5OmafN3wKz38IEgW9P6b74Q5v/
EReq8yjsH21y3RvgK28D/LgGYP978FOY86Gtejsz90H9NgJHffhv5zZwH5tj
nFoLgaMZbOR4wJ/shZX+e0/gmGtdSAAcojN2ZKaewHFmLx3EwFM/XSUkqwic
JOFdrABm/2bwKDiHwE9f/jmuD+ZvCd/Reh32B60ldQOwvtdpaeYAAh8ZXEKG
4I/l7sfVfQncQ79yzBQcs8KekelBYEbDNRUb8MXleT+hSwR2/PNPyQP8w+Et
noH9ec/RLZJxYI3Ap8m9AjBfn7ZIxIMpD337dXkJ3GTPKp4ALvgjF13HRWDL
aDbRZDCTmc7h2C0Ejv22VTiT9v3Dzf++rVLwr1vc3KXgkv882I4MU/Crpu30
XeCUiqnu1ykUzOHgsLcH/JVNd3E+Ac5HDEXGveAHbkzeu+IomF9DrbAf/GSn
rZnHXQr2xzaGY2De5Qs9j73gPFSdkzsP5rnfZaBzioLflSic4UuA+0ehtmru
TzIWPud/TQD8SIXPpJpMhviqfyIEZqUWJzVNkPFOOYPfO8AKN05avP1KxmEF
PunS4MNR3wYUMRnr5Lz5eQgcb/IuVTmajDtTNRPMwdsNj66eFCXj+NqEFEsw
9YKbZYQAGRuPTmVYgflNnzBhLjL+tiviuR1Y1uTYNk4GMqaWtte5gK12x/Oo
zJAwa4sRORBcKh8XVFREwtoLTmpp4Fc8KtQRZXjO/0YzHZzmVGTTL0vCnYdZ
Tz0Br3mvb2+RJGGjoBcXssBht0ZP3eEmYYctc86F4GJ2StWNuRkcIhb48C34
V3pwh3XRDK47E00aAscmTcq+E5nBsQG7hEbAbyz3eMVwz2CrvLpTo+COHO4j
Z1hm8Dr9XMEk+IP1h/0ZC9Mw30ZXfoDLt3mqPW2bxm93i81vgBvub1wX8J7G
VZvL1iQSIR/ZRuuK3k7hMvyVwxn8UpZjPE5qEnfqqBxwAf9p4aVT4p/E5O5U
CzfwnhIFnyaWSSw+eTHfA+zn8CLi/Y8JHMsyeTwALKBXkqb0egJfPv/LJxI8
ek7pbM3JCSw+wTL0Alx9P+XiZptxHMN0JG8OfOJXs9SY5yhGu2s3eSXB+Ysl
Wves4gDuQe7yPuCXwZQzCRwD2MFEwsIXrJpfET5C7ceRd8MqAsHGgfLit5/3
475JPadQsHZ0dROLVD92ezrSngC2e8kg6inwFacK0yW/Bt9NP3pBgOULXmTX
lF8H66ryt4lt78a/89YP/AOXhSkzC/7rwvMaVcc2PbJV58yPyNw10YVn/eX0
NoN3frxefLuwC09PCrhtBWupFz3SONaF+2uoz3eAqVdUOCQ+dOIat6RdauCi
d6Xh9LEfcTXzeTl1sIzsizu/LT7iqmdsBzTAN7hz9bbLfsSv+oNPaINjlQRl
WVo+4OITrvZnwWK2HWyXGD7gTBH1p1bgh6ZHO43vtuLQdrLILbDLprmjeyvf
4/Z3bsK3weH2Y8FTUe8x/5ufAqFgtsKxqS+273FBziJ3OPiJwE4tS473uCdo
05b74KD8qkg6lyYsriS0mAH+epxzU9GeRlybqNNRB9ZpsHsT2V+PmaI/fqgH
070NyNj7qh7rh5xtfQdm2XHo0Ob4ejx51bCx+RHt98Xwfea69Zhdx+ZNJzje
YZKQCMfYfNUvZwSMNrEUH/KvxUtWeTc3wCS9werM52+wro1XLl2yrbq7nz7S
cX2Dn9ke+0QPFpJ7v9tJ7g0+6/BZnBksfs/m2pbyKpx7+V8jJ/i5MEvp58bX
2MjHhFUCjDPsJATXXuGCa5L7pMBHPm7M/Gt8hen8fljsAico7cw1iXmFXwSE
FsmAZx2jNhtJvMKMt0r0lcFRitkMAWcrcPk95kea4IEYvo+/asowS1QP1gKb
qfd8Tokuw1bR6aSTYH6fZ5cKLMsw6/19R3TB5ho/f/1bfwn3C+tvhuDvXjsk
rmi9xNuevJZyBNecUijP7ijB7hVOpRFgtXzz5pTvBVhR5WhFJPjKus1oYFoB
nq/lqIoGyxalVPwyKcA+La9wXDLtvrv9c1LPc+w/yPApGWxX4EUu68zHIXSZ
P/LBnhFVNy3GcrFmmPdcAZj9coaCUG4uZmQ9ufgC/G9XwDdL11wczjP7txQ8
T8cd7bWUg6OlVdnf0Nq/d45ay5eDk3T7ZdvAl1qCnNhdsrBJd6H8R/Dn1e0K
dQezsKDxLeUO8NO/SRUzDFk4zVr6SDeYY9HtdsaTZzjTy+fUAJjONY05dPgp
LkjmciaDxz6vPrjsmonrJnVytqTA+Pbcq+wqScMhjMJTbOAnXHOGYhZpWHsn
sZMDXBmUKmDCnIY77GOyucEf52dyA+xS8fB4d9Z2cJb5dbK+VApeGzV/Jge+
57qoHdKRhOvo9o4rgCX3JkhcvZuEQ8TXJZTBQouJm6XUkzCrzZOnB8E3iwov
jL5KxMLfJzIRrX2Dh1k+BQn48De3J+fBxz6uprlWxuO/f499vwDm4rRQZrse
j+tFOMWMwUcT+BaM1eOxjuXLDHPw4HcPOWr7A2wytJhuDx5L3PJp5Ecc9h0I
enwNrJOcLbGQGouPrJwb9gPbpw9ckT8cizcEJUQCwT0nm97F9sXgMNPGtCBw
UbtTXBl/DE74ypwWTnte52W6PzsKmy71D94Dx1AULLVOR2ERgQLhaLAw6ft2
h7lInG2smxoHro22fYw1IrGz747BePBn6YGeP9R7eG/SrFAi2CsopFQx+R7+
9QqbPQLrh/HecjlxD5d/iUtJAbdyK8Q+nYvA/wMHYLqD
        "]]},
      Annotation[#, "Charting`Private`Tag$2153#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{139.98803125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Actual steady state vs fit\"", TraditionalForm],
  PlotRange->{{140, 140.8}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.7051795336843977`*^9},ExpressionUUID->"1142b342-f713-4ba4-bee8-\
101f44d4afa4"],

Cell[BoxData["\<\"steadystateplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.705179534032387*^9},ExpressionUUID->"3e30266f-364e-4505-83ce-\
86a240d4db7f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EbpYg+uR87ImvHgfHhODnhxjOs5TrQn/A8mvuyo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2582#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1KUnYNH9IcKUJh26r7li7w8uSknfl+mlRt4Dmu8CwcaPtWrozalRgml+TRB4
ofT956d/j6IeB0fqMLDtf14aayxHkUL0Tto7sATa9px/dBhxTlIOZoFNKej8
wy0okay1JXEO2PzbkOLlw5To1loz/6eDeJtSyit+okBBFK/tC8EZXa5fd4go
0PYZJupKcLaEhcFONgH12HNdagfbe812lV0iRb93Pe92gH9fHpNd2CBBR32n
Xv0Au1BoTHF9IkEKUWkDveC8f2j4LQ8JyqsQsh8D7wjnGSEWYvSKXDptFXwk
PFNKX3MPY2RITv9zkB9iJ4T+m97FojmoM9fAF4k2WINddrF0yYmsTfCKuBvm
mLGD1Vv65xG/Nca7Gg+drmfZxrbaBirowLOHiNwixDaw54MKVQzgAFmJPYfB
dYxyLrua6e3B9xHqiZ6/WMeYiL3qjoPbzejOHR3+h4mcP9PEBY4bEeQPj1rD
LCJcu0TB9Q4ZU7jiH2wpabr7PNiEykZabP83Zp97rfcCOFdMoITl82/sedOp
ASkwo+Tbl3liv7GY7ebRS+DRs4xYx7lVrPMO24ImOHBu9CNKWMZ0rX0Wr4OP
ieSS9QsvY2POK0s3D/Yzy8a7V72ELYXUr+iCn9X0HOmdXcQo663/GYOV6t7T
SigvYEiggtgWvNLTf+2xyhzWiWzO2YN7beV3/8zMYma3uPQdwWeMDnss+8xi
/j4vClzAdA66Ty40z2A9U+p3vcDx/jNOzmbT2P2d/bAXYJYrLS/4qKexHYa8
al+w7InPQqdKpzAueWbWwIPxs7t7f+mnMOv3Iy1vwOS0bDJO3RPYfknw5lsw
zyG288wvJ7DQ73J8UeDmWM6Bkf8msJL9VPdY8IVoq1+DmeMYqaGNWCo4tO9Q
HE3oGBbNShRZDJ45LN1SdWoYExLLqy8FV6rd2TXNGsKqVc1Wy8Cqw1+sRySG
sBnnxsvVB/flE2EprTmIifYG7zaCSRfe7nRG92P1y3KCzeBhuwpfa9F+TJt8
TbsVPLit8iqtqQ97ekE3twP8o0jEaH6vF2sM4zIdADcUXjL969qD6X/48XoI
/JFH9s4qew+2XPuifARcIjD92aiuG2P4Pc80CW4R9QzxoO3GDDXyGhfAwgsm
dMJlP7C1I/Lndg+e50u40Kfegf1N272wD1b+shyrRdWB/ZYr+Y84AvonediP
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2582#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {140.00000001632654`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140.00000001632654`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Calculated \[Alpha], \[Beta] vs frequency\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]\"", "\"\[Beta]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.70517953432281*^9},ExpressionUUID->"f09b6f6c-a94e-4215-bc21-\
66672791775e"],

Cell[BoxData["\<\"alphabetaplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.705179534601653*^9},ExpressionUUID->"5867e092-416c-4062-8cb9-\
c37d57c4b1b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxNzlkowwEcB/C/LZrMWa7sRXmwlJXkjj8ySrGJF6TcljEsCbnNvRnmmNKY
JNQcG8ktR25Si4wkCuHBhBwTnn6/h2/fPk/fr3OKICadQhCE51/++3aNRhCV
yaTFyNf3nIIVlBY+zyWRr3ZyBiuRL2VaB3oVWOObxJEgCyYNH+bVYNajorAH
edMoVe1YA04+c10bQr4WGYexasEBdGrjOLI8jqrwE4EPil2KFpDv8xJX/evA
NLfuiw3kn2X9PLse/GHP5R8jn4VsShIawO0RiUIdcrT1KzOjEf3VqJS3yKVO
2U/CJvBnbOCoAZnD82CWN4NHSWaJaQtYpyfFzcgvRQIbMzHYcqWf14lMudZX
20nQ3lZ4rhL5tEq969YKFtuSD2PIbP7huZcUfNJXIZ1FjlKyZ7zbwNs8K9Uq
MoP+lRnSDhbm373sIw9MvgVzOsDT606UI+SD3lBZvAy8FNlyp0OeWj6xyOpE
/038hp+Rg1wXjQq6wK/0UHcDcs3ePaOiG/yeNFz2gyzQZE409KD9m4ghUznY
54Kv4CKrtVK5HPkXehqsPg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2799#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {140.00000001632654`, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140.00000001632654`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Calculated C vs frequency\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"C\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, {3.680010100054582*^9, 3.6800101300985317`*^9}, 
   3.6800102244250526`*^9, 3.682854888201662*^9, 3.701125728005958*^9, 
   3.705179534719255*^9},ExpressionUUID->"c6975d31-b1fa-4c61-9b73-\
5460205a1476"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "take", " ", "the", " ", "equations", " ", "for", " ", 
    SubscriptBox["P", "n"], " ", "and", " ", 
    SubscriptBox["P", "e"], " ", "and", " ", "make", " ", "them", " ", "more",
     " ", "\"\<regular\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"constToParam", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aa", "\[Rule]", "aConst"}], ",", 
       RowBox[{"bb", "\[Rule]", "bConst"}], ",", 
       RowBox[{"cc", "\[Rule]", "cConst"}], ",", 
       RowBox[{"dd", "\[Rule]", "dConst"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aConst", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "t1e"}], "t1n"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Alpha]"}], "2"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Beta]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"bConst", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"c", " ", "\[Alpha]"}], "2"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Beta]"}], 
       RowBox[{"2", " "}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cConst", "=", 
     RowBox[{
      FractionBox["\[Alpha]", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dConst", "=", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      FractionBox["\[Alpha]", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "These", " ", "correspond", " ", "to", " ", "coefficients", " ", "in", 
     " ", "the", " ", "decoupled", " ", "equation", " ", "for", " ", 
     SubscriptBox["P", "n"], "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "a", " ", "system", " ", "of", " ", "two", " ", "linear", " ", 
        "first"}], "-", 
       RowBox[{
       "order", " ", "ODEs", " ", "is", " ", "transformed", " ", "into", " ", 
        "a", " ", "single", " ", "linear", " ", "second"}], "-", 
       RowBox[{"order", " ", "ODE"}]}], ")"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simplToConst", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aaa", "\[Rule]", "aSimpl"}], ",", 
       RowBox[{"bbb", "\[Rule]", "bSimpl"}], ",", 
       RowBox[{"ccc", "\[Rule]", "cSimpl"}], ",", " ", 
       RowBox[{"pn0", "\[Rule]", "pn0Simpl"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aSimpl", "=", 
     FractionBox[
      RowBox[{"t1e", "^", "2"}], "bb"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bSimpl", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "t1e"}], " ", 
       FractionBox["aa", "bb"]}], "-", 
      RowBox[{"t1e", " ", 
       FractionBox["dd", "bb"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cSimpl", "=", 
     RowBox[{
      RowBox[{"aa", " ", 
       FractionBox["dd", "bb"]}], "-", "cc"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pn0Simpl", "=", 
     FractionBox[
      RowBox[{"-", "bb"}], "t1e"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqnDecouple", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"aaa", " ", 
          RowBox[{
           RowBox[{"pn", "''"}], "[", "t", "]"}]}], "+", 
         RowBox[{"bbb", " ", 
          RowBox[{
           RowBox[{"pn", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{"ccc", " ", 
          RowBox[{"pn", "[", "t", "]"}]}], "+", "1"}], "\[Equal]", "0"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pn", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"pn", "'"}], "[", "0", "]"}], "\[Equal]", "pn0"}]}], "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solDecouple", "=", 
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnDecouple", ",", 
       RowBox[{"pn", "[", "t", "]"}], ",", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "simplified", " ", "aaa"}], ",", " ", "bbb", ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnSimpl", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pn", "[", "t", "]"}], "/.", "solDecouple"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "constants", " ", "aa"}], ",", " ", "bb", ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnConst", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnSimpl", "[", "t", "]"}], "/.", "simplToConst"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "actual", " ", "parameters", " ", "\[Alpha]"}], ",", " ", "\[Beta]", 
     ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnParam", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnConst", "[", "t", "]"}], "/.", "constToParam"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubscriptBox["P", "n"], " ", "with", " ", "physical", " ", "time", " ", 
     "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnPhysical", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnParam", "[", "t", "]"}], "/.", "physicalTimes"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Some", " ", "real", " ", "data"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnData", "[", 
      RowBox[{"a_", ",", "c1_", ",", "k1_", ",", "c2_", ",", "k2_"}], "]"}], 
     "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "+", 
        RowBox[{"c1", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "k1"}], " ", "t"}], "]"}]}], "+", 
        RowBox[{"c2", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "k2"}], " ", "t"}], "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2.70277", "/", "maxSteadyState"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140086", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.32606", ",", 
       RowBox[{"-", "7.48407"}], ",", "0.00116616", ",", "6.20027", ",", 
       "0.00116616"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140129", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.84658", ",", 
       RowBox[{"-", "1.78546"}], ",", "0.0021399", ",", "0", ",", "0"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140174", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"2.32045", ",", 
       RowBox[{"-", "1.10749"}], ",", "0.0124691", ",", 
       RowBox[{"-", "1.07449"}], ",", "0.00310825"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140213", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"2.30471", ",", 
       RowBox[{"-", "1.18262"}], ",", "0.0156939", ",", 
       RowBox[{"-", "0.883323"}], ",", "0.00341633"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140256", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.67516", ",", 
       RowBox[{"-", "0.84578"}], ",", "0.0265268", ",", 
       RowBox[{"-", "0.696076"}], ",", "0.00398314"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140342", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"0.447462", ",", 
       RowBox[{"-", "0.16541"}], ",", "0.0406766", ",", 
       RowBox[{"-", "0.233527"}], ",", "0.00479694"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "solution", " ", "from", " ", "above"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnBestFit", "[", 
      RowBox[{"f_", ",", "t_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"pnPhysical", "[", "t", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", 
          RowBox[{"alphaDist", "[", 
           RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", 
          RowBox[{"betaDist", "[", 
           RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
         RowBox[{"c", "\[Rule]", 
          RowBox[{"cDist", "[", 
           RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], "}"}]}],
       "/.", "bestFit"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Try", " ", "to", " ", "graph", " ", "this", " ", "solution", " ", 
     "using", " ", "the", " ", "best", " ", "fit"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"comparisonPlot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.174", ",", "t"}], "]"}], ",", 
        RowBox[{"p140174", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.213", ",", "t"}], "]"}], ",", 
        RowBox[{"p140213", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.256", ",", "t"}], "]"}], ",", 
        RowBox[{"p140256", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.342", ",", "t"}], "]"}], ",", 
        RowBox[{"p140342", "[", "t", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "2000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<140174f\>\"", ",", "\"\<140174d\>\"", ",", "\"\<140213f\>\"", 
         ",", "\"\<140213d\>\"", ",", "\"\<140256f\>\"", ",", 
         "\"\<140256d\>\"", ",", "\"\<140342f\>\"", ",", "\"\<140342d\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(n\)]\) data (d) vs \
\!\(\*SubscriptBox[\(P\), \(n\)]\) model fit (f)\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<comparisonplot.png\>\"", ",", "comparisonPlot"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.678103977321238*^9, 3.678104015102353*^9}, {
   3.678104357411366*^9, 3.6781045443435163`*^9}, {3.678104584993827*^9, 
   3.6781047160090017`*^9}, {3.678104755550151*^9, 3.678104849535261*^9}, {
   3.678104921694193*^9, 3.678104923515424*^9}, {3.678104992617732*^9, 
   3.678104992780658*^9}, {3.678105262995206*^9, 3.678105458897114*^9}, {
   3.678105526530949*^9, 3.678105577734363*^9}, {3.678105642641563*^9, 
   3.678105697289454*^9}, {3.6781063511818953`*^9, 3.678106392772296*^9}, {
   3.678112189270574*^9, 3.6781122632396812`*^9}, {3.678112444551292*^9, 
   3.678112506080618*^9}, {3.678112550930231*^9, 3.6781126387631607`*^9}, {
   3.6781126861891603`*^9, 3.678112711346023*^9}, {3.678112744136038*^9, 
   3.6781127564734373`*^9}, 3.678112796497478*^9, {3.6781128814467*^9, 
   3.678113014321619*^9}, {3.678113096837903*^9, 3.6781133296124077`*^9}, {
   3.67811336287075*^9, 3.678113445988741*^9}, {3.6781855300432863`*^9, 
   3.6781855350635633`*^9}, {3.678185668928563*^9, 3.678185767083356*^9}, {
   3.678185899947463*^9, 3.678186053369142*^9}, {3.678186090242024*^9, 
   3.678186243554099*^9}, {3.678186928786027*^9, 3.678186996091114*^9}, {
   3.678187115115611*^9, 3.678187124473228*^9}, {3.6784478956447477`*^9, 
   3.678447902793023*^9}, {3.678448054932729*^9, 3.678448087056964*^9}, {
   3.6784482418325872`*^9, 3.678448260953259*^9}, {3.678448309334046*^9, 
   3.678448311290731*^9}, {3.6784486037701683`*^9, 3.6784486040691643`*^9}, {
   3.6784486457760277`*^9, 3.678448646703411*^9}, {3.6784498335729103`*^9, 
   3.678449947439225*^9}, {3.678449997586576*^9, 3.6784499982772837`*^9}, {
   3.678450122368855*^9, 3.678450122723832*^9}, {3.678450963416544*^9, 
   3.678450996456737*^9}, {3.678453715753416*^9, 3.678453729420127*^9}, {
   3.67845414664242*^9, 3.678454194961033*^9}, {3.678454236611834*^9, 
   3.678454274028186*^9}, {3.680010201575959*^9, 3.680010202766513*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx3s0VAkcwPEJoSXMFhv2FKun2eihlDV+PyU2kS2UOnrRSCWtbZLEnMhj
SHmbmOneUe1ELC1zFNkUymMbhaSVZJoUc29HZkpZqr37x/d8z8c25OhWng6L
xfJl+v+UZsrHM2w6RHY3uLlFC906ZIYLPYpV0CCQB7i67oLHxnE7LIu1YGEv
WKvRRkBvwyqtbrEu1gl68rqb42BH4bc4IZ2FozYXlx0WZYCVfsJrrdQOY2X+
SRGBEoh1vbl2TLoSLQtban99UQbXev1Vo9L1uARD1WWsW5DVl/DZgx+ApUvz
TuT6tUM3mSrODt2NCa1yp5KQLvAMurU+3mw/Bv7QbhQ29AQ2ToZI+oMOYvWU
9Ms0x2eQmWZ7e9IzEseI0jF55QC4Wf6sDHkYhdVao30alhJy7kyMd0TyUbJ/
o3tyxEsQPl89ZqWMxqbBYzkV+SroNHgQ7Co8ic298W4Dla+g/ipdztWJw7uW
Lo8DC4YgqSjV7P5RAV4KEEVxdr0GP9+/NOy009i395TYy+oNOAjjHl5vSkCW
P3oo5G+gpu3N/ro5Z/BLzzI/ntcw/OFklpR6IAlfhR/Ke9Q8DNE7BfnNZDIO
jCZkbOeMwHDKhT0RmhTcFBtc3ZgxAvaRn6yTHIQ4ObipZFv/CFgE62XrJ6dh
kCent3GRGqKOKTJ9etJx8TrjaPdwNRAb+k/rmGbgE1951bhEDfy5Inu70HO4
2Pc492uHGqyqRPerpecx19Sf/eyjGhyPBtIGTzORm8qPt7Sm4EThHp4qLwvf
LXx+UuxKQUPQDUXsimz8kxPw9+R2CoKteTlez7PRzKj8O00UBdd/G7MeT8pB
pYHsp0VCCo5clRLBtrm4hV/ltLmIAsGL3+M/teei69C/rIwyCj69VwT6HMzD
ifJCi+JaCpaQjzUJevlYwL9d13KPgkqf5TRdno/ynVHqbZ0UEL3XB0y9CzBN
PG1GWx8FSl7K0vD3Bagj2yVuUFFwrlNwPCZXhKu6bVazKQredQYmHnK8gKf2
Egb7xigo6Umksp9ewPmcu5V7P1LQVtPlGxVdiI0mfSu8pihwE8cYp9gWod3L
FzE0i4bDsz9nxrUVoaTl1PkhPRpYh68Yc8LEuNrdsGu+IQ3q5uIhEzMJjorm
mrsY0cCdunvjWoUESxs3lN6eSYNX653Ni70vYnPYmjq1KQ0ykfm6Z5qLePmM
JnmSTcMRj3MOnlkEFspa88tm0dCxrsR8ei6BWkuTK1WMl7k3TTXlE3jab1NF
LeP33Il2dzGBAueamhbGsc68A1wZgbFLz4tUjIX2XKlTPYHzP68XW82m4YrZ
W7bdMIEJU0fqkhnrmxpOKNUErk2f4ZPBOHym3aD0LYEOc179k8OY882Oirla
Are27laTjKt073lbfSHwHlc2UMu4YVxyhj2bxOxL2y3eMrb5cOPQIwsS50wo
I7SME7VdWzItSfRiKxomGHu+M7SZOY9EXYVip745DQ9G+PWG9iQ2fl/Nm8fY
YTjzcsuPJIpXxpMLGGe9vpae4kjiltibPRzG/qrBIL1VJDrfTHdew1iunIQm
ZxLp+gWhbowtBi0WJbqQmGXsctaDcczAchN3Lon6ZW2V3oz7+n0+fAUS9cRP
Hv3C+D9cn2Ao
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV1Pk/FIgfx3FLhNxJjs2RYslRCdXS5+OsEMotFJGjkHJlrdDkaHdz38yw
K2F1KEkSteSMmBSLZIwZ45hxDTliv/P94f14PZ7/wFvJK/icDzcXF1cBZ//v
zOJ3K/PLvDDlIGz/YqgKesr4VUxLqNAW3n9EQPAx9AtFu8iULEFv3sjUcP4T
GGjSXeIp4cE+n8Qjym+fgkueBK4V78Q/lbSWQlZrQZYvjr5UrIw3BqakJiWb
IMqg7thCsQ7eekSXdRBuA/E6hUerhkfQrE7itz232qBcJ3Ev1/ARlFoTLNSc
b4NP6o47RHfpIfOhwJJabzsclGGPaCQfxXsKVmp1iZ0wuawd6xdiiJ5HW7RP
fe6GygE76lyxCcZvpS2Tv/eBYs5TS5EVE4zuLmi01CZDtqN4jYalKQ7w++cG
eZIh/lMPwX/ZFLGiQvV5CxlcPp5WoZ42x7pUFHBO/Aj8H8D/8+IpHKyx2n17
sx98Wg/MNZhao7zhZnhR9QAM3bnrNJxnjZM3T9UmDw2ArdlU0xrLGiVqOymH
eQbBoKUsVS/PBuP4YgQb7QZBkCImMxhuiyGUpn/eLQwCZfS3+rNdZ7GyhhDM
v3cIUofiNk1D7TG/+x+/TMcRuL+wps1daI8fKt5nfwwbgXr+615NzfZopH9u
fiJzBCb0vNqO7XTAAuO+4FvkETiaYZym9dQBaa9FCIWWX4BiybNfet4RNftb
9jbojsLh1wSrmSsuOFfxTbJw5iuc7P8eU57hglXudbVD3GPgNhNa7fPKBa/5
CUl+Eh2DBBkfqTFBV9RZyr+UoTYGQ2FmY/0VrpjLpdF/zG0M4rX4Qhsnz6MW
g3ff6cYx+EhKLEi75IHTQcZrJ8IpIOWmD4l3PbCW4avFG0cBZ+nJ8ehqD/yZ
+bPZ698oMJpqru73nwf+PSYQyVNCgek43pcnCi7gLz7aydOdFPjhqdFMmP9F
jLATidf/cRykM5v4lUs8sYvwIcHn+Tgcv54zVFTjiTI22S4ZjeNw3ja4Srrd
E9/SoOl52zgQhRRsReY8sX3SImXw33HYdycmZ83AC/k1Nq1zN8dBO9xQpXfQ
C1XoB43FTKhg7vzK5Fcxb3TU8phxbaUCeWXPW+J+b6y3oyoxeqjgkRV74s1x
b8xPNA8IGKBCONnsGI+PN+rtuPurNYMKZVa9WskvvZH67mtTtsAEbDeiyWR5
+aCffVy7vsUEtKuJzlfVXMaOvTJndFsmwL49JLCn4zJWkFdsErsmYOxy//Tc
6GXM1pJL6iVPwOpfebTDAr4ovUuh/xRlAn6S3zdc5+6L9c/YEeTNCUiSONba
wueH6861EY66NDi94VU44uyPhBJR3lgiDeKXp6SzrvrjopN0m28pDRrmrmWd
ifXHLz189qcraaA1EXOv8YE/stPK2WvPaSDRnR9bvOKPjz3eOkl002CISPb2
zgzAlFu8parrNLhqbKw5++EK/qL5cFPRlg73DToqSqlXsE3mo6OdAx1G9WxV
3L9dwYbztb/HutLB9oCHQo/8VbQpF3jY5U0HXcko8SeBV7Gj1SBt/006bNGq
l2/sCER8tO8kq5gOKclKjRvmQfgiXK6Lh0mHw6Y6dFe3IDxTHinIvUiHz1um
IvUhQZg3amG8sUIH+VA/j8jCIMxmKtaPck1ClcfjLfZCEIZ5y5MCJCehU8cQ
WIXBWKz27Fnh8UngCda4eO3mNYzXQXr+7Uk4IXOK4vUhBBUeHx11F2DA8Fdi
2ti/IZhDqrMwEGZAZNmykcdECGrw33LdLc6AZzp//emyFoJDG+LhzdIM+Ml6
65Kt8nWklkzLslUZsPN2Dd0w4jr2FPzIqjdjAGNWcVZa4QZ2P5H6ZyOGAelv
1lZ6gkJxxKHptdwUA/iej6vkRobix4Q1KaFZBkRVdDl6xofiy8Fy23UWA7zS
i2qXskJxeXU6qJfNgEPeRuHSr0MxLagt9xLXFPRuT1723BGG7wxVSlV3T4Gw
jTSb/SAM51f2L+maTEHSF70FWUo4tlP3PxrOmoK+7e/dDJJu4g7hGvNMnWlo
eDBbZcgdja5HsYK3ehoI+YlircExeLRms5QgNwM2Z14viifHYulV+Ve9t2ZA
Kyn6w5PmOGT9vO7r2jcDtR2T3vXSt1E3ZU96lvwsPDwiRkj0JeAD/RnhFxdn
Idw1JquFdAf1ZkcDGNmzwEjIvXB1MQFJNHyW1TkL6kGrcgStJMyKNU3fYM9y
/mJbGt+dZNxXM+jvvocJITe6U6w+3UVDmcrOXcgEotlILLfo72hEKKsucmNC
qHyOuvKlP9CWQbYfimCC7NOc1mfF99DSt7n82D0maAc7zG4fTME0KccvJSVM
iMi74EPNTEX1ngzpQzVMaHJ+0R11OA231UyJX29mgpucT/rJL2l4QWY8478+
Jjy5viC3QkjHBLFA1YRRJgQ+KCa6KWWgHEtsgMxgQszX+7+udmbgt69mWLnI
hFV2t4OVfyYm69YS3qwzQY3Uvxi3LQslZAYOvvuBBY+tDs3OVmXhxcGGrGh+
FhAHnoyKWmSjaNI9MW4RFlB8EjT92NlY3asVdHInC/7oiwmLzMjBV726ywW7
WTDf5xAfoJ2LrQsVSe5yLCj/FD+TNpiLja+iqWx5FnTUks+EhOchj9zZKIYS
C04URAolKOWjEHeMwst9LLgiuZkS3cFx8l3L/aos4LpSKnTgcgGm96bqKqux
YLqlhCYiVogE90lzwQMsMPz+9kXlo0K0EDgXla/BgpPtb6x/sijCotMN9cua
LCjL2WU8vFiE8V0eTCNtFgSa/qFlnkrE9dC0rXMHWdBjXL6LN4OImt9yIpw4
PmjU/L05i4gJ9Zqs8xyzDdc6jQqI6OMk1O/NcZS+j69hGRGLtr2KD+c4Sd2w
+EgDETfvbwvM47hUjCmuzCBiWIxTzBeO+UT51yjTRDR5+f5vCsd+wspjxUwi
2l5b/0zj+ICgyyP5JSIKWRFUWBw/5XlnIbtFxPeeoZVbHDetFN4WlyShi9i/
5gqHWKC4/CKgV4qEOz762ypzHL9EPpsiQ0KvB61Oqhybz/MrCiuQUNFu6oI2
x++nQhv41UnIOsJ2AI61GCl/tWmQMHn7dmsTjlPplXcTtEnIFzFncpJjO+qY
8zZdEq7QzNRsOK6hbECzPglDsFbajmOpMSnV+OMknGBy8TlxHDl6SMTIkIR6
sqoLrhwPjVgt/wckrJpXG/Lg+H/6csLy
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
y7Q5/wGB/wOicQyA
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
H4U6kFA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mVDZ6F9/a6+V0N29tjM/gI05anK1P/1/60TgaA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd13c8lV8YAHBRlBRpoIEiUaFCQzhPyFYkQnZGZtl7Xeva914jm0ppKJGs
KIV7m7LJygpZ2emX6nfe/no/3897znmf5znjc969Vtcu2DAzMTF9XMPERDwn
51e1VGzXIe/YaO6cB3EKjXfXiyjfHEbkBqdseQt91MYRYMR3cwH9Lg6YWPhj
jTpfyiyw3GQBMhvPosBTD2SUzg0/87aCrpvM8LNL4Wgna+joQp4QiFfZ51i9
TkJ+chWn5vKkoDNTrtLg2S20pULg8Yq8NFjo/n3hK3sb3ZOK2sfUIw0J31JF
S17cRu0HDTZybj8OZ+v3ZNjX56MjfIu9h6NPgsdrqQCBhrtobEky5KqrPGwU
vnaJOfsBetCpN/w9Twkidtpz+3Y9QYI3SjQ3LysB//6ypfPcxSjVYEvpYU1l
oB2QtKrQLEak9sZw+yVlMM+bFzxTU4yMWtVFhtVVwDzMalQtswSt/4TsO+bV
4Efok21DSqUoKCGneVFVHSI2FnAf9S5Fi9q/T23NVocary5u/gel6MuHKnYd
VQ0QXc+/rn3zM1T2TqbwbaYmmLz+0fyu9RmyoR/6Xq18DrbTLG+5aZWj7oiY
Sz3p5yDvQzRp2bcc6Zz99vLnzDnwaXf1FCooR3L1dynH088DD5/+QX+mCsQ+
yMXX5aUD5WKXH0oVVaDB/tgq3fe6oGZSPKf3uxJRukN/K3tchA9hdRlOFtXo
ztxPSeasi2AacEd2ILQaVa13s3pZdxHePrOR5L1djUaOWzFObdWHw76BtR0j
1ehkkiJVokQfNPJKl9NtatCgJst+3lkDMJnOZKGZvEDHasK1Jh2NwNNi0cN7
Sy1SbVsNupdkBGe/H+3q4K9FJpMexTbPjeB1Pqcl/+FaFMlns2OA3Rh2zSbG
26rUom7PswNt942hM8p29ItvLSJJsHq8GLsM9PX3NDN6a1FrblQm9YoZRLuX
bZSnvUI7TE6gqBgzIB+jp1dkvUKGvGNDAcVmEKpf3LK34BXqp6gcvPrXDIzE
BRtqnr9CE6HrKhUyzaHmipmgwMgrtKbkzKSnvQW0NEVl3zr6GvEmv1wvdNMS
aF2RNr61r5Gs243u7FJLEGCutBp58xpd1rlWyPvGEo70ixZA82uUwyGgs/m7
JTwupDh9HHyNhCOCbvyUswKec5ZFssx1SNJLXqSpywo2XfUv9YU6pGL4XCmQ
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
Huc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DyZAslU=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\) data (d) vs \\!\\(\
\\*SubscriptBox[\\(P\\), \\(n\\)]\\) model fit (f)\"", TraditionalForm], 
     PlotRange -> {{0, 2000}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"140174f\"", "\"140174d\"", "\"140213f\"", "\"140213d\"", 
       "\"140256f\"", "\"140256d\"", "\"140342f\"", "\"140342d\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.678112618375354*^9, 3.6781126498642883`*^9, 3.678112719651902*^9, 
   3.678112762653653*^9, 3.678112802943573*^9, 3.678113019291967*^9, 
   3.678113336064021*^9, 3.6781134511778316`*^9, {3.678185301520249*^9, 
   3.678185319304886*^9}, {3.6781853718647614`*^9, 3.678185430807569*^9}, {
   3.6781855640216312`*^9, 3.6781855935318317`*^9}, 3.6781857708199987`*^9, 
   3.67818588915672*^9, {3.6781860069667*^9, 3.678186055894786*^9}, 
   3.678186116744792*^9, 3.6781861901625013`*^9, 3.678186246009034*^9, 
   3.6781863169540777`*^9, 3.6781863535367727`*^9, 3.678186836314427*^9, {
   3.678186998660043*^9, 3.678187032461005*^9}, 3.678187064016652*^9, {
   3.6781871731708603`*^9, 3.678187208678876*^9}, {3.6781872398384933`*^9, 
   3.67818725462853*^9}, {3.678187522096689*^9, 3.678187579420188*^9}, 
   3.6784457045919952`*^9, 3.678447917200675*^9, 3.678447972031932*^9, {
   3.678448080355818*^9, 3.67844808908538*^9}, 3.6784481631902*^9, 
   3.6784482633737507`*^9, 3.678448312954049*^9, 3.678448375678178*^9, 
   3.678448412994454*^9, 3.67844853864526*^9, 3.678448595887382*^9, 
   3.6784487279903803`*^9, 3.6784487607461*^9, 3.678448798473445*^9, 
   3.678448865438278*^9, 3.678448938433468*^9, 3.678448992656296*^9, 
   3.6784490226743402`*^9, 3.678449249767056*^9, 3.678449336144165*^9, 
   3.678449499303526*^9, 3.678449763851173*^9, {3.678449919955536*^9, 
   3.6784499523351*^9}, 3.6784500013400803`*^9, 3.678450830728909*^9, 
   3.678451345076448*^9, 3.6784517114337177`*^9, {3.6784517505375443`*^9, 
   3.678451771528883*^9}, 3.678451860102211*^9, 3.678451911545351*^9, 
   3.6784527599542723`*^9, 3.6784528662461853`*^9, 3.678452952984634*^9, 
   3.678453735305553*^9, 3.678454671149688*^9, 3.6784547137342997`*^9, 
   3.6784549643593607`*^9, 3.678455033638411*^9, 3.678455104432055*^9, 
   3.679137163840581*^9, 3.67913759877542*^9, 3.679138023027999*^9, {
   3.679138391755818*^9, 3.679138416572825*^9}, 3.6791384500709553`*^9, 
   3.679396834772596*^9, {3.680010206038062*^9, 3.6800102295044527`*^9}}],

Cell[BoxData["\<\"comparisonplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.678112618375354*^9, 3.6781126498642883`*^9, 3.678112719651902*^9, 
   3.678112762653653*^9, 3.678112802943573*^9, 3.678113019291967*^9, 
   3.678113336064021*^9, 3.6781134511778316`*^9, {3.678185301520249*^9, 
   3.678185319304886*^9}, {3.6781853718647614`*^9, 3.678185430807569*^9}, {
   3.6781855640216312`*^9, 3.6781855935318317`*^9}, 3.6781857708199987`*^9, 
   3.67818588915672*^9, {3.6781860069667*^9, 3.678186055894786*^9}, 
   3.678186116744792*^9, 3.6781861901625013`*^9, 3.678186246009034*^9, 
   3.6781863169540777`*^9, 3.6781863535367727`*^9, 3.678186836314427*^9, {
   3.678186998660043*^9, 3.678187032461005*^9}, 3.678187064016652*^9, {
   3.6781871731708603`*^9, 3.678187208678876*^9}, {3.6781872398384933`*^9, 
   3.67818725462853*^9}, {3.678187522096689*^9, 3.678187579420188*^9}, 
   3.6784457045919952`*^9, 3.678447917200675*^9, 3.678447972031932*^9, {
   3.678448080355818*^9, 3.67844808908538*^9}, 3.6784481631902*^9, 
   3.6784482633737507`*^9, 3.678448312954049*^9, 3.678448375678178*^9, 
   3.678448412994454*^9, 3.67844853864526*^9, 3.678448595887382*^9, 
   3.6784487279903803`*^9, 3.6784487607461*^9, 3.678448798473445*^9, 
   3.678448865438278*^9, 3.678448938433468*^9, 3.678448992656296*^9, 
   3.6784490226743402`*^9, 3.678449249767056*^9, 3.678449336144165*^9, 
   3.678449499303526*^9, 3.678449763851173*^9, {3.678449919955536*^9, 
   3.6784499523351*^9}, 3.6784500013400803`*^9, 3.678450830728909*^9, 
   3.678451345076448*^9, 3.6784517114337177`*^9, {3.6784517505375443`*^9, 
   3.678451771528883*^9}, 3.678451860102211*^9, 3.678451911545351*^9, 
   3.6784527599542723`*^9, 3.6784528662461853`*^9, 3.678452952984634*^9, 
   3.678453735305553*^9, 3.678454671149688*^9, 3.6784547137342997`*^9, 
   3.6784549643593607`*^9, 3.678455033638411*^9, 3.678455104432055*^9, 
   3.679137163840581*^9, 3.67913759877542*^9, 3.679138023027999*^9, {
   3.679138391755818*^9, 3.679138416572825*^9}, 3.6791384500709553`*^9, 
   3.679396834772596*^9, {3.680010206038062*^9, 3.6800102300578814`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "values", " ", 
    SubscriptBox["k", "1"], " ", "and", " ", 
    SubscriptBox["k", "2"], " ", 
    RowBox[{"(", "rates", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k1Rate", "=", 
     FractionBox[
      RowBox[{"bbb", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"bbb", "^", "2"}], "-", 
         RowBox[{"4", "aaa", " ", "ccc"}]}], "]"}]}], 
      RowBox[{"2", "aaa"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2Rate", "=", 
     FractionBox[
      RowBox[{"bbb", "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"bbb", "^", "2"}], "-", 
         RowBox[{"4", "aaa", " ", "ccc"}]}], "]"}]}], 
      RowBox[{"2", "aaa"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k1Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k2Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "140", ",", "140.8"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Large k values\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "A", " ", "zoomed", " ", "in", " ", "plot", " ", "on", " ", "the", " ", 
     "smaller", " ", "k"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k1Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k2Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "140", ",", "140.8"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"140", ",", "140.8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.02"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Small k values\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6784469050087757`*^9, 3.678446916367736*^9}, {
  3.678447015415007*^9, 3.678447091466209*^9}, {3.678447126750193*^9, 
  3.6784472621011*^9}, {3.678448173605566*^9, 3.678448187725362*^9}, {
  3.678448361536171*^9, 3.678448370107367*^9}, {3.6784490749109783`*^9, 
  3.678449107529531*^9}, {3.678449588142639*^9, 3.678449588475518*^9}, {
  3.6784509366030083`*^9, 3.6784509561375313`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KR/40mB4uQgsONTMtw9mM298uhwWONf4yw/efV2sXhz29M4gAfALjr3NK+Bn
x5f2B8LrdhV3SME96fPHg+G4x3O+SsNq9sp7wuA/4lZDMvAn0R0qR2CnsJTf
snC6uPbucPhx69dpOXjA59ivU/AqVWVOBVi3t6UnGo6MP7JoHWxFOlXiYFur
ZZJK8KljfmNp8L1c9zWb4O9zRVyuwsu572xQhb9evC+fC3+pMmVowmJxDe9K
YROpRFNteO8BxdJK+Nbhbhtd+JUn83ctHKQR5qYHW+oFH/sAc97OCzeDRY1l
nrPvtqM+vH+jLOCaub8C+eDGvYYJVvCMb1vwMjhp1certvBNk2Os9bB8yqIa
B1j+qIKnK3zuj2ODEzxoWZi3Dx6zu97iDEvubSMsuHwRo9cN7l/YYJkEW50M
4PKG1yxY2dcEF3ZX8PvO5iP3bvhneCldIOIHbzlTumsM/jRxRW7/7Py6PMOL
99jRAP9mszD4d1wm33Y40VH9bBR8ee6btf2wpZBl1FnYpuSS8DQ8r9418jxc
e7pkrYAHnteNOhkP67mebFGDraQ+HkqF9bUbxyNgzt7wfbnw27SEYXlPO3ow
4NXmOnj9RG8Ia68dXb/2i2U9nFWj7xcLf/08bv4KfuO/n5kD221ZadIEl/Fp
dr6CN6gfoB/gEJ3KKikvO9o3Jbqxf3Y99x7lVsCZ99avH4TbOHr3v4a3+xko
DsMvktzmfYFrPvnKjcG2jUKBXN52NKvqsdQkzLx41dAKtmc1r5iCPx96ybkT
5lf5Lj4DK+baHfKDD+csFp17Fvm68CD4POwQuUdwAXzG8eCOOpjNskqLD84c
dU59D2fzS+5eBIcvHnbvg0cutpUshqsGMqM5fGbzrdolDFtKHP0sCGutiOdZ
Bk8Mh5esgCNyLHaIwY8StJ+rwQpeNyIk4MspEVN68GvF+QWS8LeaFZct4aBR
t7aVMFuG0e1tsFjxI3YZWG100ypX+MlBMQVZ2Lpnxb+9sId2yBY5WI9PXTkA
5mVrObx29vmgG9UhcGGV0nVF2OJ+6u2j8PZT51+vh9O5lQYj4CmzgYmNsKRl
VGg0nLXQdNUm+M2qJ8xY2ORNtqUqfIF9MPACPHSBPVgd3q0h8T4JjrffmakJ
X1/ofiQVVhcvr9WGQ+qeu6TBHz8tG9OFlzXYhqbDJ64eEGPAO1LnPZ+1nOcb
Q32YjrQbzrph7Xo/Q3h/U8vwJThwOCrJGOa81leZAove/VZpCstrct+/CD8K
Muw3h7+8l2mIh901s4Ss4BEPBbbzMM/0tI41fMltvlkkXFDp6GELV7ClXDsO
bzl5P8YOLtN9IRQGT5gIl22FA0eDzs7mM5M34PN2+Ggri28230aNDbyOsElB
cYwz3B+/VnUHrGIwLsiEVZf3nHaFr0T0ztWA2z8yCnfBHg+UveThY1npH3bD
FzueV4jCq/dMzvOE1y3xn+KGX8ptX+cFGywYkRpHvQUMFm3zgfN+8K7pgZfe
ETi2D3a9enrBa9hNva4pAH7mkmSfDXP9k50KhLMGrz44C996dGJ1MBy8b873
QHjcSDckDG6rOZFC4HSe1KxDMJeYkJA0rN/wp+7IrCOemnDA57bckTgBz+gb
vanG+dskstAkAlb2CpC4Cre1e/13Go70OyB0DF7lvuppNFxzM3tAFS4LuLj3
wmx8fMNNs/3hS+k/34tw6zNFNk944Ry3gGT4U6TLF21413mFsDR4Mtanphv9
hjevMjp7Nh+RZ85KwKpjq2OvwaIi74W/oz+5aEZfuAGbJudoFMFFz7em34Ir
3wUaGsA7evpvF8M3G4R5mOh/pxVsikrgP4qHeWb7Z+H+e/dL4Xi3zsjX6K/z
2Y9VPpw9H9oWf0zhfIklTdWz+3VASm7N7P25nf5uhp8+63mZ6Ir+n5E98Q5W
3WcqqAPbfeWZaYM3ZHandbnY0euBzZwfYe55l0NkYJtYL5GvcPXO6U8Xne0o
q/WV+DdYdqDk13o4Z4XKyu8w41DappodqMdbM/JD8O2KOdKDTjifLxK0f8Mf
bEVdVzmiXgQm6Pjs+bomvOeWgx39vX2n4QR8PDY2ZBNs3itnNT17nhdsq9C2
t6M/5z7aOf+cK32QmrJTZZsdNdTpO74Ejk9YxvvU1o46n08sXAZvP6scvwIO
6tLvFoU9nzjFHbTBek6mM1bAm9ev/rbSGuergcm2Bm6uP3ZouyXOr3PFIQ1Y
ukSwXN8Y90GB9y0tWPCixbtAIzs6wy7SoQNbFFyWu2KI++Dafm09eI7L1K4/
+ugnw2smzeCkIcWqQxT96mj8QSc4Y8FY27S6HfV/Q687w3FsNy7NgSNXDb1z
gV22MB3mqKHenpuo7Ya7uHTu/9lkR8UFpn/5wlHJpamPNtjR7sue+4/A7xYr
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
cjK84zZrhy78P0X8hOQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Large k values\"", TraditionalForm], 
     PlotRange -> {{140, 140.8}, {0., 81.69719124269382}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6784470934417953`*^9, 3.6784471310685596`*^9, {3.678447204324404*^9, 
   3.67844726570263*^9}, 3.678447973646688*^9, {3.678448164936254*^9, 
   3.678448192144764*^9}, 3.678448380634623*^9, 3.678448417585724*^9, 
   3.6784485425967207`*^9, 3.6784485995712137`*^9, 3.6784487301460733`*^9, 
   3.6784487643694563`*^9, 3.6784488019870167`*^9, 3.678448868973322*^9, 
   3.678448941127956*^9, {3.678448996432667*^9, 3.678449025483721*^9}, 
   3.678449252315905*^9, 3.6784493379346247`*^9, 3.6784495010998898`*^9, 
   3.678449591194373*^9, 3.678450832395804*^9, 3.678451346650375*^9, 
   3.67845171410953*^9, {3.678451752775837*^9, 3.67845177394129*^9}, 
   3.6784518617070208`*^9, 3.678451913143784*^9, 3.678452761616498*^9, 
   3.6784528681670856`*^9, 3.678452955154793*^9, 3.6784537374674892`*^9, 
   3.6784546734886513`*^9, 3.6784547156469803`*^9, 3.678454966918241*^9, 
   3.678455036147674*^9, 3.678455106515938*^9, 3.6791371659974833`*^9, 
   3.679137601131777*^9, 3.679138025740451*^9, {3.679138394041798*^9, 
   3.6791384186876183`*^9}, 3.6791384522885637`*^9, 3.679396837073668*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd1Xk4VdsbB3CdMg8pihQZUlIaqBwOvYc4MpWIzDklSaYkw9n7JoSEypBr
SGlAt9xz3WPKVGQoUxlK6hISpYijQebfe35/7Gc9n+fZa73v2uu7nq10zM/6
BIWPj68CH974qVaIj+8Ck16S4kBNbdKGO3apFAo6oaVyXvSlNriOqPAvQz/b
aT16uVMbuiRARAg9I2MSda9HG+oczklLorlLzLz3j2tD9viAmiLaoDAokrma
Cs4RfluU0RYMr4Qza6kgs2peYwNaPnOwKU6RCld0ZbXU0AV/f1DtU6cCGXVA
fwfaP3idyVI6FezXVhyiozP+aH9l5U0Fafb+w4bosNcNJ8UCqPCS3mVnhBa5
02/ZGUwFhgfXaT865ZSVa2QkFXb9u8nDCh3FV5rtm0kFSZMUlhv61UxiUEQr
FRoDfO5eQN+6cEhFnaYDAZL72iPQHYIh+VL7dGAdW3bxItp7WVGQuLkO+I/U
Osaii86dpmk66YCsm9zKJDTftEDMPlIHPC2fXbiLbv7+KSGrRgdWfr3BzkEb
+ctvTmvSgcpLAT156L5CvYZ7nTogWSdPzUevvQGsH0M68Eg3cLyI1+9vctZf
VBeE1JRcG9BiTFOL3w66wKn/FfccbevzpEvRXRecj7eUNaE9Ga7g4qsLBTeD
V71Ea53hqK6M1AX7VS9a3qA3rbmc6/e3LtynELQR9JvtWc+kBWhg0vtKViwc
93tP88nwMxoELXCUJNDpdzO/j3bS4N76RHVJ9P1281+C/TSgHLPUk0ZHtWl3
kr9pUDlcf3Qd+uHA4U/u6nqgOVGSuxX90l0+kpGkB+uWpu+yRD8zmNJceVYf
zDYE6x9EL9SbPP4Urg+hxraMQ+gP2v7Jr6/pQ1fMCntb9LcCoYQZtj4kil0m
XNDdcv++8x7VB4HVxFMftHQ9862o916YUHOxuoL26ZzlzJ4HOJOz9OA1tENP
V1nJNYBJpQeWSeiNjrdi4u8A/JSbMktFv6b4Dl5qAJgRSzS+iZbwTqsfFKTD
Mm6dLhv94NDsYpkNHWTLtqq+QNdSCs8o/aJD+u5OlTY0y+bEhno+A5DjhCp3
oDMarfuDRQ1A/mHD+i4023QyV0TJAJSz3OTeo6PtX3cMWxjA1vCU5d/Qasrl
dy7mGQCYzk2LRzDpa2ySux96GgK77YuKJDr7g6q8U5AhKNi/tVyJ1uB/2yN/
0RAWPEpur0YHZisIvr9lCJUX/U3Xo1fr5aaYdRuCbvXHtB3o4porhf0W+2CX
dqu2DXpcqui5s7ER3HtcwbRFC8ZpktdtjUCa8SDuCHo29TBj8IQRfD8c0+eE
XqlhbfY42gg4AQYx7mjJ6FS9s41GsJ1d3HUOffTYQuGAtTGoq948l4Z2F/ha
IhnEAIUd11kZ6G0pzKryGAZI0eLDbqDnvDVWh6QzYM6KFZvNq5fxpmNrFQNa
Sbus+2ht4/T58/wm4P9Kov4RmruL7GhMN4HiyDDpt2iOcaG4ZPt+oH9wK1wT
yaQDUZucxjIHld+3BteiRZbGnxNLNgcBiT4pBTTRZLbtz4fm0KzjEqiMVswR
E+f2mINdosPuLWgJ4ezWYroFeNOtS/XQ3YfmRP4Qs4S0m/sqjqJbGGETtUUH
gOu4sTaH977LvoPVyodg/32K8faLTHruD2mHx8ttoblr8dI/aPcz7UdUZR1g
pHrxpm4Uk548Msj1eegCWvGKwZXouSWnus/Mu4HKVvsaWjST7vvt5fFemePA
jknqrUfXxeTxe3qcgBN1YxWMGMzreMEqWv5JKK009+5Ac34+t9H384IvV19f
e4VukNrePMXyAoXjR4u70Dkf12uWR3tBtPDZhXdox4HMRbubXmBnl3FtEP2q
tm2M2+oFP8c/F/1Aj7KtMku3nQYtlej51ZeYdA+pxBedv07DP7HVV5zQtoo5
r3Lu+oBnv/UVF3SaTNZodYEPKGoPJRxF21nMbhqq8oGkj8IJx9Fd+28omnb7
QCDYxJ1Ga/6mlIeJ+wL151AMgS47toKeH+oLNW6i4Znoc5n3ipUd/KBT2+7s
f+h/FEryEjP8Ien2t80esVgvaLEmry8AyNG8O5/Qe/IZRxpo54Dy/fjY2cuY
vwM/JL90BYPf3iPSQWiajdWLtv5g6Ik1o4WgW4S6ejlfgqFYcWcsiV4U9Evw
XAgGzwMLG6LQArFc5p+qIdD6V5pzKtpnNth8NCAE0txamx+hD8uUQqVQKPDn
V0+WoxtznWferQiFgKnCNVVo5419T7lyoWB+JeNkDTqkMkJKUCMUFipOLm1C
c7IftbZahcJxGQrtP7QKn1xkUWoobHux58E82l1hTnP7WhYoZmnmL6KLe4Z6
U5RZsMJ7G3tJHP4PijufT2xmwQ/hjRx+NGl0WyyOyoIy41Xl4uh3s6mSJrYs
MKr63iiP/tz31b05ngV74seb16P902OS4pJZsMnpa6sSOv6j0xN6BgtEpj+0
q6JPcmUbY/NY8HJXx1sN9K+4vIiUGhY45heM6KM3LwoLk99ZYEHkfwU0ZCcZ
Rk6zQN/s/pgBuvpB1cHzi9j/51tcY3Sg0O2sg6IEDKlcnbZEm82FyLkoE+Cf
6SPsyut3K3+S9AECmF6nRN3QXwb6h61sCLDWOSF+DK1n/WgxzJ6A3W+cV3ig
I+X69UuOETCz0mKNL7pJ2Us7PIiAqMvqm8+jy6yWcyMzCXB397W7gPaQPbt5
XzYBRns5kRHoid62cu49ApZN6ryPRucG5t5dxybgooNp8lVeP7foj/Ke4Hyt
hOpEtNZ9YqCvFueLt48lo212tvUJPCdgaY39/jT0f0ZqCkptBESoec5no7ub
mIsX+wg4RslXv4u+PpuloTlIgGHP+JEctETs+4rWYQKWXAvm/IW+ORv49OUY
ARemok9y0JNPFcQWZghwa29KKUIPq422rFsggP5Q4mkJeirK8tLmJSQsuqau
q0AT4kPVYoIknG/Iaa/lnV/7VYHpFSS4Zo8s1KOrplxPRkuTsJelsfU5+sdi
qc8SGRLmNYqjW9BO3VHG1WtJ6BGcLnyBzn/8cdkyBRIqB/QG2tB72+8Y71Yk
gbxeR3uNNlwipO62gQRnP6FTb3h5yKutcthIgp6pRepbdMuYQCFdjYS5uc6J
XrSas1VO1xZcv0tGoZ+XR70bKVEauH6Bk/kHdOnwbKPSdhII98GcYbSk75Vv
SpokOO7d1PmZ1188dERpkaAre5rvK+97c/mGunaRIDfJ1hjj5S2tTmnVHhJm
micdx3n7Y9VF0rVJeJez5xIX7cqOEHCgklAexir+zjuPHY05rjoksLQokr/R
/1LC1XfSsJ44Q38G3V8wIbSA1v0U6zWHFl819LNUD+vVtP65wLsvIsnfXPVJ
mM5YUc8Xz6SHjwdPTKK7A20nKWh+H8fps3tJeHQgfT0/OsnPVPADOk2t10IQ
LROeJasPJIRQlFjC6J0LU1ui0D1HfSJE0YF7yEOlaIOqssviaJFNUp+60bly
AsnL0ZzX5qMj6IwLa/9vQpptMsBKgf8BSidNPQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vA==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {140., 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Small k values\"", TraditionalForm], 
     PlotRange -> {{140, 140.8}, {0, 0.02}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6784470934417953`*^9, 3.6784471310685596`*^9, {3.678447204324404*^9, 
   3.67844726570263*^9}, 3.678447973646688*^9, {3.678448164936254*^9, 
   3.678448192144764*^9}, 3.678448380634623*^9, 3.678448417585724*^9, 
   3.6784485425967207`*^9, 3.6784485995712137`*^9, 3.6784487301460733`*^9, 
   3.6784487643694563`*^9, 3.6784488019870167`*^9, 3.678448868973322*^9, 
   3.678448941127956*^9, {3.678448996432667*^9, 3.678449025483721*^9}, 
   3.678449252315905*^9, 3.6784493379346247`*^9, 3.6784495010998898`*^9, 
   3.678449591194373*^9, 3.678450832395804*^9, 3.678451346650375*^9, 
   3.67845171410953*^9, {3.678451752775837*^9, 3.67845177394129*^9}, 
   3.6784518617070208`*^9, 3.678451913143784*^9, 3.678452761616498*^9, 
   3.6784528681670856`*^9, 3.678452955154793*^9, 3.6784537374674892`*^9, 
   3.6784546734886513`*^9, 3.6784547156469803`*^9, 3.678454966918241*^9, 
   3.678455036147674*^9, 3.678455106515938*^9, 3.6791371659974833`*^9, 
   3.679137601131777*^9, 3.679138025740451*^9, {3.679138394041798*^9, 
   3.6791384186876183`*^9}, 3.6791384522885637`*^9, 3.67939683888206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "the", " ", "best", " ", "fit", " ", "for", " ", "some", " ", 
    "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fRange", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"140", ",", "140.8", ",", "0.1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"variousPnPlot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"pnBestFit", "[", 
          RowBox[{"f", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fRange"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "2000"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToString", "@", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` GHz\>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"f", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "fRange"}], "}"}]}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Calculated \!\(\*SubscriptBox[\(P\), \(n\)]\) for various \
frequencies\>\""}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<variouspnplot.png\>\"", ",", "variousPnPlot"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6784501710893517`*^9, 3.678450282802938*^9}, {
  3.678450365773109*^9, 3.678450389636763*^9}, {3.678450450134921*^9, 
  3.6784504895872803`*^9}, {3.6784508465492573`*^9, 3.6784508689860888`*^9}, {
  3.678450900195261*^9, 3.6784509220851307`*^9}, {3.678451963627502*^9, 
  3.678451992605654*^9}, {3.67845209190386*^9, 3.6784521016025753`*^9}, {
  3.678452140975195*^9, 3.678452185804482*^9}, {3.6784522531373787`*^9, 
  3.678452255695239*^9}, {3.6784523705297117`*^9, 3.678452415337872*^9}, {
  3.678452463112196*^9, 3.678452470058716*^9}, {3.6784527366214123`*^9, 
  3.678452753870173*^9}, {3.678452847782785*^9, 3.678452848409965*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVjn840wkcx10ruYuYpDPXlbi6EOdSntR8PslJa+mHdNKo1CRFDxnKyK+G
ShvDbNb3u7FvpFIPd+kkErVDEVetHzhLdYSrDMehzv3xft7P63ner+d5WwUd
28Gdoaent2U6/3f/0CTbM3gWBF5ja1/qzNxaLhos9VD2QB9tT6aNhc7tsSF/
t4VSB7dbm7cVL6CBpnaVjqakIVfX8HiB+TzYLTXFccU8vNvRkl02zxoY+klv
dQpr3K7+W+1ivBJOrru55qNiJVI+rqfj9DdAqcan571iA3aHyGOWj+wA0Yuk
KY+onZhY48qKkx2AP8i0gqwDgRiX5Dh2691R8PS7tSHe5CDKRgYs0kciYdNE
kLzD7zBGMO5qjO/FgDDDqmbCMxytRFfs+U58cLPw0ga1RmCe7JKJJy8Rsu+M
j7aER2HWstpdv91OhvTO1R8Z2micMOQyBp+mQtvsB5x16Sew+w4NXpmlQXXx
wBXmDD7e5xhp1DYZkCpLM7l/LAHZfY8cxpecha1bbg/RMxJRxDm/iOeRCQ7p
/Nbr9UkYMJqg/meNEG40/nWw6usUbA1Tq9UlIrjqbJKadigVVUFLXl29nAXR
/gm5DeRpNKBMBXJpNvQK8vceHRJgYOjZb15LxGAbPmaZ6pCOdC2/qiopB8w5
M7P0T2fgftWwu39cLkQcfyhkPzmDg+1VwdeO5gHxU0fiDONzmKjhhaWxJBD1
rcTW+kAm+pd9Wpbikg+Mcsn9CsV5LHQo3HuKLgXHY74Ds58J8XjtatL+tRRi
pHu5PTkivDTBGgq6J4Nav8qHJ3/Mwprhg/HROQXAseRmb+zMwp1H5KHiCDlc
j/xoOZqajeHN3/X9vPEChBUrCI6VGBe6Noe0zSEg4U8qfqxJjKYVuXV1nQSM
DT/0ZR/OwWdp79c+JUhYTj4eSpqZi4aflgbctFfANbbTwMCVXMzQVPD4IgUQ
mutdxqw8LHfesdl5QAFarmBFyHAebj9ltsfWWwmZbQm8WLEEIbxzoVeJEj60
+SaHOuZjqKmNct9nJZQ8Se7PejbN+z0SYziF0HijfUtEtBS3WfUH0ssLwa0g
1lBgJUNlXPvzKKMiOGI2JeQ3yrCXlcRs5RaB3hGVoV1wAYZlvOmaVVkE7xqU
b+aayLHyNS+/0UgFzMm6ytIyOermbBVIAlSw8fc73t+zLqBzYHngzVIVXJTM
d385dAE30Wsvr5hSQZhHpoOniEDerzkjU14UtLiXzJ8lJnBRs+9sbxYFP6yv
n6zPJXC1UzGN2EzBMHO8aX0BgbeC9aqZ3hScdOEeYl4kUFpVbsf3oSDdlqlw
riZwUuNlMBJAgcpkkG7dO+33N9Q+jaRA39hgXPuOwBSh81KbKApCjKy7FYME
2jH2xUTwKLD7anfZt7rpP1s/PJ8TS0E57R6L8YlAlaOlAuIpqB2Vp9DNSBy0
bXIqSqNg8Uhl6CNzEruaZB7v0ylI1rVvF1qQ+Pzfde5rz1Dg+cFgsdEiEn0i
J6baz1HwoC+q2sCWRK/zgpgvsilw6BUWqe1JtEz4UssWUyB6W3pG4EhialPI
qvwcCnx6uv1mriKxsbOOcJBQ8It2AupdSKzZVVNxIp8C827zZcmu03uRvKJB
SkFsl9Pc9UwSdT0BhHEBBS862COfgUT1JVqUv5yC/wCMjFT2
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx3081AccwHFJqJGHSlERimKp0JM536+HqEZt2fVCWpucQlh1aHZ5Jio7
nCPh9zuvyjVu0sNLaseRUug8nk6c87sMKW05D2Wo6Y/P6/N6mwZEHGKoqqio
eM335W+Vs57uQYvg8gHVoJYaP6eWEk0Lt+IBkOqEaL8SbgeJFsvXsHgcHmgb
ck3K9oBUtH18YfFClAelTC3i0cE3Xx+necvw9lyHeHEuA4zUE4bGeeZoPMu8
bZsWCTGOVbvHeHZIi9jML4tIgVKp98C/PFdcWyepvYhcyOxJmHNj/oAyVl0j
r/oGdJIXCrKO/4gBNc87r9XeAnefv1zP6wbiB9HIIBD3YN9MQKHMJxjtBEmX
7LgPgJ1uWjPjHo6+DkfHH2nXgJPhXkVA62lc2nd25a6jdZBdOz3VEs7EFJNP
vd9x6iGtb8eYkSIKvSLtz89lPoF2jef+jmm/IkdZPHyo5CkI+aMCmioLE0wE
bypSGyH56gXdhohYbKv/vEHk1QwHvaqVeunxGLx1bxzdSgw2aazWivoErG46
Fc2StkBl43Dgw1VJ2KwwTtzk2QZ/2usmXziRjJblGZVx69ohyi+W+5hMQbWM
b4/w+9vhdeqVY6eUqbi2hXZQxO8Aq/CPq5Nt0jA0VCgfP9IJBv5qWeop6ej0
TegZ71USOH1WzPbsuohRf3CXXWqSALFHFq+qcxnPRD6QLQjtAqZxnpX58Qy0
fSsYeaX/Aozu5DXc5f2Oz/KjFxiVvoAtEfRRjW42UhtX/OSzWwrR+ccYAzmZ
mD5UpX+4VQoin/viGNssDPfjq5883A3+qxnZHn1ZKG96Onx9oBsqzoytnkrO
Rosqr7XuwS8hjM8j/E05OMz8JTdH8RJi+2+c/9jEwePFbBHrWA98nBDTPYNz
MPzJ5Z5XbT2wiZQoE9S4uKBWQ3jQsRdueW4bHRVwcU5N/FuXoBcIaYVcZ38u
/neoiGapLwMFI3XzyYlcdO5gW5qxZJDRHht5jpOHOjO+Afm9MnjfTk8M2XIF
Gypa+Ro7+uBmV+LbrO4rGP+VWtzdnD5orOzwOh2Vj8oy45LJkT5wKjinlWp6
FcdGJUMrXeUQunyOzWq8ilrRPvRTeXJQCb2uZR1UgMkrH8b7DsjhzePiwaW6
hei6rDqw2bYfaLN190vLC3HUTqnwjekHj2e1BzbuL8KRW7aTZjX9UJK3wqVX
WYRtP+/pZatSEOaWYeOeSeDtNY1LUs0oaHG5uWIRh0BGp7qHvjkFW53rZ+u5
BGoz68KIeU/QppucCwgcvPEwpnI9BTE7GSdoJQQ26RlyBi0oSLOi8eyFBFpz
gmrBmoLruu/0zF8T6GJos/5vOwrUdTSnFW8I9NMNrAyzp+CktjnFe0fgRGac
3Yd5Wy/xLTceJ9DMlPnP4h0U3Fn4ZL/RJwIfq5afsNlFgWiqMElvOYl19J0h
Zx0pWDd5P6TNgESxxz7BzLwTxzu+ZxuSWOXNfJlEo8D9veY6bRMSJy+ZTXKc
KHg+whRqWpHoYLHb9i5SYPOafe3p1yS2ZoeJHZwpyBwqvZi6hcQ1dyTej+bt
PUD5qG0ncbrZw6zdhYJ7ihmo30liv4VfiI8rBQaUgWWiA4mWk2VF/fM+J9+2
1JlG4iMGCoPcKOiReU5+BhI38I0a3s37f3d9X1I=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx3s0lAkYgHEVcqwy7WIbWqU5tVHLSqJlvO+EUZ2xQu1SqqVIFxyl1i2b
cZmhNDOG3KbvG+VWCrGHOTV00WZ1cq2WijIN5ptSMWjput/+8Zzn/GzCYgLC
5+rp6fnS/f9Xuo88boQBBLBtczua+R6dFUYrvUrVsOuKS8aO64Hw0CQ5mFk6
CVXNYlkafy/03XCenFc6D+usvaNkvx2F4KKvcVb+DZ6zJBjXvdLA0jB1dFLO
QqmLSbi5jRQS3RUbJuROqBv/1ix2+Dxc6gtUv5V7Yl7IoLT7SD2In6R+8orb
hvuTzpi2+dyGB6SgRLJ3Nza4/TEb/7YduEHXPU8w9iGb1SB1Cu2GzR/CZANB
B9BZETG1RvkARFk2LR+40ejjUv7sYO4/4MHcpArrisU32VQUc+djyL05+64z
Og6tmCbjV3ufgnBw/YSl6jimV5sqOqlB6Jl/P8RdmICMgdTx0unnoKwcu8ye
m4yZ90KCKvqHIL1YwLgbk4LNhZzFsYQK/HybdYuyTmKmsddzk9AXYC9M7qpr
TUW/cnVLkYEaGts1+64tTsMqD0nNqko1XFnHSBfsT8cvxcOuu9cPw/EdKfl3
yAxsid/ZmFQ7DFRm4Z7Dukxsrc4Iylk5AnbRM1bp9kI06NnEdzk1AhYh+hLD
jCyMfDGtnHk9ArFHO0S8R9m41XDOkUTvUSC8B07ONT2NNg+KzyeIRiHOusCO
tTcHjw22XrHtHwXL+oK7DfIz6Jo4GFpirgGHmO1j8/tFKEDbhDCeBn4v2hOu
zhPjV8YWEk++Bm4ENXUkrpXghWnWxZ5aDYRYhef6DEqwUFFrLxzQQN2RCat3
6bkYlt3mbqtPQVSlnAixkaJpQoDi8goKUp6Xn5i5J8WdbdOlMi4FM1Md23kH
8rBMmzcUF0aBLflQl6qfj9Xl177bnERBLc9xbOxyPro/CeUopBQQfXXPTLec
RcPgtYdDqyhQhWf+EDl1FoXBzZHVSgpyelKOxUsLcCm3qaWng4Lxnu38gw6F
2N3n7Wo1SEHVI/4rSX8hqgLe+rHGKGhv7PWNPV6E8u5bTf0zFHiUxJtk2hTj
l/eNev4GWjhk9kmU3F6MZ9wS3+xiaEHvUJnJ6ogSrPkly6GRqYWXd0pHFjJk
6Lg8Rzy8XAvsj7eaLtXIsH3J59hKOy34/H3z51VbzqFIHKfJddRCRYH5xqe6
c5j2b1dZqKsWorxy7LliAgM4G+xZHlro3FhlbiAl0OaUosqN9o+c1o+t+QT2
Fj1cvI32FHv2HqeEwK7yqcfptBNdwvezKwhMjfEbGqEttGPL1ykJbDjEmVMB
WihjvF7EoghkijzrrTlaMDQ1mlW9JPCF8W3KmXbkAtaQ/DWByvYIc1/aq42D
a6wnCQxqc/JPol0/768tlp8JVO3aGthH+8Y7WdoiMxLHFjhl5GzUwrLppoPd
FiT2JM9fVkabP9nrL2KSGM32unqNNnfcaNmCpSRGvjds0tC+r41TGtmRaDax
fCvHUwv2lOhC2xoSBYJq4lfa4tFL2ZkOJNp1K9VRtAPVQ0H6ziReFGT5F9P+
U/UBWl1IXPKel1hH22LI4nv+TyRSKy4W3aUd/8xxIYdNYpHR+doB2k8GeNNf
gERjwk2po/0fqZdhzw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV13k8VN8bB3BLoWzRl2xFiQjJ3oLzkMgaSdFPlFJZUrKEJDsj22AYjEGh
SFnSQpKSJfs+M6IiWyESItvv+Ou+3q97n8899zn3nPu6ux1unHJkYWJiusrM
xLRxnJhdMdG/shlJnc6LcZYiaLfmcUjrZX9HIVwNXtQsS9TN5W8jnP0HkS82
zYtYXkK0d2p/WLNZgVk9ej16tweySeWHpaztUPjRtsDyTzASYQsa/ZMlCa/Z
dMbGSxKQn+brw7+zVODvX4X4Ye0HqIBm+X066xg85BonJzqVIImUUmOehWPg
rV0exPysBCWf4SuTN9aDPIUjhzRmS1BwT2uo07wecIa9q/vnW4psugylvxvq
Q6D2B9ex8OeIow059c6egOkX+r4ByS+QY53cdKWeGdyoK5qjx5Sj+L6gVT3P
0zBPtnY96lGNcn8vKbJQTgNj1OWOdkw1quC45fCu5jTsLX+eovCoGg2rO9Qf
3m4F7wvZ1Nr7qtGhRF3igVIrqOVXKZTReY8GjVmlhGbOQJSAa6nK1g9I+W2o
yYSLDfSmB/wViq1BXZkR6cRLdnDsprO6yoU6JGirgSKi7KDbMPk48qpD1kJj
Q/4ldhApnRl0NKoOfYnX339t3Q4MK3qLNpXVoZ9Bm8u10+3heFCH4me2esRc
qjPh5XQBDteQFx/k1yOhpHccktkXgbPmX8XU9wakb/3m2N1tl0E8YWipW6EJ
dS7sfE+VugxGHeuHqqAJ2ZECtauPXIaMVgEusmUT8u48fpjV8TKoqNzM2unb
hPJM2g8Qyi/DWZd7X91rmhC7zogwycERWgQZwYZWzahBlnemsOwK1FbvKNvi
1oIMlx0o/dZOIL38UdzCuw0Fz/8QIrk6AeduHfkXoW2ocvomyTTQCailqXo8
iW3owHBAbNUjJ5A/qVKRWdSG+FvSArMWnCAjeTILxttQH7Xz8uUkZ6CyhdZU
y7UjV11dhck2F3i1+uy7aEo7iiPsrlrWd4OYo2PJfPYdSFlPZfScrRuYsy2h
EMcO1Lumx1Ph7gYvCDfI0y4daJfnNTsfihu4/OR1eu3TgQrtitbmfrtBWsIi
C2dCB2pU0UK/KDeACoT+VzUdiPWG/IWbvjdBtPG/SFPJTqQtfGLQoc0duvv9
ak90d6LPX6nEbwx3cGwsUnBjdCKfvHkdu2F3OBko6hL3pRM9V3n4wGbJHWLG
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV13c8lV8cB3BRZJRRyswqIaOkbXyTVEJUirJHZmSPkL03F5frokQpe95r
HGWUhlGkHxFFKqSsiPI7zz/3eb1fz7n3e8bn3PM8YpYuF20YGRgY9PAHcZ2a
W9PWvLFJzZprAOR63Jq7CjdLauR/VnOs27dpy29l1Mfhb8SfP6924V/H6IM7
2mgAHZpnymcCMvdLUyF5Y2RE5oGVvG3QMdf/j23QEQkwB3+Zz5OAInvdEo7r
t5Gfcv2xX3kHYebNq2dz3jGIu16kdFlFCXib7O3JKrHowcFIcYYhJYhda9d3
Y4xD/TJX2Dl5D0N1o6luc3Q82s+/8EE2+iiYu6zwOp5JQpOLCkF2riowUGUl
NXIsFRUPXPo8m3cKhopDMpfeZSLRjMrzW5dOAXl01PKvEhmlX+Gulj2vAdE+
KXxZKWQU0t8VZr+oAbe8xHZnaGcho7fnJD+f0wQ/hU8Vjxuy0eZuNft3c2eh
v5Ba8CiCimw69s02auiCIs1cNvJbPhoMj7k6RNaF/7apahjy3EV6p7+hlR+6
8BC5XFg9fhcptxUmHSZfgJLrNpz1sXcR2xgX/3svPXg9+72fe989NDYSS9d/
qQ89OsKtbhYFKGkw+K+Gx2UIun+rB0oL0f1fKwqMlMsgvsCKDLsLEX2zmyVq
vQyfe8u7dX4WovHDls+ObTMAl8pf37oPFKGjqerJ8pUGwNN+7e+RqiI0dp5p
D9/PKyBFfb1aW/YAKTaFaU85GkEM9xWKVVIxOtO3Fvgg1QguKjuJWZcUI+Mp
jwqbBiNw4hPk03xRjCL4bXaMsl2DUfvJwVKmR2jQ8/Ro38Nr0OV05eBOz0co
RJ7Zo3nyOkjMsj4yvfgYvc2NzE62MoXIQIvJnN8laIfxEbXIGFPgy3ARi+Yq
RYZ8k5/8K0xBTmgl55p0KRpJ0pSxWzcF+lTT8/Jrpeh78CaaarYZiKp3d8g2
lqINlSenPO3NYTTNT8DPrwzxpaHNEvkW4DyiohjvVo6Ou2UM5lRbwOuP8bV3
AsrRdT2Xx3zPLUCG5ffUjahyROUQ0ds6awHc7E8zt1HL0e7wwIwVZUt43npF
dfJ5OVLwUpHseW8Jag+cqoKFKpCmYcOpAC5rkFg0rulpqEBvloSfUPdYQ6vk
xetqHRXIlBSk2nLcGk7vPqd/t6cCeb05fYzJxhq4huItTk9UoELtHvlomjXo
NvoGbthaiVhOTvCTLG0A8vvfGJtUoufSnD8fV9+AxbPBOkvzlejyc9ebXZ03
YF3omSrL30o0eqPv++zIDRByG2DZylyFlu+RJxRZbeGHQrfu351VSGrX7qF6
E1sIECNPWZ2oQlE8xzramO1g2cFr2/WgKnRu1ZLywdAeWOOeHFRmqkYhi9/4
SE72QJo+8iWdrRo1zt4i6QTZg9GLqclv3NVIfjwwobnIHlyy5Vd8RKsRz+us
oLwle5AbVVFUVqlGg9Q31tZpDtBvrvPBxLMaOamry013O0Lr+JWrp0ar0X3l
zocFnx0hYl7wa+2XajRyWE/S5Lcj2K720CRmqpHePlORrl1OwJl/QvnbSjU6
tN2Pu/ymE0gFvArava0G/ZuoWHRnvwlNzwa3WmrUoMRoseZVTWeI/GO5uvdu
DVLUOPjlmrEzmDT39p57UIPe/dPYSnd1BmbW8Brr0hq0y8PO1IfiDHErcm3h
9Br02LTs38IvZ/jPvPO955sa9OKgitoPigs8m3dM276hFjG5yJrf8r0F8qqn
IMioFl3WPrQgEnYLWCJohm9Ma1GhtGpUd8ItqBQYsN9lXYu0xi+Uyxfcgkta
l5ILnGtRipE7w0zXLXATKq20D61Fohr0PPvdrqAZP8c1/KgWqfKfHbPsdoVY
2/YzpOVaNPSRmjz6nyt0HtKhCv+tRT6FiydNx11hhnHj97wNdajq4L27Riuu
kHvczjuTrQ5J6f6z0pNwA+bMlE3aQnVoW2j1FxVvNziymljXqVqHvk6LTvOJ
uIOaylY/jaA6FF7lTUmXdofsX14fD4XVIXG/Lu3tSu6w9evymHhUHTJh8S/h
POcONUPPemcT69AbsQFnZnd3kPs9/Nkgtw41XYn/Nd/hDvtud/250lSHUlpW
lrqcPSDQ3E1GZ6kOMdd8ksz08YDN5gLGQSt1yO/hyysWIR7wwjzlRPlaHbJM
yamdJ3nAWeV6bmamenTA+qQXX5MHLNf4+8Vw1qMeluhFC3ZPmA+0V1jZW4+2
XOBbWCjyhKGVzn9hV+pR0KkNu5srPMF9ufzyZaN6tHDk+6XIBk/Y9ZWtRdS4
Hn0Qbazi7/aErvsKn8st6tHjOTN31SVPiKs/VFbqVI+00ovmIjW8QPzo0Lx4
SD2KGj78S2DMCzbnF6kyPsL9UZzwqpvyghsvN3CVldSjwYjUtUtLXnD0adeI
YXk9kt3/kyWe3RvuGZ4LuVdTj3pDHu5aP+QN1VGFqrwt9UhASkj7c4w3NLlM
uNzsw/XdNhQ9UvKBH3oeHCyr9cjgWZnsWTUfuBvg3Wf0tx79EzStHD/nA2o3
lNcfrtcjvXZ6k7CZD7QceRWlvpGGFnd69CVG+wDzVFLT5S00pNr0ZYPHiA98
K72pwCBCQ70sr4yVo3whVdqBEgE0pBfDYbk7xRfk1hx+2qnTUA+Hji0HxRdm
j1SeO6eBzd3l+qHMF/7utdq+8SwNdQn2RPgP+MKW5vVTlhdo6JVCX3mjpB/o
kahvnprQUMfVDxtV2v2gesDMXdyXhjQHhdj2dPvBL91w3U4/fN/YhHPLf37Q
K+5009mfhtotRviHp/3A501HQNUdGmpzHJUP2H4b2HdpCEpH0NCTO+OGTVa3
Yb9990BrCg01Fk0/VmH0B62Cyw6txTQUue121zy7PzzlLx6Uf0xDF++w/nzI
6w/Mex73ZZbQ0Ncrkgd3SPtDVwbd0a6chniZzWk/LvjDw8IXF5ZqaMjZ+m17
bo4/DG7ZeKyrhYZExegjG44FwOF3knE+/TQ0FXeWoV49ACaPv1+ve0dDtcvv
xJy1A+DkvjCZpQEa0u6Ztx40CwCtPt5i50Ea8r0jN1UZEQBK6kNeeh9p6M1w
3m+rvgB4rGdu9/4rDYVlRXJ1uATC0NRxN8ZV7BtDkRf8AiE5QWbLwTUaCldU
WH8fFgjPt7ZesvxLQxEv3s1MkQNBmHvkW+M6Hu+fPS+52wLB1XPK0nIjHcVc
aws34bsDfY/CX7lsoaNkgQ2rCy13QF8s+Dx1Fx2lfLnsFvjyDiQG7RUuEsGu
fPCN5d0dmJ3+3lEqiq2l915g6g5Mj/4qoovTkVZT97U8tiDgv9nV2iZJR9oz
u452KAWBdme8/z15Orqg0zTHHR0EEXeEfVJV6Oi41n7ntfggyFRbveigSkeS
Z+59+5ISBCwGvTqgRkdrED3aQAmCoFn2om9AR8VKBl025UHwZIR9g6IGHTEL
zTykDQRB/+BjgSwtOmr+LmRhIRkMan3qP19fwe0nEz+c3xcMPac++MdcpSPS
OKPh4f3BcHJ0SEPTkI6cRr7qsh8PBu0OiGkwoiOBN9XKNTrBYNP6niHHmI68
aNp8rJ7BsG3qvLayJR3JR/l3l7cGg8diXPEvJzpSOvRmcWNnMHS8kvpXcBOP
59NeIaOuYPC5sCvyqjMdaSq/tdvwXzCQrz1UprvQkdlPacaLP4KhQoPjgpcb
HSUZDijN84XAYSTd1+lNR3NSilmHnEOAiUFJczyYjpb7I1ui3UNAcrR55k4I
Hf0LGf4y7BMCK0VWEwKhdMQ2HHUwIjQE3krxPtcNoyOJ5I+v3mWGgHkW9VZp
BB1dXolb924NgTNbS37rxNJRbeekNZ0vFPZPta/xpNGRpaM1eVE4FLwuiuRn
YG/dMvZ6v0QoPFXQqxQk0dENvcHDRXKhwHq/TVg8nY54B15tTlMPhS9uRTJS
mXTkMV7x+KZTKJQ9DSvip9CR4vrtBdGWUPiGH9/S79HRSN6ylHF7KCiZzvSy
FuC8qXuaZLwIBdMd8i3+2J/CnTu29IcCSbt2l8V9nD8Oi8w/30Ihy/L0vEQR
Hf3k11Tu2xYGgWOB7inFdFSixBUWaRsGOwQD/HZU0JHGjIGPnVMYuP+Yl/XA
/nA/2+mcaxh0/PYI7MVm27nXgP12GJzNkWSIrcTjWVGRTEwIg9R9UtErVXQk
2uz4PL0mDEaFDVjaa3GezzzjKGQKh7owVx2+RjqSZtiyIXJzODBtXsh2wG6p
v7houyUcOk9qkRqxf0iPDEvvDAcWjjfRZk10dJ5jsbREJhx4Qj+E5jfT0cZe
cf0a/XCYXhVn2fEE5+laIKktNxwcPWpTWtvpSKq1UInzfjg0+Wn84e6go8F9
3W+NisOBHPmO1Rxb5a8Iz2x1OOgeThZfxd6Y9ySB/0U45FzgOS33HPd3YmOU
80I4eLfZ3w1+QUdlt2L9+M5FgI/493MzXXRk/l8Vv5VuBFzft8f+QDcd8ah/
qC+5FAF28j9OeGJ7bZP7rW4aAVaTQX9XsVVru9xvukeAfNz8yqZeOnq1yn3z
aU4E1DTJiHG8paOvEZlmTnMR4OE4bfr5HR2FM8c0G/+OAJNr1FyBAToSj7gt
rLMWAZcqnQv1sY3DTYfkmCPh06QxC8LuCd19dZY/EhQpG4Qz3tNRfVC5rtvJ
SBj6uP+l8iAdRfs9V/FJigRxz542s2H8f/CHRrEjRUKoscjxJOw230erhlmR
wNtd7N+C/c8ngXasIBJe9J13EB2hIzfvy4dW6yIhv953Zhj7mseobODHSDCZ
mGq5MEpHMs7LgmHyUUD+7LzG+RnnL+fVnpGDUWD3NIBFFTvrdZ7C0WNRYCp/
fsQRm1Xu3KnpU1EgXrD1Zwf21ymyw2WjKFAQLCj2G6ej+/YnaLvDosCFK7n0
/QTOk03glfb/8PeFQn1ufaWj92kXzUU+RkG7qbF9JnZSm6SD73gU5MuOybZg
r0t0B8jNRoHcCl2W8xveL59E7pM2RoNz6EneR9jZ5k/mbRSiIbDZpWbwOx2/
r2xMZg6PhhyLuHCBGbz/gtYfnImJhp2OfDHK2L0Ff1qiEqPhnXujnSl23MzP
n2xZ0cB+brE6H5vxzrAeZ1k0uO9ripf8QUcz+bVcfP9FQ7hHkbX0LJ7fSbsk
abkY2G9Ia97+C68nh/UDB8UY2CD84LIi9p39Zi2PjsSA2f7czgvYx30Nfsqp
x0A4+zH9GOwyNnU9xasxICy5Y+gvdpacINeJ4Bhwzu1YHpmjI1f314na/THA
zx2kG7NAR/TSZNuDgzHA+idZ7y4243cDNYGPMdA5WHKMjp1mPvJj8msM3Dri
+OQbdq3OrE7oWgxQbrx6eGYRnw97uTnoErFQ+UF/4R921IfLUXvdYmF0p42Q
8W88Hzv5zbd6x0K7OeN+V2yBS8NHFm/HwsrHGrkI7EedNpNPw2PBL5Y+WYbd
VeulaUqOhbHqSkPGZTralpy5kdQSC4Hv35y8h009/SGIkTMOpk26nvWv4P4e
CGW6tD0Ors9mvPuGbSMkE3GPPw5SDDq6/mLLznvHauyOA+Obdbf3/KEjWt62
9IhjcZC+u+SFO3bfqtYjNus40N6Yc5FjFeetktbPQ4uDH5N5lXJr+HzKMTe0
ao6DHvUzwmrYPVEsQ1WtcbA3QNtDDzvdzGD0cheut/hy0g1795Zf39M/x0Gr
9sbJWmxVOykGwa3x0P9PyejEX5yXXRkyElbxQFWMpB7+R0dPRVlu8tvFw6T2
syYNbG4J7zLOm/FASZLpuohduveq0ppXPFzhJT91xv62f6dqf0w8/Nj4fPU+
tumpDP3IynhonH7WyL1OR2fsMnymNiTAR6XJ0RHsdAeWhjHmBPh59v7JKexx
J++/A+wJ0OlmTPqNHeJ6NaSNNwHyeqZ5uRgaUKPfzrgc6QTI2cITANj74zNy
L+gnQEyn+CwVW6Ayo6MqLwEWdKSbLm5oQFsfyu9Mvp8AUCRkboLNmNdu61yc
ANaOO5Ztsafi5zdLV2N7aLEEYDfaXzhPfZYA680/7hVim4mx9ET9SABWxb6P
v7ELkrz+M1FOBDtRyZIUxgaUGblF5sTJRLj7aHUTBTs+sMCPTzMRToCswX1s
L6c3gm8vJIL+uY53ddhnzsqbnrVKhLnlX7YfsL+vT3xSjEmEFErRCwmmBqTg
YjDN8j4R0lzD3z7CVt3RPak7nAjaVVqN1djaTWc/kz4lwqjZzuwmbAd25UGJ
mUTQTJo/3o399hL3uMiGJDCont44h83583fviR1J8Gjd+uWhjQ0oUqq9xB2S
4Hwjj1Mt9ta14H07TyXBypivTDN2erfqQ/rpJAg2Ozzajn3fq75gw/kkCJV4
d6Afu7XtUXaiQRL8bmhynsdeN0+JfuSQBF+zXK/Kb2pA3mQzm89pSbDrrfNu
KrbHMkOrUUYSvGrOcyrAdrt6V7SHnATsXeqlxdhOvBNDjdQkWKXPCddhmyc7
XEx/kARGK6isG/tctKfaucYk+Hb6+911bEHfWP6yz0lwumVy4RpzA+J7L+u9
50sS/JT76G2OveNIV1/21yQob92+aIPNtciVFDWTBIdcLo7cwt7oms5s+TsJ
HlCbnSKwZ+zy57ezJ8OjEf/AcmxkWPfaTzEZIp7Y5TCwNKAXnC8YJA8lQxnp
w+Am7L6ODwd7jyRD2roFDzv2VyXGrL0qyTBs2+jCi83DrXOj70wyND20H5fG
vtH56Z+cSTJcdzdt0Mfeenzr/rHIZPDiWj6fg833S9QqLiYZTjDwvM/Hlnhw
MP1IfDL80WA2K8Q+usNoLT4lGbq3k0zKsC3n7j0/npMMT/RnhJ9g1xQfs0ir
TIYP4nfKP2MbC9qknBlOBpvgtFN7Njcgmnas9pePyUCRNZeQxt4RWMEc/ikZ
4OHwP1ns3tG/fk8nk+GL0oaHStiahelWKnPJMKbm8uIU9oEDz5UOsqTAk8ur
py2wmc/sG9h1IAWExR3UyNhWPvrJTQdTYPKMPpWC3fLQ+7zx4RQQ9fddycW+
zdGGyCdSYLkip6AQ+2ev8YPtminQgB50VWEPGSf4sl1Pwc+vBp6vscvdfgku
haVA7Uyk1D/sUIW1GtvIFHhv/2mcgbUBXZlm1vsvOgU0B29QmbDXbITCGhNS
oOrqymZW7LNGZ6ZDMlMgxDC9cRv2R7WcRs7HKUA6fjBPCnvrlnMm0m9TwPyK
p5Me9ljnpd9Z/Smgrx/59iJ2dYRpMsf7FFh5KHjUAPsag0f77IcUGGvvXzHC
LpynytV+wfW0B8yssFUHF/6q/0kBQX6Nek/sm0V5VGOxVBBm+vQoE1u3UWgr
0+5UuD6UspiFLd+bGfBQMhXEjSuUc7B//EkyXtqXCmzj6q352Ld0gwWSDqdC
2IHNlcXYbosW6a3nU8HiZgpfI7bXKYkEGS9sVCc0TMyHYe7fHp9UMHH04/+I
ffim4E3v26mwenTD9jHs3+nbtNuCUiHwpA3jBLbPdyY209hU4Ln/qm0a2y95
PDw5LxVOxSh/WsUO/Hg/YPlFKgi8P5DEx4bzfof5tevrVKiKfikrgC0jais0
1Z0K+srVzwSx35lLNQz3pcLVRt/lXdhyn4qXn46kQr8Ns+Ye7A/jZe7xc6nQ
qFuccgD7xHeavbhAGtieHPl7FjspRoCWLZQGEi73bbWwv8jc3swrkgYx8z+7
z2OnOCoXsexOg1tHBSm62N+nm8en5dJg2+ik+GXsrNlWs7qTabC1q2bKFHt5
4bWBtn0a+Cq6e7hj53Oqy9Ic00Df1PmRB7aWTC2jpHMaVJKlxzyxs82oZetu
aWBuOXHWB1v1hTNrlX8aVH8lsQZgh+VyNvEnpcGR2Xm9CGwuLf3dk7VpcN1b
hiETm2bd/ucSDY/HMY6bjG1551hvSwOuL9wvloVdVS0WmNWSBotqImoU7Csi
cwM6L9LAZKjGKQ+bspASWz2cBkxpn9MeYEvn9s0FbySBNEKi9dij3HSqBAsJ
2mP999Cw08NytdpZSZCov0Oajs3o4HB3MycJsgYnZBuxB5UYLibyk2ATN9/e
FuyYF/sqKPIkmJ4b/vIMe3oxxKXOkATemRco77Dv2tkJGl0nwQM95jsD2IZD
Os/+mJBgZhWZv8dua+ETUbUiwdk0EBvEzokt7Wq7SQJfK1L6MLau2KDcmxAS
vFEJvDSOXaZ9YHr6MQnIUiThX0R/tFa9LcpIEPg5qp8w87l2pncVJOje1BQ3
h2162kgQ1ZJAivpteR6bQzVYK7mFBBeb7Z8vYTso9D441EeCwxLlGmvYkjyu
NoGrJJzPO3XM7A3oIteJX3N/SaA9Mm/Igh24dVOALUM6LNHRCuF+NnKa3qZ0
yKqyOMaKHcb0pFWcMx1ScsbK2bE/LXCJPxNPh8TPN4K5sKkD5SOcWulwv4+z
hB97QG5ajaadDqBYpCmAzRW2N9/yQjp070v+SDhkP9Wq5nI6TDKYcwph34iO
/XrNLB2ybf7d2IWtcOLG3H2PdDD5Mr4kjt1CFWRWzk2H9XEr6j7slYUrthP5
6VDzmiYhi614PuV5QkE6nN/v+4Bwwe/NsWMP04GN7Ui5HHaU3hJnZHU69Hg9
qVfA1mPs5X/TmQ4qTHdLD2KP2UTI2S1gP5k7cAI76Uyh8/hSOlx/xEElrCrd
UWa+kg7vKNWsytiU6U2KRv/SgcOr/CPhK+7hh7U2Z8AEs02EKvaroDA1WaEM
YD8khU5i12WH6P88lQG1HopjZ4jxBtxNcdLMAJ6X02pnsbebPX379WwGaKqf
ohJ2E2e8MqaTActHOozOYcs+DL725moGpD5UeKWFfbc2yKraMQM+RH6n6mDH
9wZ6+qRmQL4b7d9F7AS5SpWvpAw4tklI7xIxnuiJTYaZGZDnLZNPOO2kdvqR
nAwwvaqtfhk7q4K/bqkwA0xcSoIMsAuTq5c96BkweFrhx1XsZv3vt13HMuAn
o1uCMbEeJcIaY58zwM5lrp/wE1Z9Dv0vGcAxLyVsgt32pI6yfyoDBF1pxYRf
HAhvml3IANmkW09NiXxwi67f3JwJhWSfcXN24nwzCHFQyIQq3e8L1tjr4X9E
OBUzoWyO7ZgNO3H+5zZVKWWC4JGP/oRl735dXjuWCUa/7zHdwLZ1u+2SqJEJ
8tlFW2yxR3jyjauNMoHLfnSbPbEel6YP/wvNBEVenSkn7CGW5L67EZlwNDdI
8ib294ZDbmeiM+H6S1cLwpt33ylJSsgElYMJ7wifWuDeLUHOhEN6dU3O2PS0
I9xnSzNBWIot6Bb2g/6QqeT3mXD7ZM47d6J/vBz2rEOZsD/hLrMHdsVl0peg
4UyYzPI8TJj+tmjM5RNu3xFOIvyq99WAznQmbOG/rO9JzMfrHW2sDGT4k9SP
vLCPdhRTgveSQXL3c19f7MZNSgIr0mTYdGbyHuGTp5sybsmSQebK4GvCWm3d
KWYHyED5pSzmh238dCFK5QQZSoVW2gkHNat6ruiS4UOBB4s/dmftGx1XLzI8
YSt2DMS+pvs6T9iXDOwilamEpyeezXfeJoNWT1wDYS7eJrJ4MBnUBuhsd7AN
3Ysm3saSIZN1vZDwFwX/gMP5ZHB4f2kgCHvjwz0lqy/J+H04hC8UOx1EGR50
keFTqsoJwlLvBS5d7iVDxcVeE8LnWbhWHr8jA6NF6F3CKTZ/NEzHyCCRvkMm
DFtMvPtDyxIZopxEFMOJ/ZntwxEhlgUXD4xJRmJLlER82bM7C/qQlwbhzSit
pV0yC9rMpiwI934q99gkmwW2N9wohK1lvn0IO5wFkpGrnFHY0TSjktDzWRB5
hf8X4b6B47rBnlmwJutJicGmfTsrJeaTBcG/9tcSpq5eYXzilwUvuHq6CduK
uNcyBGUB78d6xljsPzce7QqKyYJC+aO2hEWXBGcDc7PA7fnmfXHYjtv/Jvp3
ZsHSjTZqPHZHxey52ZdZEJBZWEVY9MInJsuuLGjhd39OuC/6mfeZt1kQYvPy
F2HV9WQznuEs+Jhy+1QCsT7fJRUe/MwCmeCZT4RrkV7X253ZkDX/mCeJuG9y
KkpTIBtaNjPtIezw55A6TSgbPvFoHiEsckiwliqWDbsNUq8TjiqeyLHflw0X
a7XvEb5O8ru5rpoNA13nFZKxGRwLOPbdyIY2h3/HUrDtzDdT3thlg3aO23nC
3QZO+/wcs4FH+q0xYSooaXXewu0LjO4QVtnRFml7G9dLCWwl7PfkM2NBUjYM
ipw4m4q9uFNiRagB1/vLpZFG5HlLZFRbUzaMWR67RLiNcWqnU0s2rNXqWRJO
m6k83NCeDbt8tYMIK7aqexj1ZMOIr18D4VvOlrOkiWw4+bpFnkTs/7b8ia1c
FCgM9GRNx352+vvlaB4KiPK38BIu6FBsY+KlQM6zv2KEzZ633l3mp8BI+sXj
hPteTph9kqCArbeVA2H0Rnqw5ggFXP+Te044bbSiy9iMAuwCyC8D29Xij8qA
BQWmfMPDCet+Ui/Rt6bAr3BIIsw6/jZW054C671p9wkHTi6e3e9OgYSwum7C
dj+OtTJFUmAtYFYsk5i/tSd1xaUU2JTv00zY+bdwKV8FBYZPNDwjTJ3zLYio
ooDN+YUewv++Hki2rKfA6Oy5z4Sb+/MdBJ5SwMIsjIWMDWXBwjH9FPBSU9Ul
rG55MtR+jQJKyiz9hN1McnwH/lEgr0lmmPBdwxWX0xty4P7Q6QnCjBcqjMWY
c4Cdy2qRcOsJscP/ceaAmNZx3ixsDd4N385K5MCgjdUlwmeet+hKaeXAq/j/
OgmHCSYIvNTOgau/snsJP3W+/uXmhRzY8sDgP8LKvEsBVZdzoP5Q2VfCipb7
SlTNcmBxZJU5G3vXGondwCMHbpUwqRNeUnB8HkzNAVeVLZWElUKPpu3OzwHz
Ta/qCbu+22T+7B7+PfVQRHjaP+83x8McuKI29Irwp85+ycwqXF9GcZJwlxWE
lz7PgYOLIQIU4rzM4FUfmsuBSpavtwkbeT2b0VvMAb0F82DCHAa+5I7fObB/
X18EYTee4Z8VazkQnvgwmbBafEFuFDMV2ge4igi/Dzn495AAFdb83/UQZnPW
r086SYWPqTaiOUR+99Vw+mtSgX/vqjThd1/5bG3PUyG5zf8g4XtWo7yqBlQ4
0KahSVjZyMV9yo4K49rTDoRvasTLayZRoWRvYznh/Sdb11pJVDhlvYtOeEFl
5cXJbCr0vHFoJex3xMZWpZAKHFyt/YSjZFTylBqpMOfjtUK4gGuGW+IrFWQY
tqlQiXxukRjNm6HCSXGF04T3sRmV7pqnwjanozqEK5natQT+4fp7tpkQRkuU
UO7tufBrbOY24ZD5N/qJ/LmwsugdSljz52bRLSK5IBL+M4bwq28ejZtlcuF4
XQmZcNKX4pgIhVy4UzyXR/jS51HDjYdyIZwm+YDwjtEde0OO50I0u1YZ4cEP
2ovrarng9sy4lvD/E+OtxA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0Hs0lAkcxnGhmkTYIpfjlrMqFVFtSy4/l1SW0tZ0RtR0QS5JSaI05TbI
MjMYTPS+Y3VbqbVl1amZfgqJXBLtVJKZ5l3J5ZQZHE7SvvvHc77n8+9jcyju
13BNDQ2NQHr/d1g1E+AXMdfT1NBu381vFx91XGPY+VYoPcWdbJXF0B7s0U0J
Nq1QexYnO/CXlkSgDDeotSq04EjejzqCsEQMFv0A0+LFEBxR0LLPhYtm81IH
1GJbWPgpfYWHRjGecbvvMiZeB+LWkDJt4ipWyXYpP4t9QBovShgbqEX+29Rv
vgm7IVC6M87CvxG7yawyweH9IGHfzlF5t6Ef66HPOYMwaFk5+cw4twu3fT1U
/o4VBVlat046N/QgL8fm0Ve/Y1BnJ7kVxJahh+lWxaHOE8BulB4Y7X6DBfXT
kx3HEoB5NvJU0KdezO77acxMkQgWgwt6J0V92DW/LdQtOxm6XI6vrnHqR8n1
kWp3zRSweiYVGnjIMeNSlsHTOA601jG9+M/luCNQqjLMuQBSb0OW9U4FOmSn
dNY0pMIrH4k6VqrAupaPYQ9M0oHJcVoTZvsBb603yMg6kgHLulupz8kfMHEv
R9hIZsKerQ+kdvUfcJBbyj6q4sKO4YVnQzWVaH9syjzDIRuKP05tZPysRONQ
bcG8zBwweWRCpkUr8cTJdl7Aq4swMN60gilUIrH53QVN/d9gXXW+s8F9JSZY
ltjbHs4D8xh2R/NrJZrdKXl6V5wPwmHXOb+olegYxxyZ/5oHbnWc9NkFFJ4W
scOVRXwoWLZtJsqKQmTdaz/jLIDqyuy+5rUUhpqHF2zpEwC/0ldm5UVhTfyY
+WRGAVjXTSTNbqcw9rqYCLUphMKBFonHXgo5/VfPTbUWwouYObVvwiicGm9n
BkQVwfbICZf4WApXkj2qVG0hRFiHLOxMoPDPAKeRkWoh9D0NKnxylkJCVvNe
378YRnWaqsJTKVSEc9dEjhfD5h5rYS2XwrwuzqmkwhLoDTh4dU4uhV+6mGnR
jqWgcjuwqSafwhuv0oYFr0vBzrF688oCClvqXgaeSBTB8NH479NFFHqUJely
bS6BRvo6TXEJhTFLvvFSWi4BZ/Fjn34RhRoxV3RXRZSBvbT+7V9lFA41Vvy7
yKAcIrrvno+6TKH7zON7VbfLoUrL5Hk7QeGWZ/XbV/hfhqLd0YOzJIXXSoy8
e1WXgeHs+t6ygv7HN8/Bj09A0GlBCON3Cju8bxjNLSRgh9HEcl3aa70aZhqE
BGxapKfSpz3uPt3qVUZAbjn7/FLaZzaGH3G/RoBWx98cO9rZ9u7i9RLaSpah
L+0rBqOGtoMETMkUvHO05+kzphVDBOiNHjdKpR2pZysXjxJgvqq/NIP2Kp3g
25ZqAuL89otyad/RavI3myUgtk0nVUQbJ8vTDZeQcNLWZaSWtvXEvegXxiTI
4nYF3aedpn65k2dKwmqLg3ce0vb7wrDWsyLBOD/k+BPabZ8SJAx7EpZt+dzd
SdthkFfZvJqETMvm5d20+QNVF7mOJLDsy5P/ob1LKWdpbyBB+6H30j7atYqv
ng0bSZDfND4sp20sN16e5krC+j9GqpW0k947LfJyJ2HNx6bxAdpv3wVMfPck
AUSVrkO0/wOjrIru
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx3s0lAkYgHENYXddy6UZa5h0KhJNm25L8w52yFFtF3JLLblEdCqrsrKN
+3TSEHL/vnEkpZJNJyXrrbRqWjKKyHXGmJlvo7aMbJays3885zk/VtiRXRE0
LS2tbZr+//jknC8vciHH3gX0Hs0eb3l+WX+5Z6WcY8CyUVUc9sFug+RAeqWa
k7X5G8bLTUHYiy5q7Upt6NzZoBtsFYOBJYtgRrQYopafEM8vSEKGLl+pFtmB
iJjxcJQJMMn17qYPou8grsdzuvdKCdb27pb/LfKAu+3PFHu3XMXcfv5nz4Q9
IC/Ntv0cdQ9fkllleeGhYE5YfOR4PUJewH2P0yYHQTewINIl8glunQ0rHww4
BF+syms6i9pRKGC1zPLigd/nU39fKMEtdG9ZWOdR2DciedvW/wIvPJiZfh6f
AEv8Z4QmU92YPbT+A0OWCIE3RmuvPX2FXXrtIa7Zp6D9EM2CrOrD5pqJ6260
ZMhlNk4NcfsxvTTLpO1ICrzv3lQc3TKAO7b9PmkqOAMTljGjGTCETtnJnfWt
fHiVayz0zhvGO2LVwaYlaSARtzMPKEfwxjqT9KyodKgTGKl8hVJMDEopfExm
AFNs0JpgKUMqs3j/4clM+L4l3jWtUoYO8Z+s0p2y4Sk3OnSCPooWITp5uhkC
2F7N3diRP4pHj3cIfXvOQnEZab1XW47ED4NnaMbnwOx1jCF5UI4JzCIHu/Ac
6OrRb2Y/kSPjVlFbg+g8nF/gzlhlPYbOR/wm9PqEcNMrgr7s8BieKNkfIS/I
hcksmpTTPIYY0NiRtDYPFCd0gpk0BYZYRVzwGsqDnGoXn2FvBdYf+2A1nX4B
ri0zmiMFCoyrEREhrHyQtofwGY8UmDJSffrTs3wQ8kesg2cV+Gmqw8/3UAEc
Y6yI9FmtRHuye5KvUwhfjQWtcQhW4k1f9sTE9UJIuq031ChQItFbP2zscxE8
/Wsdd91Soiwic3X01EU4ZZzce3xAiTldKT+fzC+CFlNx/e55Jb7v8kuNcS6G
Mdd/1TxbFV7pSR3P6yuGQnt3/9+4KhTfebHtaGIJRJ77aderUBVuKTtpkMkq
BXUTJ35vsgpjzT4Lk8Wl4GRTwQooUqFW7CWDVZFlEP3LrLOiToVvHlcqjEzK
oWtjk1drmwrd5h421taVw7Caii0YUKHX0wfbV/pUQIPrQFfDOxVeLjJ3H5is
gF9D/GMZNArjPHOceLkEeDY3OekupvC5+xXzhfkEMIMeuu/QeA23da61kICm
zgxuscZTbjPPuGUEyOYOzNubUZi0ISLK7TIBjuaGp33NKcx2cBOtayZgpXF5
Ro4lhZdM3praUQS8C10/PW9Foa6x/ozsDQFhNyVxvG8pjDa0k4reEsDdOi45
p/GqrwPrmGoCWtj3AunWFN7S/sOH8YUAhwOhiWwmhThdnmZqRoLl4Jx0ny2F
th8bYyQWJPx4Pnxxlcap6hc7hXQSJHZX2ZTGvPf6toY2JNDDKfYxFoXtfyU0
6zuQ0NDcz81YSqETJax64kjCDHPwpVjjXGXt2UxnEjiG4zuN7CjcLZcG6LiQ
8M9D70VFGt+WzXJaN5DgxazaM6CxhdRiRepmEvzWLk2zWUbhyWG2EdeNhNeP
/6wI17h/0PfjPIcEaWn1pRqN/wN7L3+F
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVy3k4lAkcwHE5Z61jOiijbFZPWixdsh3Dj0TakRU2dqeUGo0jthJti2Wc
42iMcR/vO55EPISQDvxym3mjklZJYkUqylXr3m3/+D6fv766Hv5HOLIyMjL2
X/rf91OLLBtPBYurI8qee05a1HcW0DZb5w1ZmOuUyG+q08ZulWA3rbxpC0YG
edWs2hB70HRaLk8OCkwcErLL9qJb5iqYE6+GE0tsB17Rj8hQDB+ZFutB8pv6
+kHyV7y87/buSfEOmDdfc3g60QeLe5yGPor3wxbriOgR7z8wqTd8yTrAGZjH
drZqWifgEzImW3jqOHBlVYxUpClo43pvfwj9NLSFD9OrTbLRbsEjp8/VC75N
cV5BWxajgK9bv2DjB66bFPgxWvlornVw0OPhOdiwo8pxhFOIyffnPnf6BQAs
LEbaC4sx9uWuScZgIJT0utl3BpbiY6UH7H2xv8MI/+zkDwfKsbZwrIQpGwx+
bOULR0orMDIrht7qHwo096ZuT6VKdLCvm1rJDwN+md0Hu6AqNI4NfljeFA6V
ZTXdV9qq8Zbkzem76yJgYoWqVppRDZbupEfGnImEZbn4qNKI2xj4S2hqMxkF
5we3+BjW3cHR6Ax336lo8GYVjFgp30MDv1ntSONYiHMekEj31KImW16oGMUH
Tduc13MhdXjuQoeA9TQOjjSrucRV1SNxoC9MVj0B+MqcPvdHiAE66QZ6pxJB
SeLvOxp6Hxk301srxVeg82iMdi2tAU38XcaUngngaHw/fXtiAwZlunOGUpKg
QRDPnddqRHSt6bi8XQg9FV20kqxGZGtzkm1fCmGrouIFO70mLD8/qf05Mhne
irSDhQVNeLZQTLB1RYCOTsWxOs0Y+upayKxUBLb/uJrN5zbj7EyHC8srBcIa
hxvDVrXgd2T3VLh8KjzpV3sdwmvBMta2sbGSVOgA0VDCXAsSPeX96ofSYGIm
avy4ZysOcqK/586kgUT/p4n3z1sx8XHoxUuidHjnmi/K2N+GE49deN4mGbDW
gzOtX9SG15/y3gufZcDpdaLnqzXaUXKry/5cYCYYcRhhdUHtaJ59SSVaNwsy
P9owLg60o8+aJUGwJAumXiYsaxyQoIxPvoqhZzZwX3n4quRJ8F1z3rAaPQcu
rt89f0dWiszFhpriGznQq2Bj+jVbirbt9w9vOZQLUp0h078rpFiQrmH1YioX
HB44H92oSuFZ60RjmyQCBoq6rsWcoLDT6rqGgogA2epX9rMnKdxq2bTYlErA
b+MGT7mnKJxhzkktswnwiosJt/Ok8LIZ5wyzgAC118WOX/lSGGvAFO+sJUC7
ZlMXL4jCfPr4Sr1RAuzZRtxjVyhUVKfNDb4jQIS5SxIBhVxVvQHxOAFOM0Xn
dwkpNFR2u6EzTUC6C7GglkLhTbmWQ4xlAjaE2fLrMynEzzkRK9eQMDusk7b2
GoUbP9V4P9IkwYCZtplXQCFvustRoEXCny5/pY0VUmgzQduo+g0J2ftqNRuK
KXzwNqCWZkCC5YJfCrecQuNRwdU2IxLWBwTrdVVQmDRSHBdt8uVP9EreW0mh
09CAq7wpCdUqH9TVblFYNbhg0WRGws/68TpBNRRqDmjq8/aQsJa1WnXgNoWX
+repWTJJqHPmvzh4l8LePtanfy1IkDIm+BX3KPwPJGB8gQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxX081HccAHBxuOrSycPCZskqUdTKqtXlQ6JEtkTMzbOIkDoPuW8er4te
6VzyFO53ytKayotKCR+i7Ei3k9Izl8XpVBx5KK1tf7xfb7OgmF2h6mpqam7/
+X+lasbVaa+m3VU/0GlyUTbcP09f6ljWb6ehk9EmnSVp7GYQH6OyMbshZatv
q9qTxh60HdMo0wB6t3aH3RdFo0/RApgW60EnV5eROjPVaKyVNjAmNgfZozsb
l07SMWnTjQ2j4jUwVTcUmDW8EC/2ePS/F28Bs8qrrRE9FpjzNO2zI2c33Nap
ZWbUbMAH1LFiYbAfuNEeMRZMOqCT960tR5gh0DyxnoTIt+H2T0Elz733gbsB
Z/KCrTsKsswaPzlFg3TeLA8+bxduNtomD5LGgraw6FxKmSeeapqeuB/NgVLu
Jn9puTdmvvhh1FgeDyxZ3E5uhC/KtO+xN2UehqyQ2nVJgX5YXzFcyVInwBWe
tTI/GYC8M8eYd2OSYUSrCZf0BaK7W4NKNysVeBr6YwPbg9E6k0irWtKgvcO9
rjs/BK9LBkPqFmbAK6B88WMoXlrL5B0L44H098WL13iEYfwvyXmt1FFou8VZ
o5cTjgp+of9+FR/qFf57mP370DJ6yoRnnQnOjJIgU5NINGTThFpHs6DD6e6q
0+H7MfZQp8D14XGY9PKQuP0RhaKtz1PV55+AuqAPOxy7o5FjWmBpHpwNNOOa
CgX9ABpXF9ytEZ+E0h29L42LD6BNjOew9mMBKKZHi7MsYjGhyD+0/3QOpC5x
DZNjLKJ3bWfS90LYuETfb+WOg8g2CT3l/EIIXbMnf9XtO4hVB0dNJninYMJP
IV9+4BBGVYhFbLNcmFrWGFI/fgiTe387MtWeCwNWX4dmpXNwarzT03XfaUjW
MXcz0IzD5VS3Ko2WB6Vsqwr/jDi84rp6eLgyD2JkvdUn5sSjqKfq5XyXfGDI
B8JU/HiUh/JXho/nw1cl+wNUcxMwW5Ycl5hbADs5+a2R/AQckXmmR9gUgm1b
lWJwJgEvPExXCh8Xwmxh8zeV3ESUXO9yi40vgimbSFP2SCJuLk5k8M3OQAdW
s5lRhzFS/7OASM6ARs69uqbXh1EtspxhtbcYgkE2t3N3Er5pLXutwyyBjdkN
7oKOJGTNNNdevFwCnYJnzoPruej8Z9NOC5dSiGhY+fHyWS6eLzBweKYqhYAa
2Xf9egSjHLOtnXJEsFV5aa4eIXjf4YKBZq4I9tS0msqPEFxl3zLTkieCIq+9
hldSCI6zptvti0Xgfe2nGpcMgknrQsNY50Xwmrw/l3qcYKYlS7y2XgQ+K24H
DhYSLGe+1TVXiCDgpqmv+BpBrfn0afkbEdDdbqhH1hIMn2feJ34rgpFmpsD2
JkGrOT6XTcdE0CmhebXXE6zWuONi/I8IgsqXlqpaCOJESYauPgUFklu6m7sI
LvpQG/GXIQWmuZpa2t0E08e6fhYYUaA0seiVPiToNEJfNO9bCpJ7P9sFPiF4
b4hTT7ekwNrLqD69j6C1QnCubQUF6x28elxeEcwZuHicb0OBz4PEngV/E/To
7/Om2VIw4BnHPztI8Kr8k13LOgrEKbtsI4YIGvYZLkv/kQI6mkhWKwkmvlyt
Y8+igFbVZT89TPDpc9cPX+woCH+XSDW9I/gvlttzeg==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Calculated \\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\) for \
various frequencies\"", TraditionalForm], PlotRange -> {{0, 2000}, {-1, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"140.0 GHz\"", "\"140.1 GHz\"", "\"140.2 GHz\"", "\"140.3 GHz\"", 
       "\"140.4 GHz\"", "\"140.5 GHz\"", "\"140.6 GHz\"", "\"140.7 GHz\"", 
       "\"140.8 GHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6784503798171473`*^9, 3.6784503852747*^9}, {
   3.678450472171854*^9, 3.6784504907576933`*^9}, 3.6784508342124043`*^9, 
   3.6784509238049498`*^9, 3.678451348340063*^9, 3.6784517161083393`*^9, {
   3.6784517551172*^9, 3.678451776714485*^9}, 3.678451863400926*^9, 
   3.678451914898807*^9, {3.67845197174149*^9, 3.6784519938904743`*^9}, 
   3.6784521030780354`*^9, {3.6784521471163263`*^9, 3.6784521750149803`*^9}, 
   3.678452257033577*^9, {3.678452384680434*^9, 3.678452416851829*^9}, 
   3.678452471231944*^9, 3.678452763420982*^9, 3.678452870027923*^9, 
   3.67845295693598*^9, 3.6784537394413433`*^9, 3.678454675915469*^9, 
   3.678454717470874*^9, 3.67845496932652*^9, 3.678455038444891*^9, 
   3.678455108561636*^9, 3.679137168049917*^9, 3.6791376030291023`*^9, 
   3.6791380278038883`*^9, {3.679138396032148*^9, 3.679138420560895*^9}, 
   3.679138454159481*^9, 3.679396839283029*^9}],

Cell[BoxData["\<\"variouspnplot.png\"\>"], "Output",
 CellChangeTimes->{{3.6784503798171473`*^9, 3.6784503852747*^9}, {
   3.678450472171854*^9, 3.6784504907576933`*^9}, 3.6784508342124043`*^9, 
   3.6784509238049498`*^9, 3.678451348340063*^9, 3.6784517161083393`*^9, {
   3.6784517551172*^9, 3.678451776714485*^9}, 3.678451863400926*^9, 
   3.678451914898807*^9, {3.67845197174149*^9, 3.6784519938904743`*^9}, 
   3.6784521030780354`*^9, {3.6784521471163263`*^9, 3.6784521750149803`*^9}, 
   3.678452257033577*^9, {3.678452384680434*^9, 3.678452416851829*^9}, 
   3.678452471231944*^9, 3.678452763420982*^9, 3.678452870027923*^9, 
   3.67845295693598*^9, 3.6784537394413433`*^9, 3.678454675915469*^9, 
   3.678454717470874*^9, 3.67845496932652*^9, 3.678455038444891*^9, 
   3.678455108561636*^9, 3.679137168049917*^9, 3.6791376030291023`*^9, 
   3.6791380278038883`*^9, {3.679138396032148*^9, 3.679138420560895*^9}, 
   3.679138454159481*^9, 3.6793968397045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"alphaDist", "[", 
  RowBox[{"aa", ",", "mm2", ",", "ss", ",", "ff"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"betaDist", "[", 
  RowBox[{"aa", ",", "mm1", ",", "ss", ",", "ff"}], "]"}]}], "Input",
 CellChangeTimes->{{3.679396799207501*^9, 3.679396850702791*^9}, {
  3.679396906319216*^9, 3.67939691136353*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"aa", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ff", "-", "mm2"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["ss", "2"]}]]}]]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "ss"}]]], "Output",
 CellChangeTimes->{{3.679396801518107*^9, 3.6793968512545443`*^9}, 
   3.679396911906869*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"aa", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ff", "-", "mm1"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["ss", "2"]}]]}]]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "ss"}]]], "Output",
 CellChangeTimes->{{3.679396801518107*^9, 3.6793968512545443`*^9}, 
   3.679396911907709*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["realDataListAdj"], "Input",
 CellChangeTimes->{{3.70517953916055*^9, 
  3.7051795412281637`*^9}},ExpressionUUID->"ec4f93e7-680e-4c13-9d0e-\
45c38d62573d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"140", ",", "0.07786408018440341`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.02`", ",", "0.3135360389526301`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.086`", ",", "0.5396929816447571`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.129`", ",", "0.751539346670268`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.174`", ",", "0.9443996344491024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.213`", ",", "0.9379936139590125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.256`", ",", "0.6817731438487182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.342`", ",", "0.182112499398765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.428`", ",", 
     RowBox[{"-", "0.22376994712831652`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.469`", ",", 
     RowBox[{"-", "0.4883674896495078`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.511`", ",", 
     RowBox[{"-", "0.827341209203891`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.553`", ",", 
     RowBox[{"-", "1.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.595`", ",", 
     RowBox[{"-", "0.9669835021107975`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.638`", ",", 
     RowBox[{"-", "0.6451644054063055`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.68`", ",", 
     RowBox[{"-", "0.4896047388420029`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.724`", ",", 
     RowBox[{"-", "0.2897222479160269`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140.766`", ",", 
     RowBox[{"-", "0.13627730069521268`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705179541716482*^9},ExpressionUUID->"992b0a84-3422-4835-ac68-\
451e5a3caf61"]
}, Open  ]]
},
WindowSize->{956, 1016},
WindowMargins->{{Automatic, 2}, {0, Automatic}},
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 16246, 421, 1375, "Input", "ExpressionUUID" -> \
"6dd9a76c-57ca-4b35-9f11-012f1abb70c9"],
Cell[16829, 445, 3009, 46, 34, "Output", "ExpressionUUID" -> \
"3a678895-1932-491b-b138-e7bd1b41ff3d"],
Cell[19841, 493, 15257, 261, 370, "Output", "ExpressionUUID" -> \
"1142b342-f713-4ba4-bee8-101f44d4afa4"],
Cell[35101, 756, 2613, 37, 32, "Output", "ExpressionUUID" -> \
"3e30266f-364e-4505-83ce-86a240d4db7f"],
Cell[37717, 795, 40601, 714, 383, "Output", "ExpressionUUID" -> \
"f09b6f6c-a94e-4215-bc21-66672791775e"],
Cell[78321, 1511, 2611, 37, 32, "Output", "ExpressionUUID" -> \
"5867e092-416c-4062-8cb9-c37d57c4b1b1"],
Cell[80935, 1550, 10942, 211, 372, "Output", "ExpressionUUID" -> \
"c6975d31-b1fa-4c61-9b73-5460205a1476"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91914, 1766, 12972, 329, 1248, "Input", "ExpressionUUID" -> \
"3b204cdd-01d2-431d-a957-90e3b808d52a"],
Cell[104889, 2097, 80152, 1458, 393, "Output", "ExpressionUUID" -> \
"08ec98ac-455e-4ccd-af20-15a2c92b6895"],
Cell[185044, 3557, 2093, 29, 32, "Output", "ExpressionUUID" -> \
"581bdb9a-de5b-46a7-bd85-70389e32d1a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187174, 3591, 5884, 147, 567, "Input", "ExpressionUUID" -> \
"c1b4bc87-4144-49f9-8329-57fe32451e10"],
Cell[193061, 3740, 32041, 576, 385, "Output", "ExpressionUUID" -> \
"085f86c3-68fe-4f86-8f37-7d9228c2851a"],
Cell[225105, 4318, 19745, 370, 385, "Output", "ExpressionUUID" -> \
"1780d7be-ad69-4c09-afb3-d3acdd59db6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244887, 4693, 2631, 63, 170, "Input", "ExpressionUUID" -> \
"743e6550-d72c-4066-b78c-61ae1625150a"],
Cell[247521, 4758, 67149, 1262, 377, "Output", "ExpressionUUID" -> \
"05581683-7176-4545-a9eb-0196bfed03c9"],
Cell[314673, 6022, 963, 13, 32, "Output", "ExpressionUUID" -> \
"ed7a2871-d66f-448b-a13f-d5436792e8f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315673, 6040, 339, 7, 57, "Input", "ExpressionUUID" -> \
"77a92a82-1b3e-40e7-bad1-e4b07ed88909"],
Cell[316015, 6049, 460, 15, 75, "Output", "ExpressionUUID" -> \
"841a3d4c-8a6a-4f42-aa13-afd0695427f5"],
Cell[316478, 6066, 460, 15, 75, "Output", "ExpressionUUID" -> \
"15624855-9588-4fbf-b528-a0927e7e2a71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316975, 6086, 168, 3, 32, "Input", "ExpressionUUID" -> \
"ec4f93e7-680e-4c13-9d0e-45c38d62573d"],
Cell[317146, 6091, 1750, 48, 160, "Output", "ExpressionUUID" -> \
"992b0a84-3422-4835-ac68-451e5a3caf61"]
}, Open  ]]
}
]
*)

