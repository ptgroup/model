(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    328228,       6282]
NotebookOptionsPosition[    326908,       6237]
NotebookOutlinePosition[    327243,       6252]
CellTagsIndexPosition[    327200,       6249]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "steady", " ", "state", " ", "function", " ", "and", " ", 
    "some", " ", "good", " ", "values", " ", "for", " ", 
    SubscriptBox["T", 
     RowBox[{"1", "e"}]], " ", "and", " ", 
    SubscriptBox["T", 
     RowBox[{"1", "n"}]]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalTimes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t1e", "\[Rule]", "0.03"}], ",", 
     RowBox[{"t1n", "\[Rule]", 
      RowBox[{"25", "*", "60"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pssnPhysical", "[", 
     RowBox[{"a_", ",", "b_", ",", "s_", ",", "c_"}], "]"}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"c", " ", "t1n", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}], 
      RowBox[{
       RowBox[{"t1e", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"2", "s"}], "+", "a", "+", "b"}], ")"}]}], "+", 
       RowBox[{"c", " ", "t1n", 
        RowBox[{"(", 
         RowBox[{"a", "+", 
          RowBox[{"s", " ", "a"}], "+", "b", "+", 
          RowBox[{"s", " ", "b"}], "+", 
          RowBox[{"2", "a", " ", "b"}]}], ")"}]}]}]], "/.", 
     "physicalTimes"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Try", " ", "to", " ", "model", " ", "the", " ", "steady", " ", "state", 
    " ", "as", " ", "a", " ", "function", " ", "of", " ", "frequency"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Here", " ", "are", " ", "a", " ", "list", " ", "of", " ", 
     "distributions", " ", "to", " ", "use", " ", "in", " ", "getting", " ", 
     "\[Alpha]"}], ",", 
    RowBox[{
    "\[Beta]", " ", "in", " ", "terms", " ", "of", " ", "frequency"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussian", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"m", ",", "s"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cauchy", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CauchyDistribution", "[", 
      RowBox[{"m", ",", "s"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"studentT2", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"m", ",", "s", ",", "2"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"studentT3", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"m", ",", "s", ",", "3"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist1", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "m"}], ")"}], "/", "s"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist21", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "-", "s"}], ",", "s", ",", "x"}], "]"}], "+", 
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "+", "s"}], ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist22", "[", 
    RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "-", "s"}], ",", 
      RowBox[{"s", "/", "2"}], ",", "x"}], "]"}], "+", 
    RowBox[{"gaussian", "[", 
     RowBox[{
      RowBox[{"m", "+", "s"}], ",", 
      RowBox[{"s", "/", "2"}], ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constant", "[", 
     RowBox[{"m_", ",", "s_", ",", "x_"}], "]"}], "=", "1"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Choose", " ", "distribution", " ", "here"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distribution", "=", "gaussian"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sDistribution", "=", "gaussian"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Compute", " ", "alpha"}], ",", " ", 
    RowBox[{"beta", " ", "distributions"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alphaDist", "[", 
    RowBox[{"a_", ",", "m2_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"distribution", "[", 
     RowBox[{"m2", ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"betaDist", "[", 
    RowBox[{"a_", ",", "m1_", ",", "s_", ",", "x_"}], "]"}], "=", 
   RowBox[{"a", " ", 
    RowBox[{"distribution", "[", 
     RowBox[{"m1", ",", "s", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sDist", "[", 
     RowBox[{"as_", ",", "ms_", ",", "ss_", ",", "x_"}], "]"}], "=", 
    RowBox[{"as", " ", 
     RowBox[{"sDistribution", "[", 
      RowBox[{"ms", ",", "ss", ",", "x"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "steady", " ", "state", " ", "function"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pssnDistribution", "[", 
     RowBox[{
     "a_", ",", "s_", ",", "m1_", ",", "m2_", ",", "as_", ",", "ms_", ",", 
      "ss_", ",", "c_", ",", "x_"}], "]"}], "=", 
    RowBox[{"pssnPhysical", "[", 
     RowBox[{
      RowBox[{"alphaDist", "[", 
       RowBox[{"a", ",", "m2", ",", "s", ",", "x"}], "]"}], ",", 
      RowBox[{"betaDist", "[", 
       RowBox[{"a", ",", "m1", ",", "s", ",", "x"}], "]"}], ",", 
      RowBox[{"sDist", "[", 
       RowBox[{"as", ",", "ms", ",", "ss", ",", "x"}], "]"}], ",", "c"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "real", " ", "steady", " ", "state", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realDataList", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"140", ",", "0.191317"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.02", ",", "0.770378"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.086", ",", "1.32606"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.129", ",", "1.84658"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.174", ",", "2.32045"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.213", ",", "2.30471"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.256", ",", "1.67516"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.342", ",", "0.447462"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.428", ",", 
        RowBox[{"-", "0.549817"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.469", ",", 
        RowBox[{"-", "1.19995"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.511", ",", 
        RowBox[{"-", "2.03283"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.553", ",", 
        RowBox[{"-", "2.70277"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.595", ",", 
        RowBox[{"-", "2.37594"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.638", ",", 
        RowBox[{"-", "1.58521"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.68", ",", 
        RowBox[{"-", "1.20299"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.724", ",", 
        RowBox[{"-", "0.711866"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"140.766", ",", 
        RowBox[{"-", "0.334842"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Normalized", " ", "real", " ", "data"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxSteadyState", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realDataListAdj", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"2.70277", "/", "maxSteadyState"}], ")"}]}]}], "}"}]}], 
       "]"}], ",", "realDataList"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "a", " ", "fit", " ", "for", " ", "the", " ", "various", 
    " ", "parameters"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bestFit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"realDataListAdj", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pssnDistribution", "[", 
        RowBox[{
        "a", ",", "s", ",", "m1", ",", "m2", ",", "as", ",", "ms", ",", "ss", 
         ",", "c", ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[LessEqual]", "a", "\[LessEqual]", "5"}], ",", 
         RowBox[{"0.001", "\[LessEqual]", "s", "\[LessEqual]", "1"}], ",", 
         RowBox[{"140.2", "\[LessEqual]", "m1", "\[LessEqual]", "140.6"}], 
         ",", 
         RowBox[{"140.2", "\[LessEqual]", "m2", "\[LessEqual]", "140.6"}], 
         ",", 
         RowBox[{"0", "\[LessEqual]", "as", "\[LessEqual]", "5"}], ",", 
         RowBox[{"140", "\[LessEqual]", "ms", "\[LessEqual]", "141"}], ",", 
         RowBox[{"0.001", "\[LessEqual]", "ss", "\[LessEqual]", "1"}], ",", 
         RowBox[{
         "0.01*^-4", "\[LessEqual]", "c", "\[LessEqual]", "100*^-4"}]}], 
        "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "s", ",", "m1", ",", "m2", ",", "as", ",", "ms", ",", "ss", 
       ",", "c"}], "}"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Show", " ", "some", " ", "useful", " ", "plots"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"steadyStatePlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", "realDataListAdj", "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pssnDistribution", "[", 
        RowBox[{
        "a", ",", "s", ",", "m1", ",", "m2", ",", "as", ",", "ms", ",", "ss", 
         ",", "c", ",", "x"}], "]"}], "/.", "bestFit"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "140", ",", "140.8"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"140", ",", "140.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Actual steady state vs fit\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<steadystateplot.png\>\"", ",", "steadyStatePlot"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "\[Alpha]", " ", "and", " ", "\[Beta]", " ", "vs", " ", 
    "frequency"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"alphaBetaPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"alphaDist", "[", 
        RowBox[{"a", ",", "m2", ",", "s", ",", "x"}], "]"}], "/.", 
       "bestFit"}], ",", 
      RowBox[{
       RowBox[{"betaDist", "[", 
        RowBox[{"a", ",", "m1", ",", "s", ",", "x"}], "]"}], "/.", 
       "bestFit"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "140", ",", "140.8"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Calculated \[Alpha], \[Beta] vs frequency\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<alphabetaplot.png\>\"", ",", "alphaBetaPlot"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "s", " ", "vs", " ", "frequency"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sDist", "[", 
     RowBox[{"as", ",", "ms", ",", "ss", ",", "x"}], "]"}], "/.", "bestFit"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "140", ",", "140.8"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<s\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Calculated s vs frequency\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.678109554755844*^9, 3.678109698659047*^9}, {
   3.678109797392377*^9, 3.678110102004221*^9}, {3.678110172876313*^9, 
   3.678110271930718*^9}, {3.6781103136607723`*^9, 3.678110384564151*^9}, {
   3.678110555748996*^9, 3.678110595613209*^9}, {3.678110635669778*^9, 
   3.678110640295121*^9}, {3.678110672656314*^9, 3.6781107718947067`*^9}, {
   3.67811088658601*^9, 3.678110987762134*^9}, {3.678111058126027*^9, 
   3.678111087700513*^9}, {3.678111134467106*^9, 3.67811155407362*^9}, {
   3.678111597716566*^9, 3.678111648799386*^9}, {3.678111873201433*^9, 
   3.6781119823291407`*^9}, {3.678112151594617*^9, 3.678112152064272*^9}, {
   3.67811223808286*^9, 3.678112238314063*^9}, {3.678112316334466*^9, 
   3.678112415562943*^9}, 3.6781850100618477`*^9, {3.678185296708585*^9, 
   3.678185315933366*^9}, {3.678185367500008*^9, 3.678185426604332*^9}, {
   3.6781855599908543`*^9, 3.6781855893120832`*^9}, {3.6781858843511763`*^9, 
   3.6781858846267633`*^9}, {3.678186264688415*^9, 3.678186349363276*^9}, {
   3.678186831096093*^9, 3.6781868316220617`*^9}, {3.678187025641317*^9, 
   3.678187059492992*^9}, {3.678187167000235*^9, 3.678187249444779*^9}, {
   3.678187516755858*^9, 3.678187575538156*^9}, {3.678447572203624*^9, 
   3.678447881599842*^9}, {3.678448401725745*^9, 3.678448408919087*^9}, {
   3.678448531497121*^9, 3.678448534849646*^9}, {3.678448570488953*^9, 
   3.678448591792865*^9}, {3.678448649854322*^9, 3.678448756260626*^9}, {
   3.678448791321026*^9, 3.678448794269643*^9}, {3.678448859797966*^9, 
   3.6784488611872396`*^9}, {3.678448907969296*^9, 3.6784489314370947`*^9}, {
   3.678448962744007*^9, 3.6784490152420483`*^9}, {3.678449173134582*^9, 
   3.678449177705235*^9}, {3.678449260205495*^9, 3.67844933139071*^9}, {
   3.678449493365745*^9, 3.678449494332036*^9}, {3.678449742904661*^9, 
   3.678449751286825*^9}, {3.678451197875252*^9, 3.678451278055036*^9}, {
   3.6784517059436617`*^9, 3.678451706186195*^9}, {3.678451745468429*^9, 
   3.6784517663902473`*^9}, {3.678451845828046*^9, 3.6784518471657333`*^9}, {
   3.678451905768298*^9, 3.678451906992568*^9}, {3.678452703533051*^9, 
   3.678452718809051*^9}, {3.6784528609045897`*^9, 3.6784528614116707`*^9}, {
   3.678452932825321*^9, 3.67845294607977*^9}, {3.678454305309184*^9, 
   3.6784543063214693`*^9}, {3.678454666137518*^9, 3.678454666661672*^9}, {
   3.678454707316793*^9, 3.6784547082345123`*^9}, {3.678454959032448*^9, 
   3.678454959139605*^9}, {3.678454993964285*^9, 3.678454994122851*^9}, {
   3.678455027430066*^9, 3.6784550280233994`*^9}, {3.678455097755452*^9, 
   3.6784550987058477`*^9}, {3.679137593109623*^9, 3.6791375932666407`*^9}, {
   3.679138017713306*^9, 3.679138018610136*^9}, {3.679138383466071*^9, 
   3.679138434939333*^9}, {3.6800040400196733`*^9, 3.680004326091547*^9}, {
   3.6800043988236303`*^9, 3.680004399378179*^9}, {3.680004445866008*^9, 
   3.6800044753191767`*^9}, {3.6800045070289717`*^9, 3.6800045072071133`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "0.5488677207924655`"}], ",", 
   RowBox[{"s", "\[Rule]", "0.08730876348721682`"}], ",", 
   RowBox[{"m1", "\[Rule]", "140.28593970066632`"}], ",", 
   RowBox[{"m2", "\[Rule]", "140.46809801922723`"}], ",", 
   RowBox[{"as", "\[Rule]", "1.707287796317838`*^-6"}], ",", 
   RowBox[{"ms", "\[Rule]", "140.45951191300546`"}], ",", 
   RowBox[{"ss", "\[Rule]", "0.673761649746447`"}], ",", 
   RowBox[{"c", "\[Rule]", "0.0003089404346889927`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004509484611*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{140., 0.07078552744036673}, {140.02, 0.2850327626842092}, {
       140.086, 0.4906299833134155}, {140.129, 0.6832175878820618}, {140.174, 
       0.8585451222264566}, {140.213, 0.8527214672354658}, {140.256, 
       0.6197937671351983}, {140.342, 0.16555681763524088`}, {
       140.428, -0.20342722466210592`}, {140.469, -0.44397044513591616`}, {
       140.511, -0.7521283720035372}, {140.553, -1.}, {
       140.595, -0.8790759110098159}, {140.638, -0.586513095823914}, {
       140.68, -0.4450952171290935}, {140.724, -0.26338386174184264`}, {
       140.766, -0.12388845517746608`}}]}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Yr6YyQcvwfNF+3yI8M/4g5nq7n/g6dau/jvuH7E7bXzvGthj0WXWcu9HvHq9
4NC6By5a5fwPh7Q3fsSqlTtMmcCfdoaZxxd04IztzL7s4Cm9vwJ/J9rxOVrf
0x3g0F38N+bC2zBv+K2dmuCwGwnMt1tbcPF2bQUtsL+X1SXr7BZsVLkMJcZF
6z+Wg8sWF1twCM1PzwDcTeY2NIu1YIqZvZsZ3TFaS/hqM67ervTICbw5MjV1
Vr0JO1b2CoWCO8a2bWTvrcdHCh0Erz+g/587mildWY/3Zfdvu0H3mVcifnfr
MVfkCM9tsGKk2FL4kXrc4DDFHA8eM9CPq377Hstv2DyXBf5+P3fCvaQOL1mq
dbwFs4002tm4YUw1rPnwDjzaPi5ySwrjrxqaLe/Bb6f/pLOSb3GxlF59E1i7
rk5T0P8tdlkyf/URrMounq1z6w1ueeT1+Df41ahlYfbbGpw8mRyyCn4cKd1q
dbYan590ecKQAvVuvnWhdX81NpmU/8QIjtCoDMxaV43XT74X3QQueNi/yz35
Jfb7O1HPCa52OvXiREMVNp4wYBEDvzSZGslTrsRSE9yqEuDWtHV1NIZKzDjR
Z78TXOrLXnirswJXj/s/lwEL7r1x4JNfBZYaz7JQATfF6SpGVpZjhrH/knXp
15vecdbUvAz3jdZhfXB+gLrARsky/HI0hmYI/uxG/caz+AKfHRVXNwFb/mpb
lcp7gX+SZr+swNGZtkO7V0txFfFEwpM+/rudJU3hJdiHal16B3x87NoS0/oi
3HZatiIKbFrJ9MWtoRDLTfx7GQNevXjK6dCtQjw6m4cTwLY3tL+dZC3EPowz
H1PAOTN3rKy3P8U+O+LHC8AxuP6T29F83PbQdaoQXGm/J15OMB/LSe6bewZe
UONRch96gkdlf62UguOIZc+dQU+wj5oc2ytwgrT++Nfcx9jnWLNsK/jmvJTb
Me483NaTtrsN/GnrJ53eP7lYzu6sSgeYf+yqd2NpLh49uVW9C/yMk3u042gu
9jnrdrgXrGxysCA2JQf7RK55EeC/+YKmamqPsA/e/3hzKjxvJSxcfxaUiRsk
No+wgqX/7r99eGcmFr7zQ5IDjC9W5ZR/ycCdFiF5PODl6yEpNJUMvGfwfe52
MNV5xrxgKQ3/22CWowAe60+e3l6cgq1PiQwqguX2yyx88ErBpR2TYipgMTFn
UkE8BbsmJz3aBz5u3nN3c+oD3LSr9yECywo+NZuIS8bxR9yzj4IJnZyIXWn3
MK14b/8xcMoOPlcPp3tYZ8smEWtw+mldPi2Je3j259MsO/Diz+bopuIkbHvm
b6YbmEmw7uNUeyIWSwjOuAh2mHs9lip5FwfPGvcFgTXtUi4yTSfgr7Y7hILB
8YsZxAJOwLfE3qVfA3OtK8/1d0zAZBlT+m3w7iCZVOFD8Vh327cfkeCLF8X5
lf7E4YwrBYIx4MAfdiKaN+OwmZ5xWgI4L6fIz+BTLM4vEPqRCPaPOieoERiL
GdgnBO6DrWcbWHcKx2K78/jEA/r9ernWVpticHl3Qmoq2EVtvKzZLwb/DxBs
+t4=
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{139.98803125, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Actual steady state vs fit\"", TraditionalForm],
  PlotRange->{{140, 140.8}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004509909358*^9}}],

Cell[BoxData["\<\"steadystateplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004510088032*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV2nc8lV8YAHDuNaIiMlIaRpIkM6Pc5zWSEUl+9gylbJEyspNQVhlFKSuE
iIiKSHZCdkT2nmmQ3+Ofez/fz/t5z/uc85zznHMHzwUnHRsSFRVVHL5svo9V
baGi8rMkmLcb8qpyl1Ce6j0gkdBrMQMiKzdKKGYTfLQ0aMJLWZe6u4TSwQSM
W9B8Vvll6g9LKdWG7mw70KJV6r6iYmWUJ3ODggfQXB/LK3+mv6OYBDgd4UXT
B4W+37b3PYWTff0oP1qhlKLdHfuecldul4Qg2tlsp36ncgXFO1hLXhT94G2T
qo9yJcVgT9k5Ai11mVlj3qWKwparqquI5mbby3G8vIrymejQU0ZrjD+WjKCv
pqhcXDBWRYvUiYXfTKmmSL48dFEb/euRkV7P0EfKjtOxnhboQm76d/SPaymN
3Tw+F9C2lZNLSmu1lBD7PF9rtFs59+52ozrKv6j6IFu0zPGKDhJ3PWW6j+qe
M5qBbNG1P6+BUufq8MwPHdme/LCM+zPFdYfSlwD04mlmssPDzxTu3F0bQWg/
sXgbeqYWivNElVEo+rGOv8GTqBbKLovdrNFotaW3/zjTvlA+rM9BLLqfmWEx
cfoLxf7hR4cHm/0lnqRKSrVSKjqc6xLRnA5HH5TXtVJsNT/5PUNn0h8ixVK1
U1inHuWmoUverw8rnGunlN927ctAO516kSb4rJ2yo3qvTA767FTmUoH6V0qJ
nNvcK/Rtw/YC+ecdlC2CPGY16PNjBi88M7spBR9/htWigx81MP5l6qGYWDWW
1qOzFB3raTx6KPnJHuyf0ax3fzI3aPRSDNibGzvRH7W97T5u+UYhFT77041e
1qPbJuH9jZKjfUOwb3P8dnQbGS58o1CF8wd9Rz+bOHx84ns/JZPkdWIC/dCg
NGzkyneKzhPty1PoH5zbbbqzv1PW5AXiZtCdV1Imq2a+U7RvfFlc2Izn5z2q
MLdByq+5Q1l/0Oc4VoRU7g5RTn9r37XNH+NZdE+rWBmmXPtXwMOEfhQ/fdFK
cYSSuj9KaAd6+tnradbIEQrpguZJNnSk3y+TdJFRSvnoR3NuNM+v49PkG2MU
8fnidGH0hzaXP+OnJikWLPfzRNC/VfwrOdImKffEr5aIol9z7qW+RztFmXY7
Vi+JPqC0f7tz/RQl43fGzEm0CNlKycl6hsJNTpDURFP06yoLHecp6vwe8mfR
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
jEMnvXvnvqxoBoVfIxMS0L47/0zOjJrC/2iy830=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV2Hc8VW8YAHDupSR7FcneEYWMOO8hZISirDRItEg2KatsZe+VFRESskL4
yYoQsleZWRlRxu/xz72f7+fce877Ps87nvdwmz/Uu00gISHJgo/97+l6ChIS
TzO8/6ZcA5HRH6UZRBMIYD5fJdMtLX90fZaXnAxcrcJ18O5zf9RLgygpwC9v
cItUbPmjBmNHJjqwXycDUXEmAKUujQtxgRtZ5B9HDgchU++HJ3jA248Eg+I4
gtER5h0xPjDd3OYrwZvB6IX8UUkh8NbkcNfEj2Dk/lxHUQK8aEPDurIWgoyO
VV7Cwe8LXpgJHQ1FTPnql5XBFz9fTxFXDEUdeK+BCtixkCPCxzwUqVmuXFUH
Wxio1jPmhyKpd4KWF8GnJ9Y9f6iHIbrzkW43wUfiZbvqQ8JRs511uic4uPuk
jK9RFLKjO9fpDSaw8aeqBkch9vyje8/27++1gjvWRiHb2XqTAPBPH8H7QiLR
6OhNNoZwcKZWzb11Qgy6o/3ZMx3MOysuOdUSixjmE/MzwRIvw/mpD8ShKn+7
oddgBxbBoXdKcYiu4bhsHvhETAiPS0UcKpN3WCoGqzk/lqAvikcUQtzXG8Fh
mjMnlSsSUdF/G0FN+/E6RLxVtJOITG+1lbeA63ZpjhUoJaHCZGfmDvC/kLWV
S61JyIi5va0P7CQR8MToZzLKJjw+Owvu6vqXlB6fis4PfztK5WWGn2M8F7HE
n46cdou4acC3yp56+uqkowzOMBE6sPIwNf9d53REMNdWYALXhXVbMbako6qp
/26wg1m3TpRT2Geg08ulWaJgWme+S6PdmYidGCelDfaRtDNM/JaNNPmcFXXB
ep3Fu1EHc5Cr6hW1S2AOUpe5Ofkc1OtHb3QFbLx+IC07LQeFUQU+vgYec7hw
0tvpDTrA8rjOGjyHcynwSeShZaFrF1+A3xUe9V9ZLECPMom6oWCF/kSRlyyF
6Df3G+1wsLT03rd+6UK0zvZHMxrswb51mNqxEP2lClNNBtulLr79vV6IyFYa
5PP3vdTUtklahI6Wi/K377eHQTp/XqUYxUl3834FXyAf8GW+X4zYilx5usBZ
OmbV7mHF6HhuI2cvWC273Y1stBjxJN1kGwHXBpf4kz4pQaJekbSLYKq+16Hr
DaUIaWxvUXub4aaPHO/N+5aj/K9zvHTgTt5DVZrl5YjDqF+bATzU6z69M1+O
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
GPCNPLq9H4YO2Pue0Lg4cAHxiP7NTXvsf/WZUCE=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Calculated \[Alpha], \[Beta] vs frequency\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]\"", "\"\[Beta]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004510242447*^9}}],

Cell[BoxData["\<\"alphabetaplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004510535475*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KS4lBf6g6NV/9yOX/B/smVj2
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140., 8.*^-7}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Calculated s vs frequency\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6781097022641687`*^9, 3.678109737037437*^9, 3.678109773756487*^9, 
   3.67811010357765*^9, 3.678110231078479*^9, 3.678110274133966*^9, {
   3.678110315619699*^9, 3.678110386241294*^9}, 3.678110597035901*^9, 
   3.678110641753166*^9, 3.678110717825536*^9, 3.6781109894437*^9, 
   3.678111090191921*^9, 3.678111165824244*^9, {3.678111235372244*^9, 
   3.6781114514453506`*^9}, 3.678111482541115*^9, 3.678111650108244*^9, {
   3.678111943074401*^9, 3.678111988852058*^9}, 3.678112416819273*^9, 
   3.678112645891464*^9, 3.678112715768331*^9, 3.678113018290863*^9, 
   3.678113334816174*^9, 3.6781134498312798`*^9, 3.6781850138273087`*^9, {
   3.6781853005148687`*^9, 3.67818531855875*^9}, {3.678185370224525*^9, 
   3.678185429401997*^9}, {3.678185563312168*^9, 3.678185591602757*^9}, 
   3.678185887389371*^9, 3.678186266224859*^9, 3.678186315689053*^9, 
   3.678186352051303*^9, 3.678186834873176*^9, {3.678187017064527*^9, 
   3.6781870308466454`*^9}, 3.678187062096447*^9, {3.678187172340663*^9, 
   3.6781872078413153`*^9}, {3.6781872378994017`*^9, 3.678187252386602*^9}, {
   3.678187521106421*^9, 3.678187578498481*^9}, 3.678445703429261*^9, {
   3.678447765472446*^9, 3.6784478312932787`*^9}, {3.678447862866282*^9, 
   3.6784478827089643`*^9}, 3.678447970883202*^9, 3.678448162115345*^9, 
   3.678448374531204*^9, 3.678448411599532*^9, 3.678448537556755*^9, 
   3.678448594608017*^9, {3.67844865989863*^9, 3.678448726484539*^9}, 
   3.678448759200014*^9, 3.6784487968423634`*^9, 3.6784488639014263`*^9, 
   3.678448934293046*^9, {3.678448990974354*^9, 3.6784490186072407`*^9}, 
   3.6784492457516003`*^9, 3.678449288109119*^9, {3.678449321637218*^9, 
   3.678449333854795*^9}, 3.678449497364607*^9, 3.6784497528854733`*^9, 
   3.678450828875972*^9, 3.67845134321656*^9, 3.6784517096135073`*^9, {
   3.678451748604879*^9, 3.678451769552493*^9}, {3.678451848624239*^9, 
   3.6784518574690237`*^9}, 3.6784519096785183`*^9, 3.678452757640554*^9, 
   3.6784528640288057`*^9, 3.6784529507800837`*^9, 3.678453733038908*^9, 
   3.678454669281349*^9, 3.678454711585417*^9, 3.678454961811301*^9, 
   3.678454995498601*^9, 3.678455030924687*^9, 3.678455101665051*^9, 
   3.679137159238749*^9, 3.6791375960532837`*^9, 3.679138021098193*^9, {
   3.679138390212652*^9, 3.679138414903345*^9}, 3.67913844791457*^9, 
   3.679396831928485*^9, 3.6800039514453497`*^9, 3.6800043318552933`*^9, 
   3.680004401533432*^9, 3.6800044478117733`*^9, {3.680004491136327*^9, 
   3.680004510618321*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "take", " ", "the", " ", "equations", " ", "for", " ", 
    SubscriptBox["P", "n"], " ", "and", " ", 
    SubscriptBox["P", "e"], " ", "and", " ", "make", " ", "them", " ", "more",
     " ", "\"\<regular\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"constToParam", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aa", "\[Rule]", "aConst"}], ",", 
       RowBox[{"bb", "\[Rule]", "bConst"}], ",", 
       RowBox[{"cc", "\[Rule]", "cConst"}], ",", 
       RowBox[{"dd", "\[Rule]", "dConst"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aConst", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "t1e"}], "t1n"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Alpha]"}], "2"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Beta]"}], "2"]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"bConst", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"c", " ", "\[Alpha]"}], "2"], "-", 
      FractionBox[
       RowBox[{"c", " ", "\[Beta]"}], 
       RowBox[{"2", " "}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cConst", "=", 
     RowBox[{
      FractionBox["\[Alpha]", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dConst", "=", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "s", "-", 
      FractionBox["\[Alpha]", "2"], "-", 
      FractionBox["\[Beta]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "These", " ", "correspond", " ", "to", " ", "coefficients", " ", "in", 
     " ", "the", " ", "decoupled", " ", "equation", " ", "for", " ", 
     SubscriptBox["P", "n"], "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "a", " ", "system", " ", "of", " ", "two", " ", "linear", " ", 
        "first"}], "-", 
       RowBox[{
       "order", " ", "ODEs", " ", "is", " ", "transformed", " ", "into", " ", 
        "a", " ", "single", " ", "linear", " ", "second"}], "-", 
       RowBox[{"order", " ", "ODE"}]}], ")"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"simplToConst", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aaa", "\[Rule]", "aSimpl"}], ",", 
       RowBox[{"bbb", "\[Rule]", "bSimpl"}], ",", 
       RowBox[{"ccc", "\[Rule]", "cSimpl"}], ",", " ", 
       RowBox[{"pn0", "\[Rule]", "pn0Simpl"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aSimpl", "=", 
     FractionBox[
      RowBox[{"t1e", "^", "2"}], "bb"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bSimpl", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "t1e"}], " ", 
       FractionBox["aa", "bb"]}], "-", 
      RowBox[{"t1e", " ", 
       FractionBox["dd", "bb"]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cSimpl", "=", 
     RowBox[{
      RowBox[{"aa", " ", 
       FractionBox["dd", "bb"]}], "-", "cc"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pn0Simpl", "=", 
     FractionBox[
      RowBox[{"-", "bb"}], "t1e"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqnDecouple", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"aaa", " ", 
          RowBox[{
           RowBox[{"pn", "''"}], "[", "t", "]"}]}], "+", 
         RowBox[{"bbb", " ", 
          RowBox[{
           RowBox[{"pn", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{"ccc", " ", 
          RowBox[{"pn", "[", "t", "]"}]}], "+", "1"}], "\[Equal]", "0"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pn", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"pn", "'"}], "[", "0", "]"}], "\[Equal]", "pn0"}]}], "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solDecouple", "=", 
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnDecouple", ",", 
       RowBox[{"pn", "[", "t", "]"}], ",", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "simplified", " ", "aaa"}], ",", " ", "bbb", ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnSimpl", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pn", "[", "t", "]"}], "/.", "solDecouple"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "constants", " ", "aa"}], ",", " ", "bb", ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnConst", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnSimpl", "[", "t", "]"}], "/.", "simplToConst"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "n"], " ", "in", " ", "terms", " ", "of", " ", 
      "actual", " ", "parameters", " ", "\[Alpha]"}], ",", " ", "\[Beta]", 
     ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnParam", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnConst", "[", "t", "]"}], "/.", "constToParam"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubscriptBox["P", "n"], " ", "with", " ", "physical", " ", "time", " ", 
     "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnPhysical", "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"pnParam", "[", "t", "]"}], "/.", "physicalTimes"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Some", " ", "real", " ", "data"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnData", "[", 
      RowBox[{"a_", ",", "c1_", ",", "k1_", ",", "c2_", ",", "k2_"}], "]"}], 
     "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "+", 
        RowBox[{"c1", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "k1"}], " ", "t"}], "]"}]}], "+", 
        RowBox[{"c2", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "k2"}], " ", "t"}], "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2.70277", "/", "0.95"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140086", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.32606", ",", 
       RowBox[{"-", "7.48407"}], ",", "0.00116616", ",", "6.20027", ",", 
       "0.00116616"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140129", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.84658", ",", 
       RowBox[{"-", "1.78546"}], ",", "0.0021399", ",", "0", ",", "0"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140174", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"2.32045", ",", 
       RowBox[{"-", "1.10749"}], ",", "0.0124691", ",", 
       RowBox[{"-", "1.07449"}], ",", "0.00310825"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140213", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"2.30471", ",", 
       RowBox[{"-", "1.18262"}], ",", "0.0156939", ",", 
       RowBox[{"-", "0.883323"}], ",", "0.00341633"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140256", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"1.67516", ",", 
       RowBox[{"-", "0.84578"}], ",", "0.0265268", ",", 
       RowBox[{"-", "0.696076"}], ",", "0.00398314"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p140342", "[", "t_", "]"}], "=", 
     RowBox[{"pnData", "[", 
      RowBox[{"0.447462", ",", 
       RowBox[{"-", "0.16541"}], ",", "0.0406766", ",", 
       RowBox[{"-", "0.233527"}], ",", "0.00479694"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", "solution", " ", "from", " ", "above"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pnBestFit", "[", 
      RowBox[{"f_", ",", "t_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"pnPhysical", "[", "t", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", 
          RowBox[{"alphaDist", "[", 
           RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", 
          RowBox[{"betaDist", "[", 
           RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
         RowBox[{"s", "\[Rule]", 
          RowBox[{"sDist", "[", 
           RowBox[{"as", ",", "ms", ",", "ss", ",", "f"}], "]"}]}]}], "}"}]}],
       "/.", "bestFit"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Try", " ", "to", " ", "graph", " ", "this", " ", "solution", " ", 
     "using", " ", "the", " ", "best", " ", "fit"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"comparisonPlot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.174", ",", "t"}], "]"}], ",", 
        RowBox[{"p140174", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.213", ",", "t"}], "]"}], ",", 
        RowBox[{"p140213", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.256", ",", "t"}], "]"}], ",", 
        RowBox[{"p140256", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"pnBestFit", "[", 
         RowBox[{"140.342", ",", "t"}], "]"}], ",", 
        RowBox[{"p140342", "[", "t", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "2000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<140174f\>\"", ",", "\"\<140174d\>\"", ",", "\"\<140213f\>\"", 
         ",", "\"\<140213d\>\"", ",", "\"\<140256f\>\"", ",", 
         "\"\<140256d\>\"", ",", "\"\<140342f\>\"", ",", "\"\<140342d\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(n\)]\) data (d) vs \
\!\(\*SubscriptBox[\(P\), \(n\)]\) model fit (f)\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<comparisonplot.png\>\"", ",", "comparisonPlot"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.678103977321238*^9, 3.678104015102353*^9}, {
   3.678104357411366*^9, 3.6781045443435163`*^9}, {3.678104584993827*^9, 
   3.6781047160090017`*^9}, {3.678104755550151*^9, 3.678104849535261*^9}, {
   3.678104921694193*^9, 3.678104923515424*^9}, {3.678104992617732*^9, 
   3.678104992780658*^9}, {3.678105262995206*^9, 3.678105458897114*^9}, {
   3.678105526530949*^9, 3.678105577734363*^9}, {3.678105642641563*^9, 
   3.678105697289454*^9}, {3.6781063511818953`*^9, 3.678106392772296*^9}, {
   3.678112189270574*^9, 3.6781122632396812`*^9}, {3.678112444551292*^9, 
   3.678112506080618*^9}, {3.678112550930231*^9, 3.6781126387631607`*^9}, {
   3.6781126861891603`*^9, 3.678112711346023*^9}, {3.678112744136038*^9, 
   3.6781127564734373`*^9}, 3.678112796497478*^9, {3.6781128814467*^9, 
   3.678113014321619*^9}, {3.678113096837903*^9, 3.6781133296124077`*^9}, {
   3.67811336287075*^9, 3.678113445988741*^9}, {3.6781855300432863`*^9, 
   3.6781855350635633`*^9}, {3.678185668928563*^9, 3.678185767083356*^9}, {
   3.678185899947463*^9, 3.678186053369142*^9}, {3.678186090242024*^9, 
   3.678186243554099*^9}, {3.678186928786027*^9, 3.678186996091114*^9}, {
   3.678187115115611*^9, 3.678187124473228*^9}, {3.6784478956447477`*^9, 
   3.678447902793023*^9}, {3.678448054932729*^9, 3.678448087056964*^9}, {
   3.6784482418325872`*^9, 3.678448260953259*^9}, {3.678448309334046*^9, 
   3.678448311290731*^9}, {3.6784486037701683`*^9, 3.6784486040691643`*^9}, {
   3.6784486457760277`*^9, 3.678448646703411*^9}, {3.6784498335729103`*^9, 
   3.678449947439225*^9}, {3.678449997586576*^9, 3.6784499982772837`*^9}, {
   3.678450122368855*^9, 3.678450122723832*^9}, {3.678450963416544*^9, 
   3.678450996456737*^9}, {3.678453715753416*^9, 3.678453729420127*^9}, {
   3.67845414664242*^9, 3.678454194961033*^9}, {3.678454236611834*^9, 
   3.678454274028186*^9}, {3.680003796824732*^9, 3.680003820593577*^9}, {
   3.680003923799205*^9, 3.6800039239372883`*^9}, {3.680004373018716*^9, 
   3.6800043786069593`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/jX8f/cNmCz8QzSof3ynYBL7f+As9Ss=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZoF8/wf8FSQi
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wq6jt1UI/w8yQqrp
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
n/PYvrELTmWD/It/HhzSWv6L7oB1+z//H266Sf0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\) data (d) vs \\!\\(\
\\*SubscriptBox[\\(P\\), \\(n\\)]\\) model fit (f)\"", TraditionalForm], 
     PlotRange -> {{0, 2000}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"140174f\"", "\"140174d\"", "\"140213f\"", "\"140213d\"", 
       "\"140256f\"", "\"140256d\"", "\"140342f\"", "\"140342d\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.678112618375354*^9, 3.6781126498642883`*^9, 3.678112719651902*^9, 
   3.678112762653653*^9, 3.678112802943573*^9, 3.678113019291967*^9, 
   3.678113336064021*^9, 3.6781134511778316`*^9, {3.678185301520249*^9, 
   3.678185319304886*^9}, {3.6781853718647614`*^9, 3.678185430807569*^9}, {
   3.6781855640216312`*^9, 3.6781855935318317`*^9}, 3.6781857708199987`*^9, 
   3.67818588915672*^9, {3.6781860069667*^9, 3.678186055894786*^9}, 
   3.678186116744792*^9, 3.6781861901625013`*^9, 3.678186246009034*^9, 
   3.6781863169540777`*^9, 3.6781863535367727`*^9, 3.678186836314427*^9, {
   3.678186998660043*^9, 3.678187032461005*^9}, 3.678187064016652*^9, {
   3.6781871731708603`*^9, 3.678187208678876*^9}, {3.6781872398384933`*^9, 
   3.67818725462853*^9}, {3.678187522096689*^9, 3.678187579420188*^9}, 
   3.6784457045919952`*^9, 3.678447917200675*^9, 3.678447972031932*^9, {
   3.678448080355818*^9, 3.67844808908538*^9}, 3.6784481631902*^9, 
   3.6784482633737507`*^9, 3.678448312954049*^9, 3.678448375678178*^9, 
   3.678448412994454*^9, 3.67844853864526*^9, 3.678448595887382*^9, 
   3.6784487279903803`*^9, 3.6784487607461*^9, 3.678448798473445*^9, 
   3.678448865438278*^9, 3.678448938433468*^9, 3.678448992656296*^9, 
   3.6784490226743402`*^9, 3.678449249767056*^9, 3.678449336144165*^9, 
   3.678449499303526*^9, 3.678449763851173*^9, {3.678449919955536*^9, 
   3.6784499523351*^9}, 3.6784500013400803`*^9, 3.678450830728909*^9, 
   3.678451345076448*^9, 3.6784517114337177`*^9, {3.6784517505375443`*^9, 
   3.678451771528883*^9}, 3.678451860102211*^9, 3.678451911545351*^9, 
   3.6784527599542723`*^9, 3.6784528662461853`*^9, 3.678452952984634*^9, 
   3.678453735305553*^9, 3.678454671149688*^9, 3.6784547137342997`*^9, 
   3.6784549643593607`*^9, 3.678455033638411*^9, 3.678455104432055*^9, 
   3.679137163840581*^9, 3.67913759877542*^9, 3.679138023027999*^9, {
   3.679138391755818*^9, 3.679138416572825*^9}, 3.6791384500709553`*^9, 
   3.679396834772596*^9, {3.680003944295225*^9, 3.68000395400454*^9}, {
   3.680004387093672*^9, 3.680004411459001*^9}, 3.68000446369214*^9, 
   3.68000452057199*^9}],

Cell[BoxData["\<\"comparisonplot.png\"\>"], "Output",
 CellChangeTimes->{
  3.678112618375354*^9, 3.6781126498642883`*^9, 3.678112719651902*^9, 
   3.678112762653653*^9, 3.678112802943573*^9, 3.678113019291967*^9, 
   3.678113336064021*^9, 3.6781134511778316`*^9, {3.678185301520249*^9, 
   3.678185319304886*^9}, {3.6781853718647614`*^9, 3.678185430807569*^9}, {
   3.6781855640216312`*^9, 3.6781855935318317`*^9}, 3.6781857708199987`*^9, 
   3.67818588915672*^9, {3.6781860069667*^9, 3.678186055894786*^9}, 
   3.678186116744792*^9, 3.6781861901625013`*^9, 3.678186246009034*^9, 
   3.6781863169540777`*^9, 3.6781863535367727`*^9, 3.678186836314427*^9, {
   3.678186998660043*^9, 3.678187032461005*^9}, 3.678187064016652*^9, {
   3.6781871731708603`*^9, 3.678187208678876*^9}, {3.6781872398384933`*^9, 
   3.67818725462853*^9}, {3.678187522096689*^9, 3.678187579420188*^9}, 
   3.6784457045919952`*^9, 3.678447917200675*^9, 3.678447972031932*^9, {
   3.678448080355818*^9, 3.67844808908538*^9}, 3.6784481631902*^9, 
   3.6784482633737507`*^9, 3.678448312954049*^9, 3.678448375678178*^9, 
   3.678448412994454*^9, 3.67844853864526*^9, 3.678448595887382*^9, 
   3.6784487279903803`*^9, 3.6784487607461*^9, 3.678448798473445*^9, 
   3.678448865438278*^9, 3.678448938433468*^9, 3.678448992656296*^9, 
   3.6784490226743402`*^9, 3.678449249767056*^9, 3.678449336144165*^9, 
   3.678449499303526*^9, 3.678449763851173*^9, {3.678449919955536*^9, 
   3.6784499523351*^9}, 3.6784500013400803`*^9, 3.678450830728909*^9, 
   3.678451345076448*^9, 3.6784517114337177`*^9, {3.6784517505375443`*^9, 
   3.678451771528883*^9}, 3.678451860102211*^9, 3.678451911545351*^9, 
   3.6784527599542723`*^9, 3.6784528662461853`*^9, 3.678452952984634*^9, 
   3.678453735305553*^9, 3.678454671149688*^9, 3.6784547137342997`*^9, 
   3.6784549643593607`*^9, 3.678455033638411*^9, 3.678455104432055*^9, 
   3.679137163840581*^9, 3.67913759877542*^9, 3.679138023027999*^9, {
   3.679138391755818*^9, 3.679138416572825*^9}, 3.6791384500709553`*^9, 
   3.679396834772596*^9, {3.680003944295225*^9, 3.68000395400454*^9}, {
   3.680004387093672*^9, 3.680004411459001*^9}, 3.68000446369214*^9, 
   3.680004521037972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "values", " ", 
    SubscriptBox["k", "1"], " ", "and", " ", 
    SubscriptBox["k", "2"], " ", 
    RowBox[{"(", "rates", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k1Rate", "=", 
     FractionBox[
      RowBox[{"bbb", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"bbb", "^", "2"}], "-", 
         RowBox[{"4", "aaa", " ", "ccc"}]}], "]"}]}], 
      RowBox[{"2", "aaa"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2Rate", "=", 
     FractionBox[
      RowBox[{"bbb", "-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"bbb", "^", "2"}], "-", 
         RowBox[{"4", "aaa", " ", "ccc"}]}], "]"}]}], 
      RowBox[{"2", "aaa"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k1Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k2Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "140", ",", "140.8"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Large k values\>\""}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "A", " ", "zoomed", " ", "in", " ", "plot", " ", "on", " ", "the", " ", 
     "smaller", " ", "k"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k1Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k2Rate", "/.", "simplToConst"}], "/.", "constToParam"}], "/.",
           "physicalTimes"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"alphaDist", "[", 
             RowBox[{"a", ",", "m2", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"betaDist", "[", 
             RowBox[{"a", ",", "m1", ",", "s", ",", "f"}], "]"}]}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"cDist", "[", 
             RowBox[{"ac", ",", "mc", ",", "sc", ",", "f"}], "]"}]}]}], 
          "}"}]}], "/.", "bestFit"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"f", ",", "140", ",", "140.8"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"140", ",", "140.8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0.02"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Small k values\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6784469050087757`*^9, 3.678446916367736*^9}, {
  3.678447015415007*^9, 3.678447091466209*^9}, {3.678447126750193*^9, 
  3.6784472621011*^9}, {3.678448173605566*^9, 3.678448187725362*^9}, {
  3.678448361536171*^9, 3.678448370107367*^9}, {3.6784490749109783`*^9, 
  3.678449107529531*^9}, {3.678449588142639*^9, 3.678449588475518*^9}, {
  3.6784509366030083`*^9, 3.6784509561375313`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vhA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
OeCDOr2989sJ6H/N8Nsu
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {140., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Large k values\"", TraditionalForm], 
     PlotRange -> {{140, 140.8}, {0., 84.64433521143356}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6784470934417953`*^9, 3.6784471310685596`*^9, {3.678447204324404*^9, 
   3.67844726570263*^9}, 3.678447973646688*^9, {3.678448164936254*^9, 
   3.678448192144764*^9}, 3.678448380634623*^9, 3.678448417585724*^9, 
   3.6784485425967207`*^9, 3.6784485995712137`*^9, 3.6784487301460733`*^9, 
   3.6784487643694563`*^9, 3.6784488019870167`*^9, 3.678448868973322*^9, 
   3.678448941127956*^9, {3.678448996432667*^9, 3.678449025483721*^9}, 
   3.678449252315905*^9, 3.6784493379346247`*^9, 3.6784495010998898`*^9, 
   3.678449591194373*^9, 3.678450832395804*^9, 3.678451346650375*^9, 
   3.67845171410953*^9, {3.678451752775837*^9, 3.67845177394129*^9}, 
   3.6784518617070208`*^9, 3.678451913143784*^9, 3.678452761616498*^9, 
   3.6784528681670856`*^9, 3.678452955154793*^9, 3.6784537374674892`*^9, 
   3.6784546734886513`*^9, 3.6784547156469803`*^9, 3.678454966918241*^9, 
   3.678455036147674*^9, 3.678455106515938*^9, 3.6791371659974833`*^9, 
   3.679137601131777*^9, 3.679138025740451*^9, {3.679138394041798*^9, 
   3.6791384186876183`*^9}, 3.6791384522885637`*^9, 3.679396837073668*^9, 
   3.6800039568536577`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd03k41NsbAHAGyb7LvkSULaUwM3iH7GtaJCIjUSqkhPl+u/Zs3QoRUXGl
kDtKqSzdCC220oKKFrrWpkJdIfq98/vjPOf5PM85513OOZqB4Vv2Unh4eKpx
cOfRluU8PPFMhuj7t0Jv2s3gL688CgX98FKKoOdTM/Af1xLgRwueumXS88IM
esVBeDl6itDz5gyYQevOKFlJ9JbYTwV5X82g+OvH1RpoTR3NjAZ5c9iVGK6/
Eu11/5hBl7I5rJBbNNRGF2nrC41rmMMpmoLJarSqc94d0DcHMsXd0hidX1fY
G8owB2/lBk8GWvj08KtHB81Blu24zQbtoJlEpkSaw1NGr5ct+oehYJx7jDnY
B0/5OqIPLFMepiSbw4YbusGb0SMxI/TZQnOQdDjLCkDrz9crq3ebw5PIQ6Xx
6Mvq7COzdCpESm7qSeTWkzDT9GkTFVTYCr+T0VoLE7uHXKgQMd7ik45ODFvg
kdhFBYUAJelstEc7q9/4OBX2uT2KL0V/lotOrn5ABenJInYZ2iSOlKjuoEJj
WuTAVbTph39uNL2kgmSrqnkVeofLthtKo1S4Szv69RbaNpTorxKlwfLVmv4P
0e29rTxBvjSoafsv8zG6Ve/yfPZeGuza01nXjl6e+J7zKpwG1y9Gyz1F8wfe
sshPpoG3XHdnH5qpSI5KVdOgnELQx9HUd4LaPwTp4DD4UkE0gcmQou8c8mun
w7GlGk1x9OP++2phvXS4rJ6lJ4nmLbLyyBmiAyXQzUIWbanlsKCyQIfGkbbd
Kuj4T+IZxoYWsP7b7SsGaFHGmMDhXAtQ4SvY4IZ+IKthpRZtCc7a0ZYe6AaT
nMt8Jywh1m67vSdaXnvuT95cS+hNlfLejh5sAX+Hm5aQJZpB+HHjby7UWfpm
CcvkiQeH0P25agvrDlvBt9V+m0+h9duoj+NTAA6X8XmcQQ+MTQ5sPQcwrVnp
lo12/ugjZFMB8ENp1jmPm09piUJEF8C8aJbdRfRfyk5imSIM4J9qpbHRMlXx
/z3bwQCFOoNV3WjZy+6PLBYYULDxhdYztF+fUOa0gDUo1cSufI4+Y3om646k
Nahee6jei+61zigK17GGlRcClN6hFys91Au2WINBwlmJL2jHR0eCB/+2BnD6
NSeWyGT0yIscT4mwAfazCS1JdGV9Uo7nHzag5v3aTRp9uk4nad1JG1gKvl0i
j+4tD9U3LLeBxuQIJ3U0a4rXWe6jDdCaPuUbo+3a1NtrvTbBBrMus61oiT4V
30JPW7j8TwNzO/pGSevdJaYtyNpXZu5Avyv+zo6OtIWZbanvfdFGCQ25lTm2
UBNpnRqEfjpbUCjXZwtr2bW9Udz17mI5woF2oLfqYlQ+umyjrn9dmj2oGeey
zqM5efZ1ReftQYZ+Mq6Im49d+mJOlT382sxKL0Y7Bzr6/PPMHrpIrwvl6Hha
iAifkgNEvBRvu4u+BhNyntcdoDYpTvY1umghU079syMwhgJuKiYxGXWfBbr4
S1xA6+elYWX04I8mYqLOBZaJv5dRQ7cVJsiMPXeBDqrf0ZXovcetOHoCruCV
tXOjPlryleaj7lBXOMjYcscC3dTwyCqD5gb5Fzc17EZf/pQaeGHSHaZ8dFrK
0N2Toq4cR09wLKfYrU1mMu6/nIxhb90OHb2/06rRaoof0qYSd8J40++LtBT8
733uVzVc/MHkpEZ0I3rbB0+21n4maBl4N9NPMBkd7xs5ay7tAXZq9mAbmlm9
80DJ8mDY28ppsE/F95Ul0n6DuQ/uNLocfI7mX7M+y8T4AFSnN53yTWMylMTz
nxgFhcELM68jb9Er958ZfvU9ArJLvqwJTmcy3GgikbqGR4D8fPWvUfTnFXGc
qJgooMzs4RzJYDIOr8z+TixFQ7jVDtljaKG1cefFl8fAQLozPQbN0ZIqKZKK
gVqNdekkeiTzWlildgzsc1/STkHvq9jkn+EcA10V+bvy0AWSwj/tcmMgP6Cr
4y66ze5f68VVsSBQ1TRdz3VF+ESHUSxEzt5UvId2eLHmZbZZLLicOh/SzPXg
qICQUywsNYTwtaPH+odVzx6IhT0rKPS3aCbFlF+iOhaMuk0rF9ERQkHKY0Ys
0Liwvuo3t57MfD0RUxZIHTRi82YyGX9r9T3UtmTBdyGdGgG0i7KgN92FBXV2
cvViaPfm8IaZYBbY3pt5oor24I2vii9igenJrx3q6H+LfhJ8pSzQ9Z3s0kTr
VKtdISpYIDw31LMKndHi1+RymwVPNzx/bYieqrgjvP8pC3yqro9boptD+Nal
/WaBK1E1CWgjsTo9bwECLJ3LOdZo13vSTBURAjTGLk3ZofkouZAgT8C/Wqfn
3NCjWjKcegMCIgoPCfmjyzZtrnnvRQAzdL9IAHqf9bvaSV8CtlD3igWiK5kP
picCCNjYt0sqmFv/tp9vH4QSMC/tqhiG9j7l3dF7nICUDL01f6Dh9pn0xBIC
goLCvOLRD7PX3pS7QoCtVU1SIppzLK0zv5IA/mnquxPo6/H1J8NuEpC80ynn
NLr0jXaSVyvuN/mzKQt9SFlvf8hj3C/Ww8nhulu6OaSTAL5mb8d8dIpuS6bp
SwISV+9bLEab3y9aFB4mIJBSpVeK7qxfN5Q7QoDNwNcdZWiW3sxjiQkCeM9E
11SgZxXj9z/7RkD87ImQGnT4r6LCpEUCAnraz97i5vu0Z0MKDwmMa+IPbqNN
9Q6GR/GR8Ns/T6UB7RS47IKmEAl/PCzraUG/c15Re1WGBP/i8aU2rhNETFTl
SbBiGRo85vbniS1vggIJi4a1JzrRWufuhcqokjAgOHezGx1X2PjdWp2Exo8W
H5+hu2bjqvw1SSBzW+mv0NPTV1ICV5GwK3z5/j603Nk355x0SbBwcs17jdau
jqxTW0PCr18vvg1y77/YQyLHAM/vXaH2Ac2vSJquN8Lzr/u6DKG/vB3Ycn8t
CUTQcNkIWok5s7V0PQk+VrovxtD9z9mG8yYk0BQO8Exy7/9O5YjVRhKUptmG
HLTnWVnWYVMS5jumfb6i13X6D2eZkfCmzDRtCn0riqFWbE5CfRyrdga9dnWt
ThGVBJYJRfIn9//IFGf50TGemL3lPPqbXghnpQXGG00P/YUuP7JHqBet1Nx1
bonbb2Ji6JglCXPnpdp4TmJ9vueiBaxI6D+6fZqCPvHKuS0Bfde9QF0APaei
3z6Jzl896CqI/m+xNHkTkBBD0WQJoWekQ2bS0AO7DyWKoM2iDGzq0Nb36jLE
0MZHjxe9Rl9RWpYjgc5N/cI7gc5qVvq/CVm2w0fWWfgfgHrVVw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mYk+YNjV9U2LgP8BSFYCYQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {140., 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Small k values\"", TraditionalForm], 
     PlotRange -> {{140, 140.8}, {0, 0.02}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6784470934417953`*^9, 3.6784471310685596`*^9, {3.678447204324404*^9, 
   3.67844726570263*^9}, 3.678447973646688*^9, {3.678448164936254*^9, 
   3.678448192144764*^9}, 3.678448380634623*^9, 3.678448417585724*^9, 
   3.6784485425967207`*^9, 3.6784485995712137`*^9, 3.6784487301460733`*^9, 
   3.6784487643694563`*^9, 3.6784488019870167`*^9, 3.678448868973322*^9, 
   3.678448941127956*^9, {3.678448996432667*^9, 3.678449025483721*^9}, 
   3.678449252315905*^9, 3.6784493379346247`*^9, 3.6784495010998898`*^9, 
   3.678449591194373*^9, 3.678450832395804*^9, 3.678451346650375*^9, 
   3.67845171410953*^9, {3.678451752775837*^9, 3.67845177394129*^9}, 
   3.6784518617070208`*^9, 3.678451913143784*^9, 3.678452761616498*^9, 
   3.6784528681670856`*^9, 3.678452955154793*^9, 3.6784537374674892`*^9, 
   3.6784546734886513`*^9, 3.6784547156469803`*^9, 3.678454966918241*^9, 
   3.678455036147674*^9, 3.678455106515938*^9, 3.6791371659974833`*^9, 
   3.679137601131777*^9, 3.679138025740451*^9, {3.679138394041798*^9, 
   3.6791384186876183`*^9}, 3.6791384522885637`*^9, 3.679396837073668*^9, 
   3.6800039589165287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "the", " ", "best", " ", "fit", " ", "for", " ", "some", " ", 
    "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fRange", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"140", ",", "140.8", ",", "0.1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"variousPnPlot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"pnBestFit", "[", 
          RowBox[{"f", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "fRange"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "2000"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "2000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToString", "@", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` GHz\>\"", ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{"f", ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "fRange"}], "}"}]}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Calculated \!\(\*SubscriptBox[\(P\), \(n\)]\) for various \
frequencies\>\""}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<variouspnplot.png\>\"", ",", "variousPnPlot"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6784501710893517`*^9, 3.678450282802938*^9}, {
  3.678450365773109*^9, 3.678450389636763*^9}, {3.678450450134921*^9, 
  3.6784504895872803`*^9}, {3.6784508465492573`*^9, 3.6784508689860888`*^9}, {
  3.678450900195261*^9, 3.6784509220851307`*^9}, {3.678451963627502*^9, 
  3.678451992605654*^9}, {3.67845209190386*^9, 3.6784521016025753`*^9}, {
  3.678452140975195*^9, 3.678452185804482*^9}, {3.6784522531373787`*^9, 
  3.678452255695239*^9}, {3.6784523705297117`*^9, 3.678452415337872*^9}, {
  3.678452463112196*^9, 3.678452470058716*^9}, {3.6784527366214123`*^9, 
  3.678452753870173*^9}, {3.678452847782785*^9, 3.678452848409965*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVin041AccwOUtz4Zck8KSm23VKSZMqfP9OtImKpVFGXvUhYRIUg/yctyd
0rm7zrvf7+5+l5qnNamhaCyKzFu6IlFunpD0lHPJFbP2x+f5/PH50MPjdrN1
dXR0/D/xv1+p5/x8DhuARNUYyJ829+iqMPrWWzYCDNn40QVyykNpnBJsKZuG
rVtWUj2SRdDX6DqtJ9NDYX/9Zq2ABsHFS1Er/QIt/vi6Ju8sHawMM0anpXa4
la6wDs5xgtNb6jZNSZ3xV+mcf0uqJ1T27Rl5I/XCjfq8QmFMAOQPZMx7J+5F
Sejq1MMG4fCQ5JYKD4Zi/c47Ll9JjoBPUL1XqtkhLFq3nqyOiYcfP4aXDQZF
4VpbxkLbkxMg4NP//OgTizPeH5JaJk6Bh+UPqvDueKzhFNk6s9JA1KSd6YpN
xAO2NJcD7hnAG/p+ykqVhCv4WZr1a7LgweKOkC28U7hhF9+p3S0bGi5NXmHq
pmDr65+1piu5wCnhmt2LS0O5QVWUiZoHO/1vq2n8dFTZMrtTxnLBgZfSXdWc
gSVVm1+cuXEOau6PHbq1Igv37pYn9EnPw28uZhxuBAeLLbeXRXnkQ9L+NEkL
mY3Hm7zi6ZZCGM8pCjuqzsHkiefuw7oiYMTOWnMcePiu5mKx8okILEL0hYbZ
fDSsSM7e3iiG+OOdAr9HuWjsfCjSrvwCEFsH03WXnENu3QkTWpQEEm0KGXYH
8/CnQfuwl6wCsKouvHddeh5FpkYTvp8XgmNc4OTifgEmKNryNB2FcLI4jD1y
IR99OQk3P5QWQWNQbefpDUKUrAoxCtxfDCHWbNG2ISGyCm6nFHxTAlUJU9Yz
HBGejYjft3yiBGIuSYkQuhhZo7euVxOlkPb8YupsuxgPPJ1LvxpWBrOazkC/
qAv4bMWyWQatHNaSSnWGvgRrL7Xtud5QDr/7OU1OXpGgEbPM2CaRAKKv6tkS
3wJktfvq3f6SBBU7Z32kpgA5zjbMxz0k5D1IO5EsLsSH2suE52YpvH0QmHnE
sQiPNXTvDDgrhcuPMl8J+4tQscv/6MiwFO7X9PrHJxXjvZb+YLGjDDxKk41z
6CXYYLHfVZIlg2jzeUHK/RKMzuy52aGUgU60wtj+cClaD++2TFwlh4kW2QtT
szJcKeTedY2TA3Pur9rKq2XY7sHPE9bJYVtb0441vuUYm6gRnVyQQ0XhMtZT
dTlGSlhKr+0UxHjnOfjkExig/nTkU9DFurzMQEzgGWL2l7UiCr7zbJ5rlhA4
pujcFCqmQMPUtnuWEhjXGlrVKqHgtBs7gllB4LF8vFZcQgGPwZS6NBBovM9a
z11BgcLsNc1unMDeSvWb6FoKDJcYaVUTBL7nBkYSdRREmtgNS18TqOqx7+y5
SYH9Z8FXbaYJHJK7hbg2UFCtd9fX6l8CZ9e9Ecw3UdA4U5ZFMydx9I5mR247
Bbbvao/0WJB466GdoP5vCjKnewMEliRmuA/UT3ZQ4PPWyNZkFYnXFv0zsKOb
go6XiQ1GjE99Y7rjUiUFDuMCqnUdiQn1xkrWIwryRytzcxxJ7M1gsI8/pmDP
yHCQviuJVl02/sp+Cm6oPkKzG4nRXe8p/QEKLIYtVme6k6i3OGLM5SkFyc+c
TD2ZJI7ciFnOHqRgYNDv3QKQOG9u4iIZouA/jfpUdQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxXk01AkcAHDPneTOhlaksGqlYpVnfL9KlNBuZZdW6TlLYhXWSsotNcbM
uOn3G5vSippXvcYWuSpUjnENZn5Ts7NJji0zyLnXH5/3MQ+KPhyqqKCg4P2f
/5+QLXu5h6mA1Uy0WujTYy5dt9Qt3SqkQBKaDned7KFfM8nfqEIOfHkwd+dG
NxA0OsiVKpTwc/juean+UfAv0cMFjj4e9KzNKFYPAWPVlFE5xwIV+bnT3MXz
kOhct3uasxOvrret9JGmQbXgiPQjZy8+8R1gGvDYkDeSsuIWexRFZeZDkTaV
0EdmlTGDT+CodbnG9LlacPd7sveiTgi+esNgD5o+gANLQeUiv9NIsxr35tfx
gHHF/OmSexQKcmJqIqkn4GK0XxLUHYMxWw5tWm3UBKymhbmuqFj8q8o0Mnhz
C2RT30wbS+LxdjxJC1xpBb7a6wDn7F9wbPTUsvXEc6ivmqyhKSaho/eXnj1V
bZBemqXzIjoZ97ka/ST36oBD3g0y3SuXMcvnsnxC5RXYZid1c1tTcLIta2qc
9RoedbwPebwuDR/ahZus2tEFtfY66Vnh6agd9eIe73E3xB9LLnhGZuD0Rr1k
/dweGMssDoyUZaJWwAm6sgcfbKLmTdJts7G7xePXnCk+GAYoM1UzruA+iVkI
u6wXYs53MrwGctAxgd1ih31A7BNdVtS+hol6EetP9vdBrGmRjUUwHQsV21YC
o/vB+H7RiwecXDSnE6mzi/2wLdp3Um2IgUHMj99aXxqAn0sCQ6X5eXio2bmR
vmoQGv14nYk7mPjH/J1Rq8xBCDAJZXlQTDzpEBd3Rl0A3HPTJnPpLJR+XHf/
RpoAzlZxiABzNlbu/iC5JhNA8pubF+dfsvFZ1/u4krAhmJ/p9PU6nY/kIF22
rnsIviL7ZSnKBci9o6Gpt2MY7nltn5ysKcAfH6TU80qGgRBwxdqehbg5nstQ
/TwMktDMr0/NFGLNq/CRUr8RoPOT4xLYRThQ8vviBe4IfOL7pkZsK8YV+112
j5SEcHsgdYI5VIwK5t3NvceE0PGo1zsmvgRbdHtaXH8TgktZgmameSk20fQ/
OS8J4YzBCiOpoxSJ6p789v0iUDhTqbklrAzfsdqdC3NFMP6s4p2WTjmGxFQt
lwlEQFtu5lXfLcc6YsP8cSMKPNqbfKw9r+ND9cFLN3+g4FbR2j1C2XU8bthR
NFJMwVk3uq17HoEQPfw9o4+Crj2316qwCZRssvszr58CO9fW5dYCAts3tx9g
DVAwQ1t46VpG4Gpm//V8AQWJjqHhtFsE1tI1IoqEFGTb0Dj29QQ6rXIrLpBS
UKkzpWsxRmDAXGp8rJwCVW31Bck4gcR87xcxMxScWmPxljNFoGqdJevsLAVb
NPzvmsoJlF6c1g37TMF9peeexn8TaBlY7+K7REHjXHmargGJp3eFHd6qJAaz
WV5EjyGJPnPNmZbKYkiV937HMCIxwi0l30xFDO6f1M3WbCCRF7rH2UBNDK8/
xNar25CY4RfXsKAhBtsxxo22rST6O+U3yFaLIW+0OidzG4nnae5FE5piOCJ9
66fsQGL+iQsCkZYYHkqWoNWRxDe+Gi4D2mIwfGtolepE4qKZW3KnjhgSxNu1
XGkkulTbFj/XFcOIyGv2HyDRRNh9tUFPDP8CBw5kKg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVyXs0lAkcxnG5J8yUGqFVdk62FGpXZbf0+yWLJna7EMpRjRQmSTsmOXJy
HzZr3HIZ3ndGVh3d204qimgzWrIsjTTKNGZeSVvGfWntu38853s+57HjRu8J
09XR0fGl93/fa2d9PI8aQOE1vfqUh8lbn1cZ23tIVTA59DnDs3MPdJkmBFlJ
RyFOf+fgeDEX5PUbRvWkeuhbbRH1t+AUBJUswmmJBU4xVy7beCAZrA2TNKMS
Nj64fE9q6ZoH8VvufTsi+QbbM013lc9KoVq+V/VRsh2XDRiEcbNvgag36bMH
3w/XXLOVu4Q8hr/IDHFuaAhW6B9JciyTgWdg7fazzCNYkMlectS0HXbMcMsU
gRE4uS/xxeHrnZCTafdoxvMEaqo2CJoCumGrlbeS2x6DowEcuyytHPIapiee
n+BjHDOPUQe9IOzbOGKtFGDDqaotpesU0GHUGrxFeAYtpdGbT1u+hrpLw1fd
dBMw1vF8pvLWG0gtzWA+jU7EHbXREZE5/fCj70PtwsxzWKC4f5HvrgQnYUL7
zaYknGGmsXgvlXC3hTryYGkK+j95y3GNegvXXJipGcdS8dUL457ej29BsD+x
8AmZhjudk7hGISoYTC8+eFybjkRlhaXJMxU4nJiySXUS4snBQUerlQPACtbP
NUzLxLFgbbxj4gDE/NSW49OdhbzNxlnK1gEgvlec02Wcx/0edwTAUAPftsiB
HZqN8h49pvsuNVjfLnr6m+QX1H/HLDfPUINztP+wUU8OhkzaHmquUcPpkoNh
qgIRrihZLsil1FAfWNMW/3UuzvXvjVAwNBBsE5bn1ZeLZZTNRp9NGrh5asRm
IjUPi8OvfGm/XwNRlyREsF0+mreL3LJOayDxza9np57l4/w2tldggQamxtr8
fSIK8FD6lSrJVQ2sJru0SfqFOL5oROHaqIEbPuuHh68Wonj6ADNSrgFCfvM1
g3MBiyy8K7zfaUAZlu4YPnYBL4iHvGT/aCC7IzE2Lr8IxXMGS4XzKfjU4Z8c
6VyMXbWztypZFFzuTn6f21OMepw/DM+xKWi52+kbIyjBBFd9zT4nCraK40zT
7Uqx0rthcsSVAt7izzkJLaU4KZ6ns9udAh1epemao2J8byNiuHIoGHoiVZsz
y7BCtsB+YjcFbrOPa6qvl+GqINephEAKvGQNP6zilOOOGHuSE0JBVdES91fa
cmxIWGo3G0pBlEe2k6eIwEVl4yYt4RQ8d7+8xCCfQB3Vy6g+2uu2Nc02FRIo
y+9pHqE95jb9bJuYQMv7LoetIyiI3xR2zK2KQOuDXat5tIUObhKXOgIdJs1Y
CyIpqGR+WMgeJLBRPc334FFgyDCeVg4RKGoRNQbQDjdj90s+ECi3qTXi0V5j
EnTddpTA1kc9cbm0b+v9zrH+l8C7mcREH+36ibKUhYtJtPBLCY09TsGK8ZrI
P1kkslsN1wppJ4927s6xItHqacBwKW3PT8YrzJaTyM0+6ddAu/Udv87YgUTZ
emWjSRQFToM5F5vX0v95F84XtEWa6qx0ZxKbX8W0ONPeq+oP1N9A4gT/3g0/
2neUM9C0icQhmYx1jDarn/VV8nckzrPviD1DO+71evNtbiTGmnW3/ky7V+Ez
Pgck6s7JbQja/wGQT1xn
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/oQHh5VXt2WzYCWlOZTw/4/hfDo=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV0Hs0lAkcxnG57xbGlhFOmNXRpmJFVEt+Lg1paFX2aI+yqUkhUghJxnVU
MkNyf9+RSx1rpRuK/HJQEUpYmoiZt6KiZSaWUPvuH8/5ns+/D8s/dDdXUUFB
wYPe//0oW+Cwj6g4ZJ6+p+G4eL6xq1zd1KWYcuj4cTi6ReM37F0Wu0+vWO7A
8e9ZebKei/24Sa5UrAQdihLSPy0C9+X9AHOi5WDL4u0qO5CM+qq8d3KRCXBX
D92xMc3GGLu6LVMiK7gQ3RfFbi3Fiv491D8iZxi6q5XfzriDAjFv0SV8LxAF
Ma3Lw5qxh0wtEB46AJp26dZ+3z1Ftk+981nGYZjdseWcrOk57pj3Lxz0OQbu
E07Zbp09mJHGapxnh8BGHXKwxulv3KbnJvF/FgbOfSFHqwQDmPlwbqYrJByC
GKjilShG/pDNlL4kEkyfDHk7MQexW63D144fDcureZ2XBEPYcG280l4xFjLL
9PgLTa8xKT+V8Sg0DhZ5RvLCR8O4y+OBTDstHpITxtTE+0fQnB/7rLqZB/+6
DwsHHo5gTdvo4fsrEyEm/v7Sm6sk+Jc1Iyk1IAle5WlqWAZLMPL3uOwWMhnu
u/Z2lfwpwbGUXL9gWQpkNrc3bhuVoFnIrEGSOR8sEj1VDupKkemrLFRNTgPd
/G7nGBcphp3qzOD0nQeHGwo6VwKlSGwfjFfUuggVCjXX/0iTYrhhjpnJoXRo
m/3mwi6Xov6tnEe3RZdgZ328cf4DKVqEeo+rDWRAqQe+j++W4uk8Py51WQBU
f6ORzRspok9tZ8xGIZj0hJ7YLZeirwE303VICIv8cZ2zSyisPjllMJOUCXef
vbgbqUHh8WsiwpeVBVZGtzet1qUwbrjs7Gx7Frwp9G/cakzh7OdOb86xy3Bt
9QlX4RoK15K9Mp5yNixxuxrVu4HCGxzL8fHKbHg57RVRZ0Uh0V/9Wsv9Cqy/
EdgQs5lCCTdlw9HPV2CziwUxZUdhendcRFRWDnQ4fTK4CBROdnsnBFrkglxN
LCOcKbzel/BROJALKVjqmcCmsK3mhUdYZB5YzRUG9btRuK0galkKKx/Sjp1S
UttJYdCKxYzYtnwIdFSeHOZQqBBUumzdkQIIuFemc8CTwg8txW81GYWgKg7q
atlFof1CU21FVSH4WbMC3/1KoeuTh54/uReBUVNE8pAXheU5Ok6vZEXAHJsa
bN1N/+OSbs4WEGBo/8sF3h4Ku5yu66hkEWB2fH9OEu2fHZsXmrMJmIwtKE6l
/dl+rt2xgIDK8dDqdNoxttwA+3ICbOvza/No883sRdYNBEjWzgffpF3KmNA2
GSOgpEp8Zpi2qpb6nOQDAZZaNz2ktI9qmIyIJgioi3286i3tdd/vqzKUE/Cp
r67uA+1bSq3u+l8J2ND49OU0bZwpTNReQcJXw6ttS/dSaDxdG/icSUKR6Zdz
mrQT5C+8MvRImHcvsdamzZ5UN9YwIkHCnMhl0u54H96gbkZCafcZDxZt87GM
ksfrSdAVR8+Y0Ba8qzifYkHCQbfuIlPae6gRH+VNJAyHCEbX0b4jmXdotiWh
0vJLmjlt5ghzTcJWEpJDm8wsaUe9ttR0tCfBZP1omxVt8SBn+psDCURgcIAN
7f8A3T6IHw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx3k4lAkcwHHPECpXOXJ0TdNDpnIkemrT/MpRadgt7LJp25UpI2eslUee
dcTU0zQYV4z3HVtJaoVWthY/LcXILY/kGsa8jrQyjicpu7N/fJ/v86H7h53i
0FRUVNyV/f93is9s1/OrWDXiSvfI5cjatiJNc+dCGatXMsMLmTyGr7XifE0K
51gdmtmbtj72wV60n1MtVAWbvvHujcJA9L21HpbE+rCRn60ReDkGTdUTqDkx
A45Zdhxk+fIw9uCf+2fFdrDFJvjT9LZcLOn1lM2InUDO9P9UU30P094mfHGO
8gJpmN2G6eEq7CZT89PP/QCZd9OfFTCfo6vPX05X9AIgc01tyePFF3h82V80
4MOFvvdXe8q7mlFwjV677BoKp59Kb3+j046HTI6N+LdHAHEi5oDag07MqFta
bAuNgu5P3WYSsht5gw6zpiPRsLz9jGjFswc7NVr8DvIuA8Ph7wm+di9W35t+
6EiLgyyJH8fm5htMzkvVexkWD62JxYsmM334tXuNYt21X2GhTAjVXv1oxYtr
L6tPgHHebwlONwbwiWQ84JlxElRcis473ziIv+/VS069kAzFOxbnr4wPYfT3
8VkN5FUoHZZT4aPDOJGSezZYkQL7Iw7xj4dLkRn60SzZigcdd10Ml4akaOSn
lq5+9RrYaaWSgx4jGBHZKmD3XAfxLloTvXIECZeBX2m6N0BaFitx0BnFqM05
TMY5PvTtDBGeCRxF04qcl4/FN6HUkL1e/mQUrcO8pzXeCKCtw3bV7Moo/nLr
LEeWmQbhxi5D/xyVIfpUtcbuSYfwIWhMSpWhnxkn4+hgOnBdxKqdjTIsuzRr
tpicAQ9+9LfKpY1hyD0x4UcXQtCMVvAr+zGMH7575WOzEPi2k4JC7hh+nG/1
ZnMzQTipr2jKHkNL8rUiQS0LNsu5KfvqxvAR23Z6+mEWWK3Qa+ynxpDoLRvS
dcsGE5eytc06chzhpOwOnM8G68oS7xY7OfI743+OEebAo/Bze1Z7yfFDp3di
kHUupJ0NthBFyLG4J/Fd+ptcqGflBKUJ5Ch50uUeEX0LdnP0zIrvy/FQfoxW
Cj0PDB4YVq5ukONFgy+COEkeaIdHiswH5Khy8Y7WzvP5MGTuX2ExK8ephkK5
jp4IdtAd9gapU+j4+XlVSakIXO5z1s8YU3i0qc5jh1sBlG6qb522pLAox/BI
v6IAXhbXu23/isIQZ76VaxoBMnWWkOFGYduRYsNVQgLEKioeAUrbHK7/XJ9F
QGZXxsIdpecdl5oP5xPg9NR5rfkJCmP3cS44FhFw2i3mpAWbQh7TUby3moDy
Oh0Pcw8K7+i9X8eYIKCghWFtdIpCdV3NpZEpAkK5NIGX0oHaDKn4PQHMJM5A
htI71/iWbp4joFe/naXrSWGF6gs30xUCTomaLDW8KMRFUdI6AxJqBBsEc94U
bl2oCuowIuH17VcSm28pTJzrOikwISFQ/7QiRGnXD5pbtbeQwEuma08o3TIZ
Va3JJGFD1yi3/zsKrSYEtxt3kVD+QcPA2IfCNKrkeoo1CXFg99BLaU+Z1EfN
noSf6sqLWpX+Y2SZVb+PhKkM3dVrfCk0khpZJB4gIaGf5+uqdMyQrc5hRxJC
xrflJir9doC98C+LhACarKFW6f8AvA+D4g==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxXk01AkcAHC5siFUbMxWpEPOtRWrNebraJSlErNrPLv2YVxtuoQ0KQzG
lB1HQ6Lfb+iSa23HjFf4Ylw/OVI8Sok3KRt2y9TEIrv7x+d9zEKOHOSoqqio
+Pzn/ydnFryZ4RoM13eCpoZfGA09N7S2eJTIGRJdJS2/zBj7dbhs4xIFw09z
Y5izaBsO4k6FWokaaCs2fr9C4ITswlUwJ14N2vJH/hHJe9FEM/m1QmwOK7be
Y6rHszHRudbpvXg7fFLaFNRyorB80E/+t9gdRqojnFR3n8LsZ8mLHrH+gK+X
20zoCPAJmVGUE/ozpEbdX9dlkYfMgAfuZ/TDwDG8+MdZ3ULcOx9S/DwgCl4t
ahuiL4nCTLOGeWYM3NQacphOK0UX4z1jIb3H4HhCfNWS8DrmNs4pe2JiIXF9
1Hjl6TLkv3B4bzIWBwyPf3ynt1Rg3/KuIGf+KRh0jaqoXKjCuptTlXRVLjw0
7rfZ6FWDvMsZ+m1HkmD1X0qvZZl/4H6f+hmDzHOgETDKVg7fRls+t7dGlgzE
+YKldoO7KKHehN1fmwr5cSctagPvYdUOfV5GBA8sKnf81JsvwbjAJFELmQbD
Ows7SakUJ9IvBf86kw7rJBqmZ97WomXMLI1ny4ewTVyVL9Tuo1GQeo5mWia0
Cp6wmq0f4LET3ULvAQGc7vpq+KlXHRK7n59T1bsA/EiW84ED9Ri7vsDSPDQL
tm3RgkVOA5rcLmi7I/4NuNz5mjehiHZHWFPLh4TwRFGp/smqEeMLgznyi9lg
ILz+6GpVI2KAtDvxmxxIdu+MsNnUhEE0Tq7nixzQiyJ0VEubsOb4e5qSlwvj
nsOcKZNmPHxTTASZ5YEdYakendmMSS+vn5ntzIPT29UsOj834+yHbpZ31EXo
HOlIokXLcBvZP5OsLoL9LyOvufTJ8Hdv+6mpShEESMpVXrm0IDFYM6LnlQ9L
/NaVtKstOMZJt4n8kA/P9ibSebqtmNWXdDIhrwAk8uqk/phWfNfHSom2uwT1
7Ya+gV2tWDaQMpkzdAmCNk9898CuDSnJY59jcYXwtPqohkjQhi5FCTrpZpeh
osfq7LLJNjy0ZlHIpS5DS1g3ecuzHVUOXdOxCi8CjmV/9g/F7fi2pWR8pX4x
dHT12DOV7UhfaJKWVxfDeQ1adcqeDvTsaNxn4XUFstfu+/J8QQfeKDB0G565
An6RftwLkx142CPLlplNQB27t4f1LYU9bmWGGnkE2Fxxc7jlROHXrrIFmYiA
SL+0swu7KPxAn+t0LSJANpAqLaVTmOjIiaDfICDLr6Z+2o1CviVdvKOOgMG4
DZuTfCi8pj9tYD5BgHxW+wQ/hEJNPa25sbcEsMaLjYdCKYzUNR8VTxPQU3ew
dCuHQqsV7Or1CgIUDx0D2yIovK3W6mXymYCnUvsw1cMUorI41WANCavDHeSx
8RSafpRGPzIiYY21f1VzAoUpise+QmMS/F2a2PqJFDLfaZnqbiBBNJjHruBS
2PVnbJ2WJQmxjWEfXyZTaDshvNpuTcKebuZj61QKs1+XC9LtSAiGrJxTPAr9
5KMB6jtJkI/5SldlUHh3bJ4hcyRhmf/AumA+hUajRltTdpHQcqc9vCKTwoQR
+5WudBKOllrlfhJQ+Oy598clBgk6TWpi9wsU/guEZXpW
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVxXk01AkcAHAhoQO78Ry7SnomKopaL4v5oiYr6ZCrpkKuMq4xZviZbIaQ
0swwbn6/sR3Tq7RSL7ul+SaqVY6U8OwoUpMcYZTloXb3j8/7WITG7Q9XV1NT
2/2f/x9RzXszIhbT1w+VnD7gNXK/7bK21faqQboOKcssM3gi71zGDzKpmqLr
DQ2XzWl2y7tx65RGlQY0HG6ZbVhQyoNKv4NZ6feQFNCgu29mWm6qla6cklqC
cdI618lJLSSc/9g2KXWA7IbOXdwPRni123dwXOoB/+wopd18aYWi3vSF7ZwD
EDxSC/JKR3xJZZeLjx2BXbQVd2kxbsgIvOdxUj8MQtpUVKGCgb/MhVYoAo9D
17ViAbPaG4VnLORzjFjoZd7UUWjsQ1cTz4HQ9gRgdb9V0fp9Mf/B7HRbLAfM
aoui31z0x5y+nyZNB7igflhZPbUpCDuWtDCdc1LAeabc7uDwIayXjV53UeeD
wjPhbDzrCGaWZes/jksDibJL3MIKxj2776sMzpwClvxnO/s/Q9A2h99e05gO
8txgV7ORULzT/CHsrnEGmI+6FVjah2H1Fv3M7MhMiMdr2y7EhiP3YFphE3Ua
8vZeMWoRR+BQVslRlioLtj5QlTGaI9EmdsYs0zYHJC0ZRYuGotCIqSnWOn0G
usZSpZGmJzAhsVXo/SoXSrlU6oR7NJI7FKfU9c7BSlP95FZfFnLMi20sj+WB
V98650JeDJrWFj++JT0PwBQb0zNj0S7Ob3RJjxCENx9+ouXEIa/0aPigRAT1
4HjOck88YmBdK2EvBp6Vg8iiPR6ZZuH5O/vE8KP7l10TAQlYw540m87Mh/Hf
VlkHKBIwRiYlmRYFwA6QsWj+bEx7c+nkzNMCWOzalsjuYePM51Y/7+MSELDT
7CP2JqI11alK1ywEdp1ue3xTIv7uvXl09Hoh1Cv8My4BB8numtd6XkXAV/Nr
V9VycCA8a2PU5yL4SJNdom1MwryOtKTkgmIwzqiQ1FQm4USHn+CEXQn0mfiv
Fepy8corwYi4pwT0NLLrdH7lYvOdF7sTuKXgZGid6jbMRdfy5GVZFmWgy1k0
0cXkYfTKBSG/uQyWPrEav/eMh2rRF5etjygHB9nyDY82J+NwU9X7FfoV8Gli
3vodmYwu8w11V29UgFOSEY+pkYI7/3rgs86rEii+Q/b5sBS8XGzo/reqEizU
fDrzW1IwZnueLUNEwgI1sMlnA4Ft7lcMFxeQwOtY0zS9kcBNbo3zjYUkmPpY
u1J2BH52mX3qVk7COO2cctyeQMIxPNLlMgnx+19qi7YRmGPjIt1ST4JUcUfy
jEHgRf0xA8shEvYOe3bahRCopac9OzBMwttgE49XoQRGLbfsl46R8G78dQkR
RuB63aAb5lMkTHrtmW2KJLBW45GX6VcS6GWf8gJjCcTpigyDlRSs5XOWpKYS
uPpL3YnnRhQk9XoqzU8SKJh6sU9oQkGPoc31h2kEMia0Vy9fRcE7A5MxHQGB
LR859do2FMgqXngU5xBoOyS88GQDBbdCHA855RIoUl7NzbKj4Frf7aC+swT6
DvYHam6loPz9t6WWQgJvD8zRGx0p+BrxHB+JCDTqN6IJnCj4IRcPRuUTmPx6
8wo3Fwo4zW0KXQmBvQrvL9/oFERR33ZUFxL4L9D7buQ=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Calculated \\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\) for \
various frequencies\"", TraditionalForm], PlotRange -> {{0, 2000}, {-1, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"140.0 GHz\"", "\"140.1 GHz\"", "\"140.2 GHz\"", "\"140.3 GHz\"", 
       "\"140.4 GHz\"", "\"140.5 GHz\"", "\"140.6 GHz\"", "\"140.7 GHz\"", 
       "\"140.8 GHz\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6784503798171473`*^9, 3.6784503852747*^9}, {
   3.678450472171854*^9, 3.6784504907576933`*^9}, 3.6784508342124043`*^9, 
   3.6784509238049498`*^9, 3.678451348340063*^9, 3.6784517161083393`*^9, {
   3.6784517551172*^9, 3.678451776714485*^9}, 3.678451863400926*^9, 
   3.678451914898807*^9, {3.67845197174149*^9, 3.6784519938904743`*^9}, 
   3.6784521030780354`*^9, {3.6784521471163263`*^9, 3.6784521750149803`*^9}, 
   3.678452257033577*^9, {3.678452384680434*^9, 3.678452416851829*^9}, 
   3.678452471231944*^9, 3.678452763420982*^9, 3.678452870027923*^9, 
   3.67845295693598*^9, 3.6784537394413433`*^9, 3.678454675915469*^9, 
   3.678454717470874*^9, 3.67845496932652*^9, 3.678455038444891*^9, 
   3.678455108561636*^9, 3.679137168049917*^9, 3.6791376030291023`*^9, 
   3.6791380278038883`*^9, {3.679138396032148*^9, 3.679138420560895*^9}, 
   3.679138454159481*^9, 3.679396839283029*^9, 3.680003959375991*^9}],

Cell[BoxData["\<\"variouspnplot.png\"\>"], "Output",
 CellChangeTimes->{{3.6784503798171473`*^9, 3.6784503852747*^9}, {
   3.678450472171854*^9, 3.6784504907576933`*^9}, 3.6784508342124043`*^9, 
   3.6784509238049498`*^9, 3.678451348340063*^9, 3.6784517161083393`*^9, {
   3.6784517551172*^9, 3.678451776714485*^9}, 3.678451863400926*^9, 
   3.678451914898807*^9, {3.67845197174149*^9, 3.6784519938904743`*^9}, 
   3.6784521030780354`*^9, {3.6784521471163263`*^9, 3.6784521750149803`*^9}, 
   3.678452257033577*^9, {3.678452384680434*^9, 3.678452416851829*^9}, 
   3.678452471231944*^9, 3.678452763420982*^9, 3.678452870027923*^9, 
   3.67845295693598*^9, 3.6784537394413433`*^9, 3.678454675915469*^9, 
   3.678454717470874*^9, 3.67845496932652*^9, 3.678455038444891*^9, 
   3.678455108561636*^9, 3.679137168049917*^9, 3.6791376030291023`*^9, 
   3.6791380278038883`*^9, {3.679138396032148*^9, 3.679138420560895*^9}, 
   3.679138454159481*^9, 3.679396839283029*^9, 3.6800039597932587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"alphaDist", "[", 
  RowBox[{"aa", ",", "mm2", ",", "ss", ",", "ff"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"betaDist", "[", 
  RowBox[{"aa", ",", "mm1", ",", "ss", ",", "ff"}], "]"}]}], "Input",
 CellChangeTimes->{{3.679396799207501*^9, 3.679396850702791*^9}, {
  3.679396906319216*^9, 3.67939691136353*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"aa", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ff", "-", "mm2"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["ss", "2"]}]]}]]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "ss"}]]], "Output",
 CellChangeTimes->{{3.679396801518107*^9, 3.6793968512545443`*^9}, 
   3.679396911906869*^9, 3.680003959878621*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"aa", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ff", "-", "mm1"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["ss", "2"]}]]}]]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "ss"}]]], "Output",
 CellChangeTimes->{{3.679396801518107*^9, 3.6793968512545443`*^9}, 
   3.679396911906869*^9, 3.680003959905711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", "cSimpl"}], "/.", "simplToConst"}], "/.", 
   "constToParam"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.680003969979329*^9, 3.68000398706737*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"c", " ", "t1n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
  RowBox[{
   RowBox[{"t1e", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "s"}], "+", "\[Alpha]", "+", "\[Beta]"}], ")"}]}], 
   "+", 
   RowBox[{"c", " ", "t1n", " ", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      RowBox[{"s", " ", "\[Alpha]"}], "+", "\[Beta]", "+", 
      RowBox[{"s", " ", "\[Beta]"}], "+", 
      RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}]}], ")"}]}]}]]], "Output",\

 CellChangeTimes->{{3.680003983790601*^9, 3.6800039876197844`*^9}}]
}, Open  ]]
},
WindowSize->{1920, 1021},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 16542, 424, 1194, "Input"],
Cell[17125, 448, 3032, 46, 32, "Output"],
Cell[20160, 496, 14770, 249, 374, "Output"],
Cell[34933, 747, 2558, 36, 32, "Output"],
Cell[37494, 785, 38525, 675, 385, "Output"],
Cell[76022, 1462, 2556, 36, 32, "Output"],
Cell[78581, 1500, 13898, 255, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92516, 1760, 13076, 331, 1236, "Input"],
Cell[105595, 2093, 89374, 1604, 390, "Output"],
Cell[194972, 3699, 2187, 31, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197196, 3735, 5884, 147, 456, "Input"],
Cell[203083, 3884, 31617, 569, 387, "Output"],
Cell[234703, 4455, 19272, 361, 380, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254012, 4821, 2631, 63, 165, "Input"],
Cell[256646, 4886, 66973, 1254, 378, "Output"],
Cell[323622, 6142, 989, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324648, 6160, 339, 7, 55, "Input"],
Cell[324990, 6169, 482, 15, 74, "Output"],
Cell[325475, 6186, 482, 15, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325994, 6206, 248, 7, 32, "Input"],
Cell[326245, 6215, 647, 19, 51, "Output"]
}, Open  ]]
}
]
*)

